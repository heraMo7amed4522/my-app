{
    "info": {
        "_postman_id": "12345678-1234-1234-1234-123456789012",
        "name": "GraphQL Gateway API Tests",
        "description": "Postman collection to test GraphQL endpoints in the gateway service including auth, feedback, quiz, user-progress, and upload",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Auth Mutations",
            "item": [
                {
                    "name": "Firebase Authentication",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AuthenticateWithFirebase($input: FirebaseAuthInput!) {\n  authenticateWithFirebase(input: $input) {\n    statusCode\n    message\n    tokens {\n      accessToken\n      refreshToken\n      expiresIn\n      user {\n        id\n        email\n        fullName\n        role\n      }\n    }\n    error\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"idToken\": \"firebase-id-token-here\",\n    \"provider\": \"google\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Feedback Queries",
            "item": [
                {
                    "name": "Get Template Feedback",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTemplateFeedback($templateId: String!, $page: Int, $limit: Int) {\n  getTemplateFeedback(templateId: $templateId, page: $page, limit: $limit) {\n    statusCode\n    message\n    feedbackList {\n      feedbacks {\n        id\n        templateId\n        userId\n        rating\n        comment\n        createdAt\n        updatedAt\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"templateId\": \"{{templateId}}\",\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Feedback Statistics",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetFeedbackStatistics($templateId: String!) {\n  getFeedbackStatistics(templateId: $templateId) {\n    statusCode\n    message\n    statistics {\n      totalFeedbacks\n      averageRating\n      ratingDistribution {\n        rating\n        count\n        percentage\n      }\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"templateId\": \"{{templateId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Feedback Mutations",
            "item": [
                {
                    "name": "Submit Feedback",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation SubmitFeedback($input: SubmitFeedbackInput!) {\n  submitFeedback(input: $input) {\n    statusCode\n    message\n    feedback {\n      id\n      templateId\n      userId\n      rating\n      comment\n      createdAt\n      updatedAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"templateId\": \"{{templateId}}\",\n    \"userId\": \"{{userId}}\",\n    \"rating\": 5,\n    \"comment\": \"Excellent historical template! Very informative and well-structured.\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Feedback",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateFeedback($id: String!, $input: UpdateFeedbackInput!) {\n  updateFeedback(id: $id, input: $input) {\n    statusCode\n    message\n    feedback {\n      id\n      templateId\n      userId\n      rating\n      comment\n      createdAt\n      updatedAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"id\": \"{{feedbackId}}\",\n  \"input\": {\n    \"rating\": 4,\n    \"comment\": \"Updated: Good template with room for improvement in some sections.\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Feedback",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteFeedback($id: String!) {\n  deleteFeedback(id: $id) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"id\": \"{{feedbackId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Quiz Queries",
            "item": [
                {
                    "name": "Get Quizzes By Section",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetQuizzesBySection($sectionId: String!) {\n  getQuizzesBySection(sectionId: $sectionId) {\n    statusCode\n    message\n    quizzes {\n      quizzes {\n        id\n        sectionId\n        question\n        options {\n          key\n          value\n        }\n        correctAnswer\n        explanation\n        difficulty\n        createdAt\n      }\n      totalCount\n      page\n      limit\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"sectionId\": \"{{sectionId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Quiz By ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetQuizById($id: String!) {\n  getQuizById(id: $id) {\n    statusCode\n    message\n    quiz {\n      id\n      sectionId\n      question\n      options {\n        key\n        value\n      }\n      correctAnswer\n      explanation\n      difficulty\n      createdAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"id\": \"{{quizId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get User Quiz History",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetUserQuizHistory($userId: String!) {\n  getUserQuizHistory(userId: $userId) {\n    statusCode\n    message\n    quizResponses {\n      id\n      userId\n      quizId\n      selectedOption\n      isCorrect\n      answeredAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{userId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Quiz Statistics",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetQuizStatistics($quizId: String!) {\n  getQuizStatistics(quizId: $quizId) {\n    statusCode\n    message\n    statistics {\n      totalAttempts\n      correctAnswers\n      uniqueUsers\n      successRate\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"quizId\": \"{{quizId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Quiz Mutations",
            "item": [
                {
                    "name": "Create Quiz",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreateQuiz($input: CreateQuizInput!) {\n  createQuiz(input: $input) {\n    statusCode\n    message\n    quiz {\n      id\n      sectionId\n      question\n      options {\n        key\n        value\n      }\n      correctAnswer\n      explanation\n      difficulty\n      createdAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"sectionId\": \"section-123\",\n    \"question\": \"What was the capital of ancient Egypt?\",\n    \"options\": [\n      {\"key\": \"A\", \"value\": \"Memphis\"},\n      {\"key\": \"B\", \"value\": \"Thebes\"},\n      {\"key\": \"C\", \"value\": \"Alexandria\"},\n      {\"key\": \"D\", \"value\": \"Cairo\"}\n    ],\n    \"correctAnswer\": \"A\",\n    \"explanation\": \"Memphis was the ancient capital of Egypt during the Old Kingdom period.\",\n    \"difficulty\": \"medium\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Quiz",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateQuiz($id: String!, $input: UpdateQuizInput!) {\n  updateQuiz(id: $id, input: $input) {\n    statusCode\n    message\n    quiz {\n      id\n      sectionId\n      question\n      options {\n        key\n        value\n      }\n      correctAnswer\n      explanation\n      difficulty\n      createdAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"id\": \"{{quizId}}\",\n  \"input\": {\n    \"question\": \"What was the primary capital of ancient Egypt during the Old Kingdom?\",\n    \"explanation\": \"Memphis served as the capital of ancient Egypt during the Old Kingdom period and was a major administrative center.\",\n    \"difficulty\": \"hard\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Quiz",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteQuiz($id: String!) {\n  deleteQuiz(id: $id) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"id\": \"{{quizId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Submit Quiz Answer",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation SubmitQuizAnswer($input: SubmitQuizAnswerInput!) {\n  submitQuizAnswer(input: $input) {\n    statusCode\n    message\n    quizResponses {\n      id\n      userId\n      quizId\n      selectedOption\n      isCorrect\n      answeredAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"quizId\": \"{{quizId}}\",\n    \"selectedOption\": \"A\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Auth Mutations",
            "item": [
                {
                    "name": "Firebase Authentication",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AuthenticateWithFirebase($input: FirebaseAuthInput!) {\n  authenticateWithFirebase(input: $input) {\n    statusCode\n    message\n    tokens {\n      accessToken\n      refreshToken\n      expiresIn\n      user {\n        id\n        email\n        fullName\n        role\n      }\n    }\n    error\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"idToken\": \"firebase-id-token-here\",\n    \"provider\": \"google\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "User Queries",
            "item": [
                {
                    "name": "Get User By Email",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetUserByEmail($email: String!) {\n  getUserByEmail(email: $email) {\n    statusCode\n    message\n    user {\n      id\n      fullName\n      email\n      countryCode\n      phoneNumber\n      role\n      createAt\n      updateAt\n    }\n  }\n}",
                                "variables": "{\n  \"email\": \"test@example.com\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "User Mutations",
            "item": [
                {
                    "name": "Create New User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreateUser($input: CreateUserInput!) {\n  createUser(input: $input) {\n    statusCode\n    message\n    user {\n      id\n      fullName\n      email\n      countryCode\n      phoneNumber\n      role\n      createAt\n      updateAt\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"fullName\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"securePassword123\",\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"1234567890\",\n    \"role\": \"user\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Login User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation LoginUser($email: String!, $password: String!) {\n  loginUser(email: $email, password: $password) {\n    statusCode\n    message\n    user {\n      id\n      fullName\n      email\n      role\n    }\n    accessToken\n  }\n}",
                                "variables": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securePassword123\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Forget Password",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation ForgetPassword($email: String!, $type: String!) {\n  forgetPassword(email: $email, type: $type) {\n    statusCode\n    message\n    verifyCode\n  }\n}",
                                "variables": "{\n  \"email\": \"john.doe@example.com\",\n  \"type\": \"1\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Verify Code",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation VerifyCode($email: String!, $verifyCode: String!) {\n  verifyCode(email: $email, verifyCode: $verifyCode) {\n    statusCode\n    message\n    response\n  }\n}",
                                "variables": "{\n  \"email\": \"john.doe@example.com\",\n  \"verifyCode\": \"123456\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Reset Password",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation ResetPassword($email: String!, $password: String!) {\n  resetPassword(email: $email, password: $password) {\n    statusCode\n    message\n    response\n  }\n}",
                                "variables": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"newSecurePassword123\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateUser($input: UpdateUserInput!) {\n  updateUser(input: $input) {\n    statusCode\n    message\n    user {\n      id\n      fullName\n      email\n      countryCode\n      phoneNumber\n      role\n      updateAt\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"email\": \"john.doe@example.com\",\n    \"fullName\": \"John Updated Doe\",\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"9876543210\",\n    \"role\": \"admin\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteUser($userId: String!) {\n  deleteUser(userId: $userId) {\n    statusCode\n    message\n    response\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{userIdToDelete}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Card Queries",
            "item": [
                {
                    "name": "Get Card By ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetCardById($id: String!) {\n  getCardById(id: $id) {\n    statusCode\n    message\n    card {\n      id\n      userId\n      cardNumber\n      cardHolderName\n      expirationDate\n      cvv\n      status\n      cardType\n      balance\n      createAt\n      updateAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"id\": \"{{cardId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Cards By User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetCardsByUser($input: GetCardsByUserInput!) {\n  getCardsByUser(input: $input) {\n    statusCode\n    message\n    cards {\n      id\n      userId\n      cardNumber\n      cardHolderName\n      expirationDate\n      status\n      cardType\n      balance\n      createAt\n      updateAt\n    }\n    totalCount\n    currentPage\n    totalPages\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"page\": 1,\n    \"limit\": 10\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Search Cards",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query SearchCards($input: SearchCardInput!) {\n  searchCards(input: $input) {\n    statusCode\n    message\n    cards {\n      id\n      userId\n      cardNumber\n      cardHolderName\n      expirationDate\n      status\n      cardType\n      balance\n      createAt\n      updateAt\n    }\n    totalCount\n    currentPage\n    totalPages\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"cardHolderName\": \"John\",\n    \"status\": \"ACTIVE\",\n    \"page\": 1,\n    \"limit\": 10\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Find Cards By Status",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query FindCardsByStatus($input: FindCardsByStatusInput!) {\n  findCardsByStatus(input: $input) {\n    statusCode\n    message\n    cards {\n      id\n      userId\n      cardNumber\n      cardHolderName\n      expirationDate\n      status\n      cardType\n      balance\n      createAt\n      updateAt\n    }\n    totalCount\n    currentPage\n    totalPages\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"status\": \"ACTIVE\",\n    \"page\": 1,\n    \"limit\": 10\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Card Mutations",
            "item": [
                {
                    "name": "Create New Card",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreateCard($input: CreateCardInput!) {\n  createCard(input: $input) {\n    statusCode\n    message\n    card {\n      id\n      userId\n      cardNumber\n      cardHolderName\n      expirationDate\n      cvv\n      status\n      cardType\n      balance\n      createAt\n      updateAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"cardNumber\": \"4111111111111111\",\n    \"cardHolderName\": \"John Doe\",\n    \"expirationDate\": \"12/25\",\n    \"cvv\": \"123\",\n    \"cardType\": \"VISA\",\n    \"balance\": \"1000.00\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Card",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateCard($input: UpdateCardInput!) {\n  updateCard(input: $input) {\n    statusCode\n    message\n    card {\n      id\n      userId\n      cardNumber\n      cardHolderName\n      expirationDate\n      cvv\n      status\n      cardType\n      balance\n      createAt\n      updateAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"id\": \"{{cardId}}\",\n    \"cardHolderName\": \"John Updated Doe\",\n    \"expirationDate\": \"12/26\",\n    \"cvv\": \"456\",\n    \"cardType\": \"MASTERCARD\",\n    \"balance\": \"1500.00\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Card Status",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateCardStatus($input: UpdateCardStatusInput!) {\n  updateCardStatus(input: $input) {\n    statusCode\n    message\n    card {\n      id\n      userId\n      cardNumber\n      cardHolderName\n      expirationDate\n      status\n      cardType\n      balance\n      createAt\n      updateAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"id\": \"{{cardId}}\",\n    \"status\": \"INACTIVE\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Card",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteCard($id: String!) {\n  deleteCard(id: $id) {\n    statusCode\n    message\n    card {\n      id\n      userId\n      cardNumber\n      cardHolderName\n      status\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"id\": \"{{cardId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Process Stripe Payment",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation ProcessStripePayment($input: StripePaymentInput!) {\n  processStripePayment(input: $input) {\n    statusCode\n    message\n    paymentIntentId\n    clientSecret\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"cardId\": \"{{cardId}}\",\n    \"amount\": 2000,\n    \"currency\": \"usd\",\n    \"description\": \"Test payment for card service\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Transaction Queries",
            "item": [
                {
                    "name": "Get Transaction By ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTransactionByID($id: String!) {\n  getTransactionByID(id: $id) {\n    id\n    userId\n    cardId\n    amount\n    currency\n    description\n    status\n    type\n    createdAt\n    updatedAt\n  }\n}",
                                "variables": "{\n  \"id\": \"{{transactionId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Transactions By User ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTransactionsByUserID($userId: String!) {\n  getTransactionsByUserID(userId: $userId) {\n    id\n    userId\n    cardId\n    amount\n    currency\n    description\n    status\n    type\n    createdAt\n    updatedAt\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{userId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Transactions By Card ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTransactionsByCardID($cardId: String!) {\n  getTransactionsByCardID(cardId: $cardId) {\n    id\n    userId\n    cardId\n    amount\n    currency\n    description\n    status\n    type\n    createdAt\n    updatedAt\n  }\n}",
                                "variables": "{\n  \"cardId\": \"{{cardId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Transactions By Status",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTransactionsByStatus($status: String!) {\n  getTransactionsByStatus(status: $status) {\n    id\n    userId\n    cardId\n    amount\n    currency\n    description\n    status\n    type\n    createdAt\n    updatedAt\n  }\n}",
                                "variables": "{\n  \"status\": \"COMPLETED\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Transactions By Date",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTransactionsByDate($startDate: String!, $endDate: String!) {\n  getTransactionsByDate(startDate: $startDate, endDate: $endDate) {\n    id\n    userId\n    cardId\n    amount\n    currency\n    description\n    status\n    type\n    createdAt\n    updatedAt\n  }\n}",
                                "variables": "{\n  \"startDate\": \"2024-01-01\",\n  \"endDate\": \"2024-12-31\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Wallet Queries",
            "item": [
                {
                    "name": "Get Wallet By User ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetWalletByUserID($userId: String!) {\n  getWalletByUserID(userId: $userId) {\n    statusCode\n    message\n    wallet {\n      id\n      userId\n      balance\n      currency\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{userId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Wallet Balance",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetWalletBalance($walletId: String!) {\n  getWalletBalance(walletId: $walletId) {\n    statusCode\n    message\n    balance\n    currency\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"walletId\": \"{{walletId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Wallet Transactions",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetWalletTransactions($input: GetWalletTransactionsInput!) {\n  getWalletTransactions(input: $input) {\n    statusCode\n    message\n    transactions {\n      id\n      walletId\n      type\n      amount\n      currency\n      description\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"walletId\": \"{{walletId}}\",\n    \"page\": 1,\n    \"limit\": 10\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Wallet Mutations",
            "item": [
                {
                    "name": "Create Wallet",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreateWallet($input: CreateWalletInput!) {\n  createWallet(input: $input) {\n    statusCode\n    message\n    wallet {\n      id\n      userId\n      balance\n      currency\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"currency\": \"USD\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Fund Wallet",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation FundWallet($input: FundWalletInput!) {\n  fundWallet(input: $input) {\n    statusCode\n    message\n    wallet {\n      id\n      userId\n      balance\n      currency\n      updatedAt\n    }\n    transaction {\n      id\n      walletId\n      type\n      amount\n      currency\n      description\n      createdAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"walletId\": \"{{walletId}}\",\n    \"amount\": 100.00,\n    \"currency\": \"USD\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Deduct From Wallet",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeductFromWallet($input: DeductFromWalletInput!) {\n  deductFromWallet(input: $input) {\n    statusCode\n    message\n    wallet {\n      id\n      userId\n      balance\n      currency\n      updatedAt\n    }\n    transaction {\n      id\n      walletId\n      type\n      amount\n      currency\n      description\n      createdAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"walletId\": \"{{walletId}}\",\n    \"amount\": 25.00,\n    \"currency\": \"USD\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Refund To Wallet",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation RefundToWallet($input: RefundToWalletInput!) {\n  refundToWallet(input: $input) {\n    statusCode\n    message\n    wallet {\n      id\n      userId\n      balance\n      currency\n      updatedAt\n    }\n    transaction {\n      id\n      walletId\n      type\n      amount\n      currency\n      description\n      createdAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"walletId\": \"{{walletId}}\",\n    \"amount\": 50.00,\n    \"currency\": \"USD\",\n    \"originalTransactionId\": \"{{transactionId}}\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },

        {
            "name": "History Template Queries",
            "item": [
                {
                    "name": "Get Template By ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTemplateById($id: String!) {\n  getTemplateById(id: $id) {\n    statusCode\n    message\n    template {\n      id\n      title\n      description\n      era\n      dynasty\n      pharaohId\n      difficulty\n      thumbnailUrl\n      language\n      isActive\n      version\n      publishedAt\n      createdAt\n      updatedAt\n      sections {\n        id\n        templateId\n        title\n        subtitle\n        contentType\n        content\n        orderIndex\n        optional\n        createdAt\n      }\n      tags\n    }\n  }\n}",
                                "variables": "{\n  \"id\": \"{{templateId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get All Templates",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetAllTemplates($page: Int, $limit: Int, $sortBy: String, $order: String) {\n  getAllTemplates(page: $page, limit: $limit, sortBy: $sortBy, order: $order) {\n    statusCode\n    message\n    templates {\n      templates {\n        id\n        title\n        description\n        era\n        dynasty\n        pharaohId\n        difficulty\n        thumbnailUrl\n        language\n        isActive\n        version\n        publishedAt\n        createdAt\n        updatedAt\n        tags\n      }\n      totalCount\n      page\n      limit\n    }\n  }\n}",
                                "variables": "{\n  \"page\": 1,\n  \"limit\": 10,\n  \"sortBy\": \"createdAt\",\n  \"order\": \"desc\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Templates By Era",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTemplatesByEra($era: String!, $page: Int, $limit: Int) {\n  getTemplatesByEra(era: $era, page: $page, limit: $limit) {\n    statusCode\n    message\n    templates {\n      templates {\n        id\n        title\n        description\n        era\n        dynasty\n        pharaohId\n        difficulty\n        thumbnailUrl\n        language\n        isActive\n        createdAt\n        updatedAt\n        tags\n      }\n      totalCount\n      page\n      limit\n    }\n  }\n}",
                                "variables": "{\n  \"era\": \"Old Kingdom\",\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Templates By Dynasty",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTemplatesByDynasty($dynasty: Int!, $page: Int, $limit: Int) {\n  getTemplatesByDynasty(dynasty: $dynasty, page: $page, limit: $limit) {\n    statusCode\n    message\n    templates {\n      templates {\n        id\n        title\n        description\n        era\n        dynasty\n        pharaohId\n        difficulty\n        thumbnailUrl\n        language\n        isActive\n        createdAt\n        updatedAt\n        tags\n      }\n      totalCount\n      page\n      limit\n    }\n  }\n}",
                                "variables": "{\n  \"dynasty\": 4,\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Templates By Pharaoh",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTemplatesByPharaoh($pharaohId: String!, $page: Int, $limit: Int) {\n  getTemplatesByPharaoh(pharaohId: $pharaohId, page: $page, limit: $limit) {\n    statusCode\n    message\n    templates {\n      templates {\n        id\n        title\n        description\n        era\n        dynasty\n        pharaohId\n        difficulty\n        thumbnailUrl\n        language\n        isActive\n        createdAt\n        updatedAt\n        tags\n      }\n      totalCount\n      page\n      limit\n    }\n  }\n}",
                                "variables": "{\n  \"pharaohId\": \"{{pharaohId}}\",\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Templates By Difficulty",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTemplatesByDifficulty($difficulty: String!, $page: Int, $limit: Int) {\n  getTemplatesByDifficulty(difficulty: $difficulty, page: $page, limit: $limit) {\n    statusCode\n    message\n    templates {\n      templates {\n        id\n        title\n        description\n        era\n        dynasty\n        pharaohId\n        difficulty\n        thumbnailUrl\n        language\n        isActive\n        createdAt\n        updatedAt\n        tags\n      }\n      totalCount\n      page\n      limit\n    }\n  }\n}",
                                "variables": "{\n  \"difficulty\": \"easy\",\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Search Templates",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query SearchTemplates($query: String!, $fields: [String], $page: Int, $limit: Int) {\n  searchTemplates(query: $query, fields: $fields, page: $page, limit: $limit) {\n    statusCode\n    message\n    templates {\n      templates {\n        id\n        title\n        description\n        era\n        dynasty\n        pharaohId\n        difficulty\n        thumbnailUrl\n        language\n        isActive\n        createdAt\n        updatedAt\n        tags\n      }\n      totalCount\n      page\n      limit\n    }\n  }\n}",
                                "variables": "{\n  \"query\": \"pyramid\",\n  \"fields\": [\"title\", \"description\"],\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Templates By Tag",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTemplatesByTag($tag: String!, $page: Int, $limit: Int) {\n  getTemplatesByTag(tag: $tag, page: $page, limit: $limit) {\n    statusCode\n    message\n    templates {\n      templates {\n        id\n        title\n        description\n        era\n        dynasty\n        pharaohId\n        difficulty\n        thumbnailUrl\n        language\n        isActive\n        createdAt\n        updatedAt\n        tags\n      }\n      totalCount\n      page\n      limit\n    }\n  }\n}",
                                "variables": "{\n  \"tag\": \"architecture\",\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Related Templates",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetRelatedTemplates($templateId: String!, $limit: Int) {\n  getRelatedTemplates(templateId: $templateId, limit: $limit) {\n    statusCode\n    message\n    templates {\n      templates {\n        id\n        title\n        description\n        era\n        dynasty\n        pharaohId\n        difficulty\n        thumbnailUrl\n        language\n        isActive\n        createdAt\n        updatedAt\n        tags\n      }\n      totalCount\n      page\n      limit\n    }\n  }\n}",
                                "variables": "{\n  \"templateId\": \"{{templateId}}\",\n  \"limit\": 5\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "History Template Mutations",
            "item": [
                {
                    "name": "Create Template",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreateTemplate($input: CreateTemplateInput!) {\n  createTemplate(input: $input) {\n    statusCode\n    message\n    template {\n      id\n      title\n      description\n      era\n      dynasty\n      pharaohId\n      difficulty\n      thumbnailUrl\n      language\n      isActive\n      version\n      publishedAt\n      createdAt\n      updatedAt\n      tags\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"title\": \"The Great Pyramid of Giza\",\n    \"description\": \"Learn about the construction and significance of the Great Pyramid\",\n    \"era\": \"Old Kingdom\",\n    \"dynasty\": 4,\n    \"pharaohId\": \"{{pharaohId}}\",\n    \"difficulty\": \"medium\",\n    \"thumbnailUrl\": \"https://example.com/pyramid.jpg\",\n    \"language\": \"en\",\n    \"isActive\": true,\n    \"tags\": [\"architecture\", \"pyramid\", \"ancient\"]\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Template",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateTemplate($id: String!, $input: UpdateTemplateInput!) {\n  updateTemplate(id: $id, input: $input) {\n    statusCode\n    message\n    template {\n      id\n      title\n      description\n      era\n      dynasty\n      pharaohId\n      difficulty\n      thumbnailUrl\n      language\n      isActive\n      version\n      publishedAt\n      createdAt\n      updatedAt\n      tags\n    }\n  }\n}",
                                "variables": "{\n  \"id\": \"{{templateId}}\",\n  \"input\": {\n    \"title\": \"Updated: The Great Pyramid of Giza\",\n    \"description\": \"Updated description about the construction and significance of the Great Pyramid\",\n    \"difficulty\": \"hard\",\n    \"isActive\": true,\n    \"tags\": [\"architecture\", \"pyramid\", \"ancient\", \"updated\"]\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Template",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteTemplate($id: String!) {\n  deleteTemplate(id: $id) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"id\": \"{{templateId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "GraphQL Introspection",
            "item": [
                {
                    "name": "Get Schema",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    types {\n      name\n      kind\n      description\n    }\n  }\n}",
                                "variables": "{}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "User Progress Queries",
            "item": [
                {
                    "name": "Get User Progress",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetUserProgress($userId: String!) {\n  getUserProgress(userId: $userId) {\n    statusCode\n    message\n    userProgress {\n      id\n      userId\n      templateId\n      sectionId\n      progress\n      completedAt\n      timeSpent\n      lastAccessedAt\n      createdAt\n      updatedAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{userId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Completed Templates",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetCompletedTemplates($userId: String!, $page: Int, $limit: Int) {\n  getCompletedTemplates(userId: $userId, page: $page, limit: $limit) {\n    statusCode\n    message\n    userProgressList {\n      userProgress {\n        id\n        userId\n        templateId\n        sectionId\n        progress\n        completedAt\n        timeSpent\n        lastAccessedAt\n        createdAt\n        updatedAt\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{userId}}\",\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get User Achievements",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetUserAchievements($userId: String!, $page: Int, $limit: Int) {\n  getUserAchievements(userId: $userId, page: $page, limit: $limit) {\n    statusCode\n    message\n    userAchievementList {\n      userAchievements {\n        id\n        userId\n        achievementId\n        unlockedAt\n        progress\n        achievement {\n          id\n          name\n          description\n          type\n          requirement\n          points\n          iconUrl\n          rarity\n          createdAt\n        }\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{userId}}\",\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Learning Path",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetLearningPath($userId: String!) {\n  getLearningPath(userId: $userId) {\n    statusCode\n    message\n    learningPath {\n      userId\n      currentLevel\n      totalXp\n      completedTemplates\n      totalTemplates\n      completionPercentage\n      recommendedNextTemplates\n      strengths\n      areasForImprovement\n      estimatedTimeToComplete\n      lastActivityDate\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{userId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "User Progress Mutations",
            "item": [
                {
                    "name": "Update Progress",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateProgress($input: UpdateProgressInput!) {\n  updateProgress(input: $input) {\n    statusCode\n    message\n    userProgress {\n      id\n      userId\n      templateId\n      sectionId\n      progress\n      completedAt\n      timeSpent\n      lastAccessedAt\n      createdAt\n      updatedAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"templateId\": \"{{templateId}}\",\n    \"sectionId\": \"{{sectionId}}\",\n    \"progress\": 75.5,\n    \"timeSpent\": 1800\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Unlock Achievement",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UnlockAchievement($input: UnlockAchievementInput!) {\n  unlockAchievement(input: $input) {\n    statusCode\n    message\n    userAchievement {\n      id\n      userId\n      achievementId\n      unlockedAt\n      progress\n      achievement {\n        id\n        name\n        description\n        type\n        requirement\n        points\n        iconUrl\n        rarity\n        createdAt\n      }\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"achievementId\": \"{{achievementId}}\",\n    \"progress\": 100.0\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Auth Mutations",
            "item": [
                {
                    "name": "Firebase Authentication",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AuthenticateWithFirebase($input: FirebaseAuthInput!) {\n  authenticateWithFirebase(input: $input) {\n    statusCode\n    message\n    tokens {\n      accessToken\n      refreshToken\n      expiresIn\n      user {\n        id\n        email\n        fullName\n        role\n      }\n    }\n    error\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"idToken\": \"firebase-id-token-here\",\n    \"provider\": \"google\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Pharaoh Queries",
            "item": [
                {
                    "name": "Get Pharaoh By ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetPharaohById($id: String!) {\n  getPharaohById(id: $id) {\n    statusCode\n    message\n    pharaoh {\n      id\n      name\n      birthName\n      throneName\n      epithet\n      dynasty\n      period\n      reignStart\n      reignEnd\n      lengthOfReignYears\n      father\n      mother\n      capital\n      majorAchievements\n      burialSite\n      imageUrl\n      rarity\n      userRating\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"id\": \"{{pharaohId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get All Pharaohs",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetAllPharaohs($input: GetAllPharaohsInput) {\n  getAllPharaohs(input: $input) {\n    statusCode\n    message\n    pharaohs {\n      id\n      name\n      dynasty\n      period\n      reignStart\n      reignEnd\n      epithet\n      capital\n      rarity\n      userRating\n      imageUrl\n      createdAt\n      updatedAt\n    }\n    totalCount\n    page\n    limit\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"page\": 1,\n    \"limit\": 10,\n    \"sortBy\": \"dynasty\",\n    \"order\": \"asc\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Pharaohs By Dynasty",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetPharaohsByDynasty($input: GetPharaohsByDynastyInput!) {\n  getPharaohsByDynasty(input: $input) {\n    statusCode\n    message\n    pharaohs {\n      id\n      name\n      dynasty\n      period\n      reignStart\n      reignEnd\n      epithet\n      capital\n      majorAchievements\n      imageUrl\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"dynasty\": 18\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Pharaohs By Period",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetPharaohsByPeriod($input: GetPharaohsByPeriodInput!) {\n  getPharaohsByPeriod(input: $input) {\n    statusCode\n    message\n    pharaohs {\n      id\n      name\n      dynasty\n      period\n      reignStart\n      reignEnd\n      epithet\n      capital\n      majorAchievements\n      imageUrl\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"period\": \"New Kingdom\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Search Pharaohs",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query SearchPharaohs($input: SearchPharaohsInput!) {\n  searchPharaohs(input: $input) {\n    statusCode\n    message\n    pharaohs {\n      id\n      name\n      dynasty\n      period\n      epithet\n      majorAchievements\n      capital\n      imageUrl\n      rarity\n      userRating\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"query\": \"Ramesses\",\n    \"fields\": [\"name\", \"epithet\", \"major_achievements\"]\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Pharaohs By Rarity",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetPharaohsByRarity($input: GetPharaohsByRarityInput!) {\n  getPharaohsByRarity(input: $input) {\n    statusCode\n    message\n    pharaohs {\n      id\n      name\n      dynasty\n      period\n      epithet\n      rarity\n      userRating\n      imageUrl\n      unlockInGame\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"rarity\": \"legendary\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Pharaoh Mutations",
            "item": [
                {
                    "name": "Create New Pharaoh",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreatePharaoh($input: CreatePharaohInput!) {\n  createPharaoh(input: $input) {\n    statusCode\n    message\n    pharaoh {\n      id\n      name\n      birthName\n      throneName\n      epithet\n      dynasty\n      period\n      reignStart\n      reignEnd\n      father\n      mother\n      capital\n      majorAchievements\n      burialSite\n      imageUrl\n      rarity\n      traits {\n        leadership\n        military\n        diplomacy\n        wisdom\n        charisma\n      }\n      createdAt\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"name\": \"Tutankhamun\",\n    \"birthName\": \"Tutankhaten\",\n    \"throneName\": \"Nebkheperure\",\n    \"epithet\": \"The Boy King\",\n    \"dynasty\": 18,\n    \"period\": \"New Kingdom\",\n    \"reignStart\": -1332,\n    \"reignEnd\": -1323,\n    \"lengthOfReignYears\": 9,\n    \"father\": \"Akhenaten\",\n    \"capital\": \"Memphis\",\n    \"majorAchievements\": [\"Restored traditional Egyptian religion\", \"Moved capital back to Memphis\"],\n    \"burialSite\": \"Valley of the Kings (KV62)\",\n    \"tombDiscovered\": true,\n    \"discoveryYear\": 1922,\n    \"rarity\": \"legendary\",\n    \"traits\": {\n      \"leadership\": 6,\n      \"military\": 4,\n      \"diplomacy\": 7,\n      \"wisdom\": 8,\n      \"charisma\": 9\n    }\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Pharaoh",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdatePharaoh($input: UpdatePharaohInput!) {\n  updatePharaoh(input: $input) {\n    statusCode\n    message\n    pharaoh {\n      id\n      name\n      epithet\n      dynasty\n      period\n      reignStart\n      reignEnd\n      majorAchievements\n      burialSite\n      imageUrl\n      rarity\n      userRating\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"id\": \"{{pharaohId}}\",\n    \"pharaoh\": {\n      \"name\": \"Tutankhamun\",\n      \"epithet\": \"The Golden Pharaoh\",\n      \"majorAchievements\": [\"Restored traditional Egyptian religion\", \"Moved capital back to Memphis\", \"Famous golden burial mask\"],\n      \"imageUrl\": \"https://example.com/tutankhamun-updated.jpg\",\n      \"userRating\": 9.5\n    }\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Pharaoh Rating",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdatePharaohRating($input: UpdatePharaohRatingInput!) {\n  updatePharaohRating(input: $input) {\n    statusCode\n    message\n    pharaoh {\n      id\n      name\n      userRating\n      popularityScore\n      updatedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"id\": \"{{pharaohId}}\",\n    \"rating\": 8.7\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Pharaoh",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeletePharaoh($id: String!) {\n  deletePharaoh(id: $id) {\n    statusCode\n    message\n    success\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"id\": \"{{pharaohIdToDelete}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Upload Queries",
            "item": [
                {
                    "name": "Get File URL",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetFileURL($input: GetFileURLInput!) {\n  getFileURL(input: $input) {\n    statusCode\n    message\n    success {\n      signedUrl\n      expiresAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"fileKey\": \"{{fileKey}}\",\n    \"expiresIn\": 3600\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Upload Mutations",
            "item": [
                {
                    "name": "Upload File",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UploadFile($input: UploadFileInput!) {\n  uploadFile(input: $input) {\n    statusCode\n    message\n    success {\n      fileUrl\n      fileKey\n      fileId\n      fileSize\n      uploadedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"file\": \"{{base64FileData}}\",\n    \"fileName\": \"example-image.jpg\",\n    \"contentType\": \"image/jpeg\",\n    \"userId\": \"{{userId}}\",\n    \"fileType\": \"IMAGE\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete File",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteFile($input: DeleteFileInput!) {\n  deleteFile(input: $input) {\n    statusCode\n    message\n    success {\n      fileKey\n      deletedAt\n    }\n    error {\n      code\n      message\n      details\n      timestamp\n    }\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"fileKey\": \"{{fileKey}}\",\n    \"userId\": \"{{userId}}\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Chat Queries",
            "item": [
                {
                    "name": "Get Chat History",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetChatHistory($input: GetChatHistoryInput!) {\n  getChatHistory(input: $input) {\n    statusCode\n    message\n    messages {\n      messages {\n        id\n        senderId\n        receiverId\n        chatId\n        groupId\n        content\n        messageType\n        timestamp\n        isEdited\n        editedAt\n        isDeleted\n        deletedAt\n        parentMessageId\n        attachments {\n          id\n          fileName\n          fileUrl\n          fileType\n          fileSize\n        }\n        reactions {\n          userId\n          reactionType\n          timestamp\n        }\n        isPinned\n        pinnedAt\n        pinnedBy\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"chatId\": \"{{chatId}}\",\n    \"page\": 1,\n    \"limit\": 50\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Search Messages",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query SearchMessages($input: SearchMessagesInput!) {\n  searchMessages(input: $input) {\n    statusCode\n    message\n    messages {\n      messages {\n        id\n        senderId\n        receiverId\n        chatId\n        groupId\n        content\n        messageType\n        timestamp\n        isEdited\n        editedAt\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"chatId\": \"{{chatId}}\",\n    \"query\": \"hello\",\n    \"page\": 1,\n    \"limit\": 20\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get User Status",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetUserStatus($userId: String!) {\n  getUserStatus(userId: $userId) {\n    statusCode\n    message\n    userStatus {\n      userId\n      status\n      lastSeen\n      customMessage\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"userId\": \"{{targetUserId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Group Info",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetGroupInfo($groupId: String!) {\n  getGroupInfo(groupId: $groupId) {\n    statusCode\n    message\n    group {\n      id\n      name\n      description\n      avatarUrl\n      createdBy\n      createdAt\n      updatedAt\n      memberCount\n      isPrivate\n      members {\n        userId\n        role\n        joinedAt\n        addedBy\n      }\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"groupId\": \"{{groupId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Call History",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetCallHistory($input: GetCallHistoryInput!) {\n  getCallHistory(input: $input) {\n    statusCode\n    message\n    calls {\n      calls {\n        id\n        callerId\n        receiverId\n        groupId\n        callType\n        status\n        startTime\n        endTime\n        duration\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"page\": 1,\n    \"limit\": 20\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Notifications",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetNotifications($input: GetNotificationsInput!) {\n  getNotifications(input: $input) {\n    statusCode\n    message\n    notifications {\n      notifications {\n        id\n        userId\n        type\n        title\n        content\n        isRead\n        createdAt\n        readAt\n        relatedEntityId\n        relatedEntityType\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"page\": 1,\n    \"limit\": 20\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Scheduled Messages",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetScheduledMessages($input: GetScheduledMessagesInput!) {\n  getScheduledMessages(input: $input) {\n    statusCode\n    message\n    scheduledMessages {\n      scheduledMessages {\n        id\n        chatId\n        groupId\n        senderId\n        content\n        messageType\n        scheduledTime\n        isSent\n        sentAt\n        createdAt\n        attachments {\n          id\n          fileName\n          fileUrl\n          fileType\n          fileSize\n        }\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{userId}}\",\n    \"page\": 1,\n    \"limit\": 20\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Chat Mutations",
            "item": [
                {
                    "name": "Send Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation SendMessage($input: SendMessageInput!) {\n  sendMessage(input: $input) {\n    statusCode\n    message\n    chatMessage {\n      id\n      senderId\n      receiverId\n      chatId\n      groupId\n      content\n      messageType\n      timestamp\n      attachments {\n        id\n        fileName\n        fileUrl\n        fileType\n        fileSize\n      }\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"receiverId\": \"{{receiverId}}\",\n    \"content\": \"Hello! How are you doing today?\",\n    \"messageType\": \"TEXT\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Send Group Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation SendMessage($input: SendMessageInput!) {\n  sendMessage(input: $input) {\n    statusCode\n    message\n    chatMessage {\n      id\n      senderId\n      groupId\n      content\n      messageType\n      timestamp\n      attachments {\n        id\n        fileName\n        fileUrl\n        fileType\n        fileSize\n      }\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"groupId\": \"{{groupId}}\",\n    \"content\": \"Hello everyone! Great to be part of this group.\",\n    \"messageType\": \"TEXT\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Edit Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation EditMessage($input: EditMessageInput!) {\n  editMessage(input: $input) {\n    statusCode\n    message\n    chatMessage {\n      id\n      content\n      isEdited\n      editedAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"messageId\": \"{{messageId}}\",\n    \"newContent\": \"Updated message content\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteMessage($messageId: String!) {\n  deleteMessage(messageId: $messageId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{messageId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Add Reaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AddReaction($input: AddReactionInput!) {\n  addReaction(input: $input) {\n    statusCode\n    message\n    reaction {\n      userId\n      messageId\n      reactionType\n      timestamp\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"messageId\": \"{{messageId}}\",\n    \"reactionType\": \"LIKE\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Remove Reaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation RemoveReaction($input: RemoveReactionInput!) {\n  removeReaction(input: $input) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"messageId\": \"{{messageId}}\",\n    \"reactionType\": \"LIKE\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Pin Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation PinMessage($messageId: String!) {\n  pinMessage(messageId: $messageId) {\n    statusCode\n    message\n    chatMessage {\n      id\n      isPinned\n      pinnedAt\n      pinnedBy\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{messageId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Unpin Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UnpinMessage($messageId: String!) {\n  unpinMessage(messageId: $messageId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{messageId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update User Status",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateUserStatus($input: UpdateUserStatusInput!) {\n  updateUserStatus(input: $input) {\n    statusCode\n    message\n    userStatus {\n      userId\n      status\n      lastSeen\n      customMessage\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"status\": \"ONLINE\",\n    \"customMessage\": \"Working on an exciting project!\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Create Group",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreateGroup($input: CreateGroupInput!) {\n  createGroup(input: $input) {\n    statusCode\n    message\n    group {\n      id\n      name\n      description\n      avatarUrl\n      createdBy\n      createdAt\n      memberCount\n      isPrivate\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"name\": \"Development Team\",\n    \"description\": \"Group for development team discussions\",\n    \"isPrivate\": false,\n    \"memberIds\": [\"{{memberId1}}\", \"{{memberId2}}\"]\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Group",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateGroup($input: UpdateGroupInput!) {\n  updateGroup(input: $input) {\n    statusCode\n    message\n    group {\n      id\n      name\n      description\n      avatarUrl\n      updatedAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"groupId\": \"{{groupId}}\",\n    \"name\": \"Updated Development Team\",\n    \"description\": \"Updated group for development team discussions and planning\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Add Group Member",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AddGroupMember($input: AddGroupMemberInput!) {\n  addGroupMember(input: $input) {\n    statusCode\n    message\n    groupMember {\n      userId\n      groupId\n      role\n      joinedAt\n      addedBy\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"groupId\": \"{{groupId}}\",\n    \"userId\": \"{{newMemberId}}\",\n    \"role\": \"MEMBER\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Remove Group Member",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation RemoveGroupMember($input: RemoveGroupMemberInput!) {\n  removeGroupMember(input: $input) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"groupId\": \"{{groupId}}\",\n    \"userId\": \"{{memberToRemoveId}}\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Group Member Role",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateGroupMemberRole($input: UpdateGroupMemberRoleInput!) {\n  updateGroupMemberRole(input: $input) {\n    statusCode\n    message\n    groupMember {\n      userId\n      groupId\n      role\n      joinedAt\n      addedBy\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"groupId\": \"{{groupId}}\",\n    \"userId\": \"{{memberId}}\",\n    \"newRole\": \"ADMIN\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Initiate Call",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation InitiateCall($input: InitiateCallInput!) {\n  initiateCall(input: $input) {\n    statusCode\n    message\n    call {\n      id\n      callerId\n      receiverId\n      groupId\n      callType\n      status\n      startTime\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"receiverId\": \"{{receiverId}}\",\n    \"callType\": \"VOICE\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Accept Call",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AcceptCall($callId: String!) {\n  acceptCall(callId: $callId) {\n    statusCode\n    message\n    call {\n      id\n      status\n      startTime\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"callId\": \"{{callId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Reject Call",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation RejectCall($callId: String!) {\n  rejectCall(callId: $callId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"callId\": \"{{callId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "End Call",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation EndCall($callId: String!) {\n  endCall(callId: $callId) {\n    statusCode\n    message\n    call {\n      id\n      status\n      endTime\n      duration\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"callId\": \"{{callId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Add Notification",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AddNotification($input: AddNotificationInput!) {\n  addNotification(input: $input) {\n    statusCode\n    message\n    notification {\n      id\n      userId\n      type\n      title\n      content\n      isRead\n      createdAt\n      relatedEntityId\n      relatedEntityType\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"userId\": \"{{targetUserId}}\",\n    \"type\": \"MESSAGE\",\n    \"title\": \"New Message\",\n    \"content\": \"You have received a new message\",\n    \"relatedEntityId\": \"{{messageId}}\",\n    \"relatedEntityType\": \"message\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Notification",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateNotification($input: UpdateNotificationInput!) {\n  updateNotification(input: $input) {\n    statusCode\n    message\n    notification {\n      id\n      isRead\n      readAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"notificationId\": \"{{notificationId}}\",\n    \"isRead\": true\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Add Schedule Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AddScheduleMessage($input: AddScheduleMessageInput!) {\n  addScheduleMessage(input: $input) {\n    statusCode\n    message\n    scheduledMessage {\n      id\n      chatId\n      groupId\n      senderId\n      content\n      messageType\n      scheduledTime\n      isSent\n      createdAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"receiverId\": \"{{receiverId}}\",\n    \"content\": \"This is a scheduled message for tomorrow!\",\n    \"messageType\": \"TEXT\",\n    \"scheduledTime\": \"2024-12-25T10:00:00Z\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Schedule Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateScheduleMessage($input: UpdateScheduleMessageInput!) {\n  updateScheduleMessage(input: $input) {\n    statusCode\n    message\n    scheduledMessage {\n      id\n      content\n      scheduledTime\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"scheduledMessageId\": \"{{scheduledMessageId}}\",\n    \"content\": \"Updated scheduled message content\",\n    \"scheduledTime\": \"2024-12-25T14:00:00Z\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Cancel Scheduled Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CancelScheduledMessage($scheduledMessageId: String!) {\n  cancelScheduledMessage(scheduledMessageId: $scheduledMessageId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"scheduledMessageId\": \"{{scheduledMessageId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Feedback Queries",
            "item": [
                {
                    "name": "Get Template Feedback",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetTemplateFeedback($templateId: String!, $page: Int, $limit: Int) {\n  getTemplateFeedback(templateId: $templateId, page: $page, limit: $limit) {\n    statusCode\n    message\n    feedbackList {\n      feedbacks {\n        id\n        templateId\n        userId\n        rating\n        comment\n        createdAt\n        updatedAt\n      }\n      totalCount\n      page\n      limit\n      hasNext\n      hasPrevious\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"templateId\": \"{{templateId}}\",\n  \"page\": 1,\n  \"limit\": 10\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Feedback Statistics",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetFeedbackStatistics($templateId: String!) {\n  getFeedbackStatistics(templateId: $templateId) {\n    statusCode\n    message\n    statistics {\n      totalFeedbacks\n      averageRating\n      ratingDistribution {\n        rating\n        count\n        percentage\n      }\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"templateId\": \"{{templateId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Feedback Mutations",
            "item": [
                {
                    "name": "Submit Feedback",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation SubmitFeedback($input: SubmitFeedbackInput!) {\n  submitFeedback(input: $input) {\n    statusCode\n    message\n    feedback {\n      id\n      templateId\n      userId\n      rating\n      comment\n      createdAt\n      updatedAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"templateId\": \"{{templateId}}\",\n    \"userId\": \"{{userId}}\",\n    \"rating\": 5,\n    \"comment\": \"Excellent historical template! Very informative and well-structured.\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Feedback",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateFeedback($id: String!, $input: UpdateFeedbackInput!) {\n  updateFeedback(id: $id, input: $input) {\n    statusCode\n    message\n    feedback {\n      id\n      templateId\n      userId\n      rating\n      comment\n      createdAt\n      updatedAt\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"id\": \"{{feedbackId}}\",\n  \"input\": {\n    \"rating\": 4,\n    \"comment\": \"Updated: Good template with room for improvement in some sections.\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Chat Queries",
            "item": [
                {
                    "name": "Get Messages",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetMessages($chatId: String!, $limit: Int, $offset: Int) {\n  getMessages(chatId: $chatId, limit: $limit, offset: $offset) {\n    statusCode\n    message\n    messages {\n      id\n      chatId\n      senderId\n      content\n      messageType\n      timestamp\n      isEdited\n      editedAt\n      replyToMessageId\n      attachments\n      isDeleted\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"chatId\": \"{{chatId}}\",\n  \"limit\": 50,\n  \"offset\": 0\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Message By ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetMessageById($messageId: String!) {\n  getMessageById(messageId: $messageId) {\n    statusCode\n    message\n    chatMessage {\n      id\n      chatId\n      senderId\n      content\n      messageType\n      timestamp\n      isEdited\n      editedAt\n      replyToMessageId\n      attachments\n      isDeleted\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{messageId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get User Chats",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetUserChats {\n  getUserChats {\n    statusCode\n    message\n    chats {\n      id\n      name\n      isGroup\n      createdAt\n      updatedAt\n      lastMessageAt\n      participants\n    }\n    success\n  }\n}",
                                "variables": "{}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Chat By ID",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetChatById($chatId: String!) {\n  getChatById(chatId: $chatId) {\n    statusCode\n    message\n    chat {\n      id\n      name\n      isGroup\n      createdAt\n      updatedAt\n      lastMessageAt\n      participants\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"chatId\": \"{{chatId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Group Members",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetGroupMembers($groupId: String!) {\n  getGroupMembers(groupId: $groupId) {\n    statusCode\n    message\n    members {\n      userId\n      role\n      joinedAt\n      permissions\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"groupId\": \"{{groupId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Call History",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetCallHistory($chatId: String!) {\n  getCallHistory(chatId: $chatId) {\n    statusCode\n    message\n    calls {\n      id\n      chatId\n      initiatorId\n      callType\n      status\n      startTime\n      endTime\n      duration\n      participants\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"chatId\": \"{{chatId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Notifications",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetNotifications($limit: Int, $offset: Int) {\n  getNotifications(limit: $limit, offset: $offset) {\n    statusCode\n    message\n    notifications {\n      id\n      userId\n      type\n      title\n      content\n      isRead\n      createdAt\n      data\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"limit\": 20,\n  \"offset\": 0\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Get Scheduled Messages",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query GetScheduledMessages($chatId: String!) {\n  getScheduledMessages(chatId: $chatId) {\n    statusCode\n    message\n    scheduledMessages {\n      id\n      chatId\n      senderId\n      content\n      messageType\n      scheduledTime\n      status\n      createdAt\n      attachments\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"chatId\": \"{{chatId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Chat Mutations",
            "item": [
                {
                    "name": "Send Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation SendMessage($input: SendMessageInput!) {\n  sendMessage(input: $input) {\n    statusCode\n    message\n    chatMessage {\n      id\n      chatId\n      senderId\n      content\n      messageType\n      timestamp\n      isEdited\n      editedAt\n      replyToMessageId\n      attachments\n      isDeleted\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"chatId\": \"{{chatId}}\",\n    \"content\": \"Hello, this is a test message!\",\n    \"messageType\": \"TEXT\",\n    \"attachments\": []\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Edit Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation EditMessage($messageId: String!, $newContent: String!) {\n  editMessage(messageId: $messageId, newContent: $newContent) {\n    statusCode\n    message\n    chatMessage {\n      id\n      chatId\n      senderId\n      content\n      messageType\n      timestamp\n      isEdited\n      editedAt\n      replyToMessageId\n      attachments\n      isDeleted\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{messageId}}\",\n  \"newContent\": \"This message has been edited!\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteMessage($messageId: String!) {\n  deleteMessage(messageId: $messageId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{messageId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Add Reaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AddReaction($messageId: String!, $reaction: ReactionType!) {\n  addReaction(messageId: $messageId, reaction: $reaction) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{messageId}}\",\n  \"reaction\": \"LIKE\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Remove Reaction",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation RemoveReaction($messageId: String!, $reaction: ReactionType!) {\n  removeReaction(messageId: $messageId, reaction: $reaction) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{messageId}}\",\n  \"reaction\": \"LIKE\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Create Chat",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreateChat($input: CreateChatInput!) {\n  createChat(input: $input) {\n    statusCode\n    message\n    chat {\n      id\n      name\n      isGroup\n      createdAt\n      updatedAt\n      lastMessageAt\n      participants\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"name\": \"New Chat\",\n    \"isGroup\": false,\n    \"participants\": [\"{{userId}}\", \"{{otherUserId}}\"]\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Chat",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateChat($chatId: String!, $input: UpdateChatInput!) {\n  updateChat(chatId: $chatId, input: $input) {\n    statusCode\n    message\n    chat {\n      id\n      name\n      isGroup\n      createdAt\n      updatedAt\n      lastMessageAt\n      participants\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"chatId\": \"{{chatId}}\",\n  \"input\": {\n    \"name\": \"Updated Chat Name\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Chat",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteChat($chatId: String!) {\n  deleteChat(chatId: $chatId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"chatId\": \"{{chatId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Add User To Chat",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AddUserToChat($chatId: String!, $userId: String!) {\n  addUserToChat(chatId: $chatId, userId: $userId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"chatId\": \"{{chatId}}\",\n  \"userId\": \"{{otherUserId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Remove User From Chat",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation RemoveUserFromChat($chatId: String!, $userId: String!) {\n  removeUserFromChat(chatId: $chatId, userId: $userId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"chatId\": \"{{chatId}}\",\n  \"userId\": \"{{otherUserId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Create Group",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CreateGroup($input: CreateGroupInput!) {\n  createGroup(input: $input) {\n    statusCode\n    message\n    group {\n      id\n      name\n      description\n      createdBy\n      createdAt\n      updatedAt\n      memberCount\n      isPrivate\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"name\": \"New Group\",\n    \"description\": \"A test group for chat functionality\",\n    \"isPrivate\": false,\n    \"members\": [\"{{userId}}\", \"{{otherUserId}}\"]\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Group",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateGroup($groupId: String!, $input: UpdateGroupInput!) {\n  updateGroup(groupId: $groupId, input: $input) {\n    statusCode\n    message\n    group {\n      id\n      name\n      description\n      createdBy\n      createdAt\n      updatedAt\n      memberCount\n      isPrivate\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"groupId\": \"{{groupId}}\",\n  \"input\": {\n    \"name\": \"Updated Group Name\",\n    \"description\": \"Updated group description\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Delete Group",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation DeleteGroup($groupId: String!) {\n  deleteGroup(groupId: $groupId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"groupId\": \"{{groupId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Add Group Member",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AddGroupMember($groupId: String!, $userId: String!, $role: GroupRole!) {\n  addGroupMember(groupId: $groupId, userId: $userId, role: $role) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"groupId\": \"{{groupId}}\",\n  \"userId\": \"{{otherUserId}}\",\n  \"role\": \"MEMBER\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Remove Group Member",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation RemoveGroupMember($groupId: String!, $userId: String!) {\n  removeGroupMember(groupId: $groupId, userId: $userId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"groupId\": \"{{groupId}}\",\n  \"userId\": \"{{otherUserId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Group Member Role",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateGroupMemberRole($groupId: String!, $userId: String!, $role: GroupRole!) {\n  updateGroupMemberRole(groupId: $groupId, userId: $userId, role: $role) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"groupId\": \"{{groupId}}\",\n  \"userId\": \"{{otherUserId}}\",\n  \"role\": \"ADMIN\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Start Call",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation StartCall($input: StartCallInput!) {\n  startCall(input: $input) {\n    statusCode\n    message\n    call {\n      id\n      chatId\n      initiatorId\n      callType\n      status\n      startTime\n      endTime\n      duration\n      participants\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"chatId\": \"{{chatId}}\",\n    \"callType\": \"VOICE\",\n    \"participants\": [\"{{userId}}\", \"{{otherUserId}}\"]\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "End Call",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation EndCall($callId: String!) {\n  endCall(callId: $callId) {\n    statusCode\n    message\n    call {\n      id\n      chatId\n      initiatorId\n      callType\n      status\n      startTime\n      endTime\n      duration\n      participants\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"callId\": \"{{callId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Join Call",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation JoinCall($callId: String!) {\n  joinCall(callId: $callId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"callId\": \"{{callId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Leave Call",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation LeaveCall($callId: String!) {\n  leaveCall(callId: $callId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"callId\": \"{{callId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Mark Notification As Read",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation MarkNotificationAsRead($notificationId: String!) {\n  markNotificationAsRead(notificationId: $notificationId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"notificationId\": \"{{notificationId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Mark All Notifications As Read",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation MarkAllNotificationsAsRead {\n  markAllNotificationsAsRead {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Add Scheduled Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation AddScheduledMessage($input: AddScheduledMessageInput!) {\n  addScheduledMessage(input: $input) {\n    statusCode\n    message\n    scheduledMessage {\n      id\n      chatId\n      senderId\n      content\n      messageType\n      scheduledTime\n      status\n      createdAt\n      attachments\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"input\": {\n    \"chatId\": \"{{chatId}}\",\n    \"content\": \"This is a scheduled message!\",\n    \"messageType\": \"TEXT\",\n    \"scheduledTime\": \"2024-12-31T23:59:59Z\",\n    \"attachments\": []\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Update Scheduled Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation UpdateScheduledMessage($messageId: String!, $input: UpdateScheduledMessageInput!) {\n  updateScheduledMessage(messageId: $messageId, input: $input) {\n    statusCode\n    message\n    scheduledMessage {\n      id\n      chatId\n      senderId\n      content\n      messageType\n      scheduledTime\n      status\n      createdAt\n      attachments\n    }\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{scheduledMessageId}}\",\n  \"input\": {\n    \"content\": \"Updated scheduled message content!\",\n    \"scheduledTime\": \"2024-12-31T23:30:00Z\"\n  }\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                },
                {
                    "name": "Cancel Scheduled Message",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}",
                                "description": "JWT access token for authentication"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation CancelScheduledMessage($messageId: String!) {\n  cancelScheduledMessage(messageId: $messageId) {\n    statusCode\n    message\n    success\n  }\n}",
                                "variables": "{\n  \"messageId\": \"{{scheduledMessageId}}\"\n}"
                            }
                        },
                        "url": {
                            "raw": "http://localhost:3000/graphql",
                            "protocol": "http",
                            "host": ["localhost"],
                            "port": "3000",
                            "path": ["graphql"]
                        }
                    }
                }
            ]
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:3000",
            "type": "string"
        },
        {
            "key": "accessToken",
            "value": "",
            "type": "string",
            "description": "JWT access token for authentication"
        },
        {
            "key": "userId",
            "value": "",
            "type": "string",
            "description": "User ID for testing"
        },
        {
            "key": "cardId",
            "value": "",
            "type": "string",
            "description": "Card ID for testing"
        },
        {
            "key": "transactionId",
            "value": "",
            "type": "string",
            "description": "Transaction ID for testing"
        },
        {
            "key": "walletId",
            "value": "",
            "type": "string",
            "description": "Wallet ID for testing"
        },
        {
            "key": "templateId",
            "value": "",
            "type": "string",
            "description": "History Template ID for testing"
        },
        {
            "key": "pharaohId",
            "value": "",
            "type": "string",
            "description": "Pharaoh ID for testing"
        },
        {
            "key": "quizId",
            "value": "",
            "type": "string",
            "description": "Quiz ID for testing"
        },
        {
            "key": "sectionId",
            "value": "",
            "type": "string",
            "description": "Section ID for testing"
        },
        {
            "key": "feedbackId",
            "value": "",
            "type": "string",
            "description": "Feedback ID for testing"
        },
        {
            "key": "achievementId",
            "value": "",
            "type": "string",
            "description": "Achievement ID for testing"
        },
        {
            "key": "fileKey",
            "value": "",
            "type": "string",
            "description": "File key for upload operations"
        },
        {
            "key": "base64FileData",
            "value": "",
            "type": "string",
            "description": "Base64 encoded file data for upload"
        }
    ]
}
