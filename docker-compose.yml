version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: user_postgres
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2521
    ports:
      - "5420:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - user_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service (GO)
  user-service:
    build:
      context: ./services/user-services
      dockerfile: Dockerfile
    container_name: user_service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 2521
      DB_NAME: userdb
      JWT_SECRET: bc295e25dc110117ccd1ac9750e74efed887bce6165557d15a777b5f60f15df0d83932d66dd4223260c1f0e68a7f204d01e4cdd984fca614249af42ebaf32f30
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - user_network
    restart: unless-stopped

  # Auth Service (GO)
  auth-service:
    build:
      context: .
      dockerfile: ./services/auth-services/Dockerfile
    container_name: auth_service
    env_file:
      - ./services/auth-services/.env
    environment:
      USER_SERVICE_ADDR: user-service:50051  
      FIREBASE_CREDENTIALS_PATH: ./firebase-credentials.json
    ports:
      - "50052:50052"
    depends_on:
      - user-service
    networks:
      - user_network
    restart: unless-stopped

  # Card Service (GO)
  card-service:
    build:
      context: ./services/card-services
      dockerfile: Dockerfile
    container_name: card_service
    env_file:
      - ./services/card-services/.env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 2521
      DB_NAME: userdb
      USER_SERVICE_ADDR: user-service:50051
    ports:
      - "50053:50053"
    depends_on:
      - user-service
    networks:
      - user_network
    restart: unless-stopped

  # Transaction Service (GO)
  transaction-service:
    build:
      context: .
      dockerfile: ./services/transaction-services/Dockerfile
    container_name: transaction_service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 2521
      DB_NAME: userdb
      USER_SERVICE_ADDR: user-service:50051
    ports:
      - "50054:50054"
    depends_on:
      - user-service
      - card-service
    networks:
      - user_network
    restart: unless-stopped

  # Wallet Service (GO)
  wallet-service:
    build:
      context: .
      dockerfile: ./services/wallet-services/Dockerfile
    container_name: wallet_service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 2521
      DB_NAME: userdb
      USER_SERVICE_ADDR: user-service:50051
      ENCRYPTION_KEY: wallet-service-encryption-key-2024
    ports:
      - "50055:50055"
    depends_on:
      - user-service
      - postgres
    networks:
      - user_network
    restart: unless-stopped
    
  # Pharaoh Service (GO)
  pharaoh-service:
    build:
      context: ./services/pharaoh-services
      dockerfile: Dockerfile
    container_name: pharaoh_service
    ports:
      - "50056:50056"
    environment:
      - PHARAOH_SERVICE_PORT=50056
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=2521
      - DB_NAME=userdb
      - JWT_SECRET=bc295e25dc110117ccd1ac9750e74efed887bce6165557d15a777b5f60f15df0d83932d66dd4223260c1f0e68a7f204d01e4cdd984fca614249af42ebaf32f30
    depends_on:
      - postgres
    networks:
      - user_network
    restart: unless-stopped

# History Template Service (GO)
  history-template-service:
    build:
      context: ./services/history-template-services
      dockerfile: Dockerfile
    container_name: history_template_service
    ports:
      - "50057:50057"
    environment:
      - PHARAOH_SERVICE_PORT=50057
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=2521
      - DB_NAME=userdb
      - JWT_SECRET=bc295e25dc110117ccd1ac9750e74efed887bce6165557d15a777b5f60f15df0d83932d66dd4223260c1f0e68a7f204d01e4cdd984fca614249af42ebaf32f30
    depends_on:
      - postgres
    networks:
      - user_network
    restart: unless-stopped
  # Quiz  Service (GO)
  quiz-service:
    build:
      context: ./services/quiz-services
      dockerfile: Dockerfile
    container_name: quiz_service
    ports:
      - "50058:50058"
    environment:
      - PHARAOH_SERVICE_PORT=50058
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=2521
      - DB_NAME=userdb
    depends_on:
      - postgres
    networks:
      - user_network
    restart: unless-stopped
  # Feedback Service (GO)
  feedback-service:
    build:
      context: ./services/feedback-services
      dockerfile: Dockerfile
    container_name: feedback_service
    ports:
      - "50059:50059"
    environment:
      - PHARAOH_SERVICE_PORT=50059
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=2521
      - DB_NAME=userdb
    depends_on:
      - postgres
    networks:
      - user_network
    restart: unless-stopped
    
  # User Progress  Service (GO)
  user-progress-service:
    build:
      context: ./services/user-progress-services
      dockerfile: Dockerfile
    container_name: user_progress_service
    ports:
      - "50060:50060"
    environment:
      - PHARAOH_SERVICE_PORT=50060
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=2521
      - DB_NAME=userdb
    depends_on:
      - postgres
    networks:
      - user_network
    restart: unless-stopped



  # Gateway Service (NestJS)
  gateway:
    build:
      context: ./getway
      dockerfile: Dockerfile
    container_name: api_gateway
    environment:
      USER_SERVICE_URL: user-service:50051
      AUTH_SERVICE_URL: auth-service:50052
      CARD_SERVICE_URL: card-service:50053
      TRANSACTION_SERVICE_URL: transaction-service:50054
      WALLET_SERVICE_URL: wallet-service:50055
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - auth-service
      - card-service
      - transaction-service
      - wallet-service
    networks:
      - user_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  user_network:
    driver: bridge