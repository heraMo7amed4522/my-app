// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/chat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_MSG_TEXT         MessageType = 0
	MessageType_MSG_IMAGE        MessageType = 1
	MessageType_MSG_VIDEO        MessageType = 2
	MessageType_MSG_FILE         MessageType = 3
	MessageType_MSG_AUDIO        MessageType = 4
	MessageType_MSG_LOCATION     MessageType = 5
	MessageType_MSG_STICKER      MessageType = 6
	MessageType_MSG_GIF          MessageType = 7
	MessageType_MSG_VOICE_NOTE   MessageType = 8
	MessageType_MSG_SYSTEM       MessageType = 9
	MessageType_MSG_POLL         MessageType = 10
	MessageType_MSG_CONTACT      MessageType = 11
	MessageType_MSG_DOCUMENT     MessageType = 12
	MessageType_MSG_LINK_PREVIEW MessageType = 13
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "MSG_TEXT",
		1:  "MSG_IMAGE",
		2:  "MSG_VIDEO",
		3:  "MSG_FILE",
		4:  "MSG_AUDIO",
		5:  "MSG_LOCATION",
		6:  "MSG_STICKER",
		7:  "MSG_GIF",
		8:  "MSG_VOICE_NOTE",
		9:  "MSG_SYSTEM",
		10: "MSG_POLL",
		11: "MSG_CONTACT",
		12: "MSG_DOCUMENT",
		13: "MSG_LINK_PREVIEW",
	}
	MessageType_value = map[string]int32{
		"MSG_TEXT":         0,
		"MSG_IMAGE":        1,
		"MSG_VIDEO":        2,
		"MSG_FILE":         3,
		"MSG_AUDIO":        4,
		"MSG_LOCATION":     5,
		"MSG_STICKER":      6,
		"MSG_GIF":          7,
		"MSG_VOICE_NOTE":   8,
		"MSG_SYSTEM":       9,
		"MSG_POLL":         10,
		"MSG_CONTACT":      11,
		"MSG_DOCUMENT":     12,
		"MSG_LINK_PREVIEW": 13,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{0}
}

type CallType int32

const (
	CallType_CALL_VOICE CallType = 0
	CallType_CALL_VIDEO CallType = 1
)

// Enum value maps for CallType.
var (
	CallType_name = map[int32]string{
		0: "CALL_VOICE",
		1: "CALL_VIDEO",
	}
	CallType_value = map[string]int32{
		"CALL_VOICE": 0,
		"CALL_VIDEO": 1,
	}
)

func (x CallType) Enum() *CallType {
	p := new(CallType)
	*p = x
	return p
}

func (x CallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[1].Descriptor()
}

func (CallType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[1]
}

func (x CallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallType.Descriptor instead.
func (CallType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{1}
}

type CallStatus int32

const (
	CallStatus_CALL_INITIATED CallStatus = 0
	CallStatus_CALL_RINGING   CallStatus = 1
	CallStatus_CALL_ACCEPTED  CallStatus = 2
	CallStatus_CALL_REJECTED  CallStatus = 3
	CallStatus_CALL_ENDED     CallStatus = 4
	CallStatus_CALL_MISSED    CallStatus = 5
	CallStatus_CALL_BUSY      CallStatus = 6
)

// Enum value maps for CallStatus.
var (
	CallStatus_name = map[int32]string{
		0: "CALL_INITIATED",
		1: "CALL_RINGING",
		2: "CALL_ACCEPTED",
		3: "CALL_REJECTED",
		4: "CALL_ENDED",
		5: "CALL_MISSED",
		6: "CALL_BUSY",
	}
	CallStatus_value = map[string]int32{
		"CALL_INITIATED": 0,
		"CALL_RINGING":   1,
		"CALL_ACCEPTED":  2,
		"CALL_REJECTED":  3,
		"CALL_ENDED":     4,
		"CALL_MISSED":    5,
		"CALL_BUSY":      6,
	}
)

func (x CallStatus) Enum() *CallStatus {
	p := new(CallStatus)
	*p = x
	return p
}

func (x CallStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[2].Descriptor()
}

func (CallStatus) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[2]
}

func (x CallStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallStatus.Descriptor instead.
func (CallStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{2}
}

type ReactionType int32

const (
	ReactionType_LIKE  ReactionType = 0
	ReactionType_LOVE  ReactionType = 1
	ReactionType_LAUGH ReactionType = 2
	ReactionType_WOW   ReactionType = 3
	ReactionType_SAD   ReactionType = 4
	ReactionType_ANGRY ReactionType = 5
)

// Enum value maps for ReactionType.
var (
	ReactionType_name = map[int32]string{
		0: "LIKE",
		1: "LOVE",
		2: "LAUGH",
		3: "WOW",
		4: "SAD",
		5: "ANGRY",
	}
	ReactionType_value = map[string]int32{
		"LIKE":  0,
		"LOVE":  1,
		"LAUGH": 2,
		"WOW":   3,
		"SAD":   4,
		"ANGRY": 5,
	}
)

func (x ReactionType) Enum() *ReactionType {
	p := new(ReactionType)
	*p = x
	return p
}

func (x ReactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[3].Descriptor()
}

func (ReactionType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[3]
}

func (x ReactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReactionType.Descriptor instead.
func (ReactionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{3}
}

type PresenceStatus int32

const (
	PresenceStatus_PRESENCE_OFFLINE   PresenceStatus = 0
	PresenceStatus_PRESENCE_ONLINE    PresenceStatus = 1
	PresenceStatus_PRESENCE_AWAY      PresenceStatus = 2
	PresenceStatus_PRESENCE_BUSY      PresenceStatus = 3
	PresenceStatus_PRESENCE_INVISIBLE PresenceStatus = 4
)

// Enum value maps for PresenceStatus.
var (
	PresenceStatus_name = map[int32]string{
		0: "PRESENCE_OFFLINE",
		1: "PRESENCE_ONLINE",
		2: "PRESENCE_AWAY",
		3: "PRESENCE_BUSY",
		4: "PRESENCE_INVISIBLE",
	}
	PresenceStatus_value = map[string]int32{
		"PRESENCE_OFFLINE":   0,
		"PRESENCE_ONLINE":    1,
		"PRESENCE_AWAY":      2,
		"PRESENCE_BUSY":      3,
		"PRESENCE_INVISIBLE": 4,
	}
)

func (x PresenceStatus) Enum() *PresenceStatus {
	p := new(PresenceStatus)
	*p = x
	return p
}

func (x PresenceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PresenceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[4].Descriptor()
}

func (PresenceStatus) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[4]
}

func (x PresenceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PresenceStatus.Descriptor instead.
func (PresenceStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{4}
}

type MessageUpdateType int32

const (
	MessageUpdateType_UPDATE_EDITED           MessageUpdateType = 0
	MessageUpdateType_UPDATE_DELETED          MessageUpdateType = 1
	MessageUpdateType_UPDATE_REACTION_ADDED   MessageUpdateType = 2
	MessageUpdateType_UPDATE_REACTION_REMOVED MessageUpdateType = 3
	MessageUpdateType_UPDATE_PINNED           MessageUpdateType = 4
	MessageUpdateType_UPDATE_UNPINNED         MessageUpdateType = 5
)

// Enum value maps for MessageUpdateType.
var (
	MessageUpdateType_name = map[int32]string{
		0: "UPDATE_EDITED",
		1: "UPDATE_DELETED",
		2: "UPDATE_REACTION_ADDED",
		3: "UPDATE_REACTION_REMOVED",
		4: "UPDATE_PINNED",
		5: "UPDATE_UNPINNED",
	}
	MessageUpdateType_value = map[string]int32{
		"UPDATE_EDITED":           0,
		"UPDATE_DELETED":          1,
		"UPDATE_REACTION_ADDED":   2,
		"UPDATE_REACTION_REMOVED": 3,
		"UPDATE_PINNED":           4,
		"UPDATE_UNPINNED":         5,
	}
)

func (x MessageUpdateType) Enum() *MessageUpdateType {
	p := new(MessageUpdateType)
	*p = x
	return p
}

func (x MessageUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[5].Descriptor()
}

func (MessageUpdateType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[5]
}

func (x MessageUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageUpdateType.Descriptor instead.
func (MessageUpdateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{5}
}

type ThreadType int32

const (
	ThreadType_THREAD_REPLY        ThreadType = 0
	ThreadType_THREAD_DISCUSSION   ThreadType = 1
	ThreadType_THREAD_ANNOUNCEMENT ThreadType = 2
)

// Enum value maps for ThreadType.
var (
	ThreadType_name = map[int32]string{
		0: "THREAD_REPLY",
		1: "THREAD_DISCUSSION",
		2: "THREAD_ANNOUNCEMENT",
	}
	ThreadType_value = map[string]int32{
		"THREAD_REPLY":        0,
		"THREAD_DISCUSSION":   1,
		"THREAD_ANNOUNCEMENT": 2,
	}
)

func (x ThreadType) Enum() *ThreadType {
	p := new(ThreadType)
	*p = x
	return p
}

func (x ThreadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThreadType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[6].Descriptor()
}

func (ThreadType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[6]
}

func (x ThreadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThreadType.Descriptor instead.
func (ThreadType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{6}
}

type NotificationType int32

const (
	NotificationType_NOTIFICATION_MESSAGE      NotificationType = 0
	NotificationType_NOTIFICATION_MENTION      NotificationType = 1
	NotificationType_NOTIFICATION_REACTION     NotificationType = 2
	NotificationType_NOTIFICATION_CALL         NotificationType = 3
	NotificationType_NOTIFICATION_GROUP_INVITE NotificationType = 4
	NotificationType_NOTIFICATION_SYSTEM       NotificationType = 5
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "NOTIFICATION_MESSAGE",
		1: "NOTIFICATION_MENTION",
		2: "NOTIFICATION_REACTION",
		3: "NOTIFICATION_CALL",
		4: "NOTIFICATION_GROUP_INVITE",
		5: "NOTIFICATION_SYSTEM",
	}
	NotificationType_value = map[string]int32{
		"NOTIFICATION_MESSAGE":      0,
		"NOTIFICATION_MENTION":      1,
		"NOTIFICATION_REACTION":     2,
		"NOTIFICATION_CALL":         3,
		"NOTIFICATION_GROUP_INVITE": 4,
		"NOTIFICATION_SYSTEM":       5,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[7].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[7]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{7}
}

type ChatEventType int32

const (
	ChatEventType_EVENT_MESSAGE_SENT         ChatEventType = 0
	ChatEventType_EVENT_MESSAGE_EDITED       ChatEventType = 1
	ChatEventType_EVENT_MESSAGE_DELETED      ChatEventType = 2
	ChatEventType_EVENT_USER_JOINED          ChatEventType = 3
	ChatEventType_EVENT_USER_LEFT            ChatEventType = 4
	ChatEventType_EVENT_TYPING_START         ChatEventType = 5
	ChatEventType_EVENT_TYPING_STOP          ChatEventType = 6
	ChatEventType_EVENT_CALL_STARTED         ChatEventType = 7
	ChatEventType_EVENT_CALL_ENDED           ChatEventType = 8
	ChatEventType_EVENT_SCREEN_SHARE_STARTED ChatEventType = 9
	ChatEventType_EVENT_SCREEN_SHARE_STOPPED ChatEventType = 10
)

// Enum value maps for ChatEventType.
var (
	ChatEventType_name = map[int32]string{
		0:  "EVENT_MESSAGE_SENT",
		1:  "EVENT_MESSAGE_EDITED",
		2:  "EVENT_MESSAGE_DELETED",
		3:  "EVENT_USER_JOINED",
		4:  "EVENT_USER_LEFT",
		5:  "EVENT_TYPING_START",
		6:  "EVENT_TYPING_STOP",
		7:  "EVENT_CALL_STARTED",
		8:  "EVENT_CALL_ENDED",
		9:  "EVENT_SCREEN_SHARE_STARTED",
		10: "EVENT_SCREEN_SHARE_STOPPED",
	}
	ChatEventType_value = map[string]int32{
		"EVENT_MESSAGE_SENT":         0,
		"EVENT_MESSAGE_EDITED":       1,
		"EVENT_MESSAGE_DELETED":      2,
		"EVENT_USER_JOINED":          3,
		"EVENT_USER_LEFT":            4,
		"EVENT_TYPING_START":         5,
		"EVENT_TYPING_STOP":          6,
		"EVENT_CALL_STARTED":         7,
		"EVENT_CALL_ENDED":           8,
		"EVENT_SCREEN_SHARE_STARTED": 9,
		"EVENT_SCREEN_SHARE_STOPPED": 10,
	}
)

func (x ChatEventType) Enum() *ChatEventType {
	p := new(ChatEventType)
	*p = x
	return p
}

func (x ChatEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[8].Descriptor()
}

func (ChatEventType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[8]
}

func (x ChatEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatEventType.Descriptor instead.
func (ChatEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{8}
}

type MessageStatus int32

const (
	MessageStatus_SENT      MessageStatus = 0
	MessageStatus_DELIVERED MessageStatus = 1
	MessageStatus_READ      MessageStatus = 2
	MessageStatus_FAILED    MessageStatus = 3
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "SENT",
		1: "DELIVERED",
		2: "READ",
		3: "FAILED",
	}
	MessageStatus_value = map[string]int32{
		"SENT":      0,
		"DELIVERED": 1,
		"READ":      2,
		"FAILED":    3,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[9].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[9]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{9}
}

type GroupRole int32

const (
	GroupRole_MEMBER GroupRole = 0
	GroupRole_ADMIN  GroupRole = 1
	GroupRole_OWNER  GroupRole = 2
)

// Enum value maps for GroupRole.
var (
	GroupRole_name = map[int32]string{
		0: "MEMBER",
		1: "ADMIN",
		2: "OWNER",
	}
	GroupRole_value = map[string]int32{
		"MEMBER": 0,
		"ADMIN":  1,
		"OWNER":  2,
	}
)

func (x GroupRole) Enum() *GroupRole {
	p := new(GroupRole)
	*p = x
	return p
}

func (x GroupRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[10].Descriptor()
}

func (GroupRole) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[10]
}

func (x GroupRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupRole.Descriptor instead.
func (GroupRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{10}
}

type StateMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateMessage) Reset() {
	*x = StateMessage{}
	mi := &file_proto_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMessage) ProtoMessage() {}

func (x *StateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMessage.ProtoReflect.Descriptor instead.
func (*StateMessage) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{0}
}

func (x *StateMessage) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StateMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       []string               `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_proto_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ErrorMessage) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorMessage) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ErrorMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ChatStreamEnvelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ChatStreamEnvelope_Message
	//	*ChatStreamEnvelope_State
	//	*ChatStreamEnvelope_Error
	Payload       isChatStreamEnvelope_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatStreamEnvelope) Reset() {
	*x = ChatStreamEnvelope{}
	mi := &file_proto_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatStreamEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatStreamEnvelope) ProtoMessage() {}

func (x *ChatStreamEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatStreamEnvelope.ProtoReflect.Descriptor instead.
func (*ChatStreamEnvelope) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatStreamEnvelope) GetPayload() isChatStreamEnvelope_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ChatStreamEnvelope) GetMessage() *ChatMessage {
	if x != nil {
		if x, ok := x.Payload.(*ChatStreamEnvelope_Message); ok {
			return x.Message
		}
	}
	return nil
}

func (x *ChatStreamEnvelope) GetState() *StateMessage {
	if x != nil {
		if x, ok := x.Payload.(*ChatStreamEnvelope_State); ok {
			return x.State
		}
	}
	return nil
}

func (x *ChatStreamEnvelope) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Payload.(*ChatStreamEnvelope_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isChatStreamEnvelope_Payload interface {
	isChatStreamEnvelope_Payload()
}

type ChatStreamEnvelope_Message struct {
	Message *ChatMessage `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type ChatStreamEnvelope_State struct {
	State *StateMessage `protobuf:"bytes,2,opt,name=state,proto3,oneof"`
}

type ChatStreamEnvelope_Error struct {
	Error *ErrorMessage `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ChatStreamEnvelope_Message) isChatStreamEnvelope_Payload() {}

func (*ChatStreamEnvelope_State) isChatStreamEnvelope_Payload() {}

func (*ChatStreamEnvelope_Error) isChatStreamEnvelope_Payload() {}

type ChatMessage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MessageId         string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	SenderId          string                 `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ReceiverId        string                 `protobuf:"bytes,3,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	GroupId           string                 `protobuf:"bytes,4,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Content           string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Type              MessageType            `protobuf:"varint,6,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsGroup           bool                   `protobuf:"varint,8,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	IsRead            bool                   `protobuf:"varint,9,opt,name=isRead,proto3" json:"isRead,omitempty"`
	IsEdited          bool                   `protobuf:"varint,10,opt,name=isEdited,proto3" json:"isEdited,omitempty"`
	LikedBy           []string               `protobuf:"bytes,11,rep,name=likedBy,proto3" json:"likedBy,omitempty"`
	ReplyToMessageId  string                 `protobuf:"bytes,12,opt,name=replyToMessageId,proto3" json:"replyToMessageId,omitempty"`
	Attachments       []string               `protobuf:"bytes,13,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Status            MessageStatus          `protobuf:"varint,14,opt,name=status,proto3,enum=chat.MessageStatus" json:"status,omitempty"`
	DeliveredAt       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=deliveredAt,proto3" json:"deliveredAt,omitempty"`
	ReadAt            *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=readAt,proto3" json:"readAt,omitempty"`
	Reactions         []*MessageReaction     `protobuf:"bytes,17,rep,name=reactions,proto3" json:"reactions,omitempty"`
	IsPinned          bool                   `protobuf:"varint,18,opt,name=isPinned,proto3" json:"isPinned,omitempty"`
	PinnedAt          *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=pinnedAt,proto3" json:"pinnedAt,omitempty"`
	PinnedBy          string                 `protobuf:"bytes,20,opt,name=pinnedBy,proto3" json:"pinnedBy,omitempty"`
	ForwardCount      int32                  `protobuf:"varint,21,opt,name=forwardCount,proto3" json:"forwardCount,omitempty"`
	OriginalMessageId string                 `protobuf:"bytes,22,opt,name=originalMessageId,proto3" json:"originalMessageId,omitempty"`
	FileMetadata      *FileMetadata          `protobuf:"bytes,23,opt,name=fileMetadata,proto3" json:"fileMetadata,omitempty"`
	LocationData      *LocationData          `protobuf:"bytes,24,opt,name=locationData,proto3" json:"locationData,omitempty"`
	PollData          *PollData              `protobuf:"bytes,25,opt,name=pollData,proto3" json:"pollData,omitempty"`
	ThreadId          string                 `protobuf:"bytes,26,opt,name=threadId,proto3" json:"threadId,omitempty"`
	ParentMessageId   string                 `protobuf:"bytes,27,opt,name=parentMessageId,proto3" json:"parentMessageId,omitempty"`
	ThreadReplyCount  int32                  `protobuf:"varint,28,opt,name=threadReplyCount,proto3" json:"threadReplyCount,omitempty"`
	EditedAt          *timestamppb.Timestamp `protobuf:"bytes,29,opt,name=editedAt,proto3" json:"editedAt,omitempty"`
	EditHistory       []string               `protobuf:"bytes,30,rep,name=editHistory,proto3" json:"editHistory,omitempty"`
	IsScheduled       bool                   `protobuf:"varint,31,opt,name=isScheduled,proto3" json:"isScheduled,omitempty"`
	ScheduledAt       *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=scheduledAt,proto3" json:"scheduledAt,omitempty"`
	MentionedUserIds  []string               `protobuf:"bytes,33,rep,name=mentionedUserIds,proto3" json:"mentionedUserIds,omitempty"`
	IsSystemMessage   bool                   `protobuf:"varint,34,opt,name=isSystemMessage,proto3" json:"isSystemMessage,omitempty"`
	DeviceInfo        string                 `protobuf:"bytes,35,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	ClientVersion     string                 `protobuf:"bytes,36,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	IsEncrypted       bool                   `protobuf:"varint,37,opt,name=isEncrypted,proto3" json:"isEncrypted,omitempty"`
	EncryptionKeyId   string                 `protobuf:"bytes,38,opt,name=encryptionKeyId,proto3" json:"encryptionKeyId,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_proto_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ChatMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ChatMessage) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *ChatMessage) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MSG_TEXT
}

func (x *ChatMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ChatMessage) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *ChatMessage) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *ChatMessage) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *ChatMessage) GetLikedBy() []string {
	if x != nil {
		return x.LikedBy
	}
	return nil
}

func (x *ChatMessage) GetReplyToMessageId() string {
	if x != nil {
		return x.ReplyToMessageId
	}
	return ""
}

func (x *ChatMessage) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *ChatMessage) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_SENT
}

func (x *ChatMessage) GetDeliveredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeliveredAt
	}
	return nil
}

func (x *ChatMessage) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *ChatMessage) GetReactions() []*MessageReaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *ChatMessage) GetIsPinned() bool {
	if x != nil {
		return x.IsPinned
	}
	return false
}

func (x *ChatMessage) GetPinnedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PinnedAt
	}
	return nil
}

func (x *ChatMessage) GetPinnedBy() string {
	if x != nil {
		return x.PinnedBy
	}
	return ""
}

func (x *ChatMessage) GetForwardCount() int32 {
	if x != nil {
		return x.ForwardCount
	}
	return 0
}

func (x *ChatMessage) GetOriginalMessageId() string {
	if x != nil {
		return x.OriginalMessageId
	}
	return ""
}

func (x *ChatMessage) GetFileMetadata() *FileMetadata {
	if x != nil {
		return x.FileMetadata
	}
	return nil
}

func (x *ChatMessage) GetLocationData() *LocationData {
	if x != nil {
		return x.LocationData
	}
	return nil
}

func (x *ChatMessage) GetPollData() *PollData {
	if x != nil {
		return x.PollData
	}
	return nil
}

func (x *ChatMessage) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *ChatMessage) GetParentMessageId() string {
	if x != nil {
		return x.ParentMessageId
	}
	return ""
}

func (x *ChatMessage) GetThreadReplyCount() int32 {
	if x != nil {
		return x.ThreadReplyCount
	}
	return 0
}

func (x *ChatMessage) GetEditedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

func (x *ChatMessage) GetEditHistory() []string {
	if x != nil {
		return x.EditHistory
	}
	return nil
}

func (x *ChatMessage) GetIsScheduled() bool {
	if x != nil {
		return x.IsScheduled
	}
	return false
}

func (x *ChatMessage) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *ChatMessage) GetMentionedUserIds() []string {
	if x != nil {
		return x.MentionedUserIds
	}
	return nil
}

func (x *ChatMessage) GetIsSystemMessage() bool {
	if x != nil {
		return x.IsSystemMessage
	}
	return false
}

func (x *ChatMessage) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

func (x *ChatMessage) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ChatMessage) GetIsEncrypted() bool {
	if x != nil {
		return x.IsEncrypted
	}
	return false
}

func (x *ChatMessage) GetEncryptionKeyId() string {
	if x != nil {
		return x.EncryptionKeyId
	}
	return ""
}

type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ReceiverId    string                 `protobuf:"bytes,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	GroupId       string                 `protobuf:"bytes,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Type          MessageType            `protobuf:"varint,5,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	IsGroup       bool                   `protobuf:"varint,6,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendMessageRequest) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *SendMessageRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMessageRequest) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MSG_TEXT
}

func (x *SendMessageRequest) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

type SendMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*SendMessageResponse_SavedMessage
	//	*SendMessageResponse_Error
	Result        isSendMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{5}
}

func (x *SendMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *SendMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendMessageResponse) GetResult() isSendMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SendMessageResponse) GetSavedMessage() *ChatMessage {
	if x != nil {
		if x, ok := x.Result.(*SendMessageResponse_SavedMessage); ok {
			return x.SavedMessage
		}
	}
	return nil
}

func (x *SendMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*SendMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isSendMessageResponse_Result interface {
	isSendMessageResponse_Result()
}

type SendMessageResponse_SavedMessage struct {
	SavedMessage *ChatMessage `protobuf:"bytes,3,opt,name=savedMessage,proto3,oneof"`
}

type SendMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*SendMessageResponse_SavedMessage) isSendMessageResponse_Result() {}

func (*SendMessageResponse_Error) isSendMessageResponse_Result() {}

type GetChatHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PeerId        string                 `protobuf:"bytes,2,opt,name=peerId,proto3" json:"peerId,omitempty"`
	IsGroup       bool                   `protobuf:"varint,3,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatHistoryRequest) Reset() {
	*x = GetChatHistoryRequest{}
	mi := &file_proto_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryRequest) ProtoMessage() {}

func (x *GetChatHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetChatHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{6}
}

func (x *GetChatHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetChatHistoryRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *GetChatHistoryRequest) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *GetChatHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ChatMessageList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ChatMessage         `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessageList) Reset() {
	*x = ChatMessageList{}
	mi := &file_proto_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageList) ProtoMessage() {}

func (x *ChatMessageList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageList.ProtoReflect.Descriptor instead.
func (*ChatMessageList) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{7}
}

func (x *ChatMessageList) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GetChatHistoryResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetChatHistoryResponse_Messages
	//	*GetChatHistoryResponse_Error
	Result        isGetChatHistoryResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatHistoryResponse) Reset() {
	*x = GetChatHistoryResponse{}
	mi := &file_proto_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryResponse) ProtoMessage() {}

func (x *GetChatHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetChatHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{8}
}

func (x *GetChatHistoryResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetChatHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatHistoryResponse) GetResult() isGetChatHistoryResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetChatHistoryResponse) GetMessages() *ChatMessageList {
	if x != nil {
		if x, ok := x.Result.(*GetChatHistoryResponse_Messages); ok {
			return x.Messages
		}
	}
	return nil
}

func (x *GetChatHistoryResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetChatHistoryResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetChatHistoryResponse_Result interface {
	isGetChatHistoryResponse_Result()
}

type GetChatHistoryResponse_Messages struct {
	Messages *ChatMessageList `protobuf:"bytes,3,opt,name=messages,proto3,oneof"`
}

type GetChatHistoryResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetChatHistoryResponse_Messages) isGetChatHistoryResponse_Result() {}

func (*GetChatHistoryResponse_Error) isGetChatHistoryResponse_Result() {}

type ReadReceiptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PeerId        string                 `protobuf:"bytes,2,opt,name=peerId,proto3" json:"peerId,omitempty"`
	IsGroup       bool                   `protobuf:"varint,3,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReceiptRequest) Reset() {
	*x = ReadReceiptRequest{}
	mi := &file_proto_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReceiptRequest) ProtoMessage() {}

func (x *ReadReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReceiptRequest.ProtoReflect.Descriptor instead.
func (*ReadReceiptRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{9}
}

func (x *ReadReceiptRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadReceiptRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *ReadReceiptRequest) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

type ReadReceiptResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ReadReceiptResponse_Status
	//	*ReadReceiptResponse_Error
	Result        isReadReceiptResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReceiptResponse) Reset() {
	*x = ReadReceiptResponse{}
	mi := &file_proto_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReceiptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReceiptResponse) ProtoMessage() {}

func (x *ReadReceiptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReceiptResponse.ProtoReflect.Descriptor instead.
func (*ReadReceiptResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{10}
}

func (x *ReadReceiptResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ReadReceiptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReadReceiptResponse) GetResult() isReadReceiptResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ReadReceiptResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*ReadReceiptResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *ReadReceiptResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*ReadReceiptResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isReadReceiptResponse_Result interface {
	isReadReceiptResponse_Result()
}

type ReadReceiptResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type ReadReceiptResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*ReadReceiptResponse_Status) isReadReceiptResponse_Result() {}

func (*ReadReceiptResponse_Error) isReadReceiptResponse_Result() {}

type EditMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	NewContent    string                 `protobuf:"bytes,3,opt,name=newContent,proto3" json:"newContent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditMessageRequest) Reset() {
	*x = EditMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageRequest) ProtoMessage() {}

func (x *EditMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageRequest.ProtoReflect.Descriptor instead.
func (*EditMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{11}
}

func (x *EditMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *EditMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditMessageRequest) GetNewContent() string {
	if x != nil {
		return x.NewContent
	}
	return ""
}

type EditMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*EditMessageResponse_UpdatedMessage
	//	*EditMessageResponse_Error
	Result        isEditMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditMessageResponse) Reset() {
	*x = EditMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageResponse) ProtoMessage() {}

func (x *EditMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageResponse.ProtoReflect.Descriptor instead.
func (*EditMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{12}
}

func (x *EditMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *EditMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EditMessageResponse) GetResult() isEditMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *EditMessageResponse) GetUpdatedMessage() *ChatMessage {
	if x != nil {
		if x, ok := x.Result.(*EditMessageResponse_UpdatedMessage); ok {
			return x.UpdatedMessage
		}
	}
	return nil
}

func (x *EditMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*EditMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isEditMessageResponse_Result interface {
	isEditMessageResponse_Result()
}

type EditMessageResponse_UpdatedMessage struct {
	UpdatedMessage *ChatMessage `protobuf:"bytes,3,opt,name=updatedMessage,proto3,oneof"`
}

type EditMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*EditMessageResponse_UpdatedMessage) isEditMessageResponse_Result() {}

func (*EditMessageResponse_Error) isEditMessageResponse_Result() {}

type DeleteMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *DeleteMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*DeleteMessageResponse_Status
	//	*DeleteMessageResponse_Error
	Result        isDeleteMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageResponse) Reset() {
	*x = DeleteMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResponse) ProtoMessage() {}

func (x *DeleteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResponse.ProtoReflect.Descriptor instead.
func (*DeleteMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DeleteMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteMessageResponse) GetResult() isDeleteMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DeleteMessageResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*DeleteMessageResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *DeleteMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*DeleteMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isDeleteMessageResponse_Result interface {
	isDeleteMessageResponse_Result()
}

type DeleteMessageResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type DeleteMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*DeleteMessageResponse_Status) isDeleteMessageResponse_Result() {}

func (*DeleteMessageResponse_Error) isDeleteMessageResponse_Result() {}

type SearchMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	PeerId        string                 `protobuf:"bytes,3,opt,name=peerId,proto3" json:"peerId,omitempty"`
	GroupId       string                 `protobuf:"bytes,4,opt,name=groupId,proto3" json:"groupId,omitempty"`
	IsGroup       bool                   `protobuf:"varint,5,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	MessageType   MessageType            `protobuf:"varint,6,opt,name=messageType,proto3,enum=chat.MessageType" json:"messageType,omitempty"`
	Limit         int32                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMessagesRequest) Reset() {
	*x = SearchMessagesRequest{}
	mi := &file_proto_chat_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMessagesRequest) ProtoMessage() {}

func (x *SearchMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMessagesRequest.ProtoReflect.Descriptor instead.
func (*SearchMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{15}
}

func (x *SearchMessagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchMessagesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchMessagesRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *SearchMessagesRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SearchMessagesRequest) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *SearchMessagesRequest) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_MSG_TEXT
}

func (x *SearchMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchMessagesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SearchMessagesResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*SearchMessagesResponse_Messages
	//	*SearchMessagesResponse_Error
	Result        isSearchMessagesResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMessagesResponse) Reset() {
	*x = SearchMessagesResponse{}
	mi := &file_proto_chat_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMessagesResponse) ProtoMessage() {}

func (x *SearchMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMessagesResponse.ProtoReflect.Descriptor instead.
func (*SearchMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{16}
}

func (x *SearchMessagesResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *SearchMessagesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchMessagesResponse) GetResult() isSearchMessagesResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SearchMessagesResponse) GetMessages() *ChatMessageList {
	if x != nil {
		if x, ok := x.Result.(*SearchMessagesResponse_Messages); ok {
			return x.Messages
		}
	}
	return nil
}

func (x *SearchMessagesResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*SearchMessagesResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isSearchMessagesResponse_Result interface {
	isSearchMessagesResponse_Result()
}

type SearchMessagesResponse_Messages struct {
	Messages *ChatMessageList `protobuf:"bytes,3,opt,name=messages,proto3,oneof"`
}

type SearchMessagesResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*SearchMessagesResponse_Messages) isSearchMessagesResponse_Result() {}

func (*SearchMessagesResponse_Error) isSearchMessagesResponse_Result() {}

type ForwardMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	SenderId      string                 `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ReceiverIds   []string               `protobuf:"bytes,3,rep,name=receiverIds,proto3" json:"receiverIds,omitempty"`
	GroupIds      []string               `protobuf:"bytes,4,rep,name=groupIds,proto3" json:"groupIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardMessageRequest) Reset() {
	*x = ForwardMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardMessageRequest) ProtoMessage() {}

func (x *ForwardMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardMessageRequest.ProtoReflect.Descriptor instead.
func (*ForwardMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{17}
}

func (x *ForwardMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ForwardMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ForwardMessageRequest) GetReceiverIds() []string {
	if x != nil {
		return x.ReceiverIds
	}
	return nil
}

func (x *ForwardMessageRequest) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

type ForwardMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ForwardMessageResponse_ForwardedMessages
	//	*ForwardMessageResponse_Error
	Result        isForwardMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardMessageResponse) Reset() {
	*x = ForwardMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardMessageResponse) ProtoMessage() {}

func (x *ForwardMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardMessageResponse.ProtoReflect.Descriptor instead.
func (*ForwardMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{18}
}

func (x *ForwardMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ForwardMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ForwardMessageResponse) GetResult() isForwardMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ForwardMessageResponse) GetForwardedMessages() *ChatMessageList {
	if x != nil {
		if x, ok := x.Result.(*ForwardMessageResponse_ForwardedMessages); ok {
			return x.ForwardedMessages
		}
	}
	return nil
}

func (x *ForwardMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*ForwardMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isForwardMessageResponse_Result interface {
	isForwardMessageResponse_Result()
}

type ForwardMessageResponse_ForwardedMessages struct {
	ForwardedMessages *ChatMessageList `protobuf:"bytes,3,opt,name=forwardedMessages,proto3,oneof"`
}

type ForwardMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*ForwardMessageResponse_ForwardedMessages) isForwardMessageResponse_Result() {}

func (*ForwardMessageResponse_Error) isForwardMessageResponse_Result() {}

type PinMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ChatId        string                 `protobuf:"bytes,3,opt,name=chatId,proto3" json:"chatId,omitempty"`
	IsGroup       bool                   `protobuf:"varint,4,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinMessageRequest) Reset() {
	*x = PinMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinMessageRequest) ProtoMessage() {}

func (x *PinMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinMessageRequest.ProtoReflect.Descriptor instead.
func (*PinMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{19}
}

func (x *PinMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *PinMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PinMessageRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *PinMessageRequest) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

type PinMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*PinMessageResponse_Status
	//	*PinMessageResponse_Error
	Result        isPinMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinMessageResponse) Reset() {
	*x = PinMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinMessageResponse) ProtoMessage() {}

func (x *PinMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinMessageResponse.ProtoReflect.Descriptor instead.
func (*PinMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{20}
}

func (x *PinMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *PinMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PinMessageResponse) GetResult() isPinMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PinMessageResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*PinMessageResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *PinMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*PinMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isPinMessageResponse_Result interface {
	isPinMessageResponse_Result()
}

type PinMessageResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type PinMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*PinMessageResponse_Status) isPinMessageResponse_Result() {}

func (*PinMessageResponse_Error) isPinMessageResponse_Result() {}

type UnpinMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ChatId        string                 `protobuf:"bytes,3,opt,name=chatId,proto3" json:"chatId,omitempty"`
	IsGroup       bool                   `protobuf:"varint,4,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpinMessageRequest) Reset() {
	*x = UnpinMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpinMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpinMessageRequest) ProtoMessage() {}

func (x *UnpinMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpinMessageRequest.ProtoReflect.Descriptor instead.
func (*UnpinMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{21}
}

func (x *UnpinMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *UnpinMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UnpinMessageRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *UnpinMessageRequest) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

type UnpinMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*UnpinMessageResponse_Status
	//	*UnpinMessageResponse_Error
	Result        isUnpinMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpinMessageResponse) Reset() {
	*x = UnpinMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpinMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpinMessageResponse) ProtoMessage() {}

func (x *UnpinMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpinMessageResponse.ProtoReflect.Descriptor instead.
func (*UnpinMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{22}
}

func (x *UnpinMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UnpinMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UnpinMessageResponse) GetResult() isUnpinMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UnpinMessageResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*UnpinMessageResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *UnpinMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*UnpinMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isUnpinMessageResponse_Result interface {
	isUnpinMessageResponse_Result()
}

type UnpinMessageResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type UnpinMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*UnpinMessageResponse_Status) isUnpinMessageResponse_Result() {}

func (*UnpinMessageResponse_Error) isUnpinMessageResponse_Result() {}

type GetPinnedMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	IsGroup       bool                   `protobuf:"varint,2,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPinnedMessagesRequest) Reset() {
	*x = GetPinnedMessagesRequest{}
	mi := &file_proto_chat_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPinnedMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedMessagesRequest) ProtoMessage() {}

func (x *GetPinnedMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetPinnedMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{23}
}

func (x *GetPinnedMessagesRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *GetPinnedMessagesRequest) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

type GetPinnedMessagesResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetPinnedMessagesResponse_PinnedMessages
	//	*GetPinnedMessagesResponse_Error
	Result        isGetPinnedMessagesResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPinnedMessagesResponse) Reset() {
	*x = GetPinnedMessagesResponse{}
	mi := &file_proto_chat_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPinnedMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedMessagesResponse) ProtoMessage() {}

func (x *GetPinnedMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetPinnedMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{24}
}

func (x *GetPinnedMessagesResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetPinnedMessagesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPinnedMessagesResponse) GetResult() isGetPinnedMessagesResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetPinnedMessagesResponse) GetPinnedMessages() *ChatMessageList {
	if x != nil {
		if x, ok := x.Result.(*GetPinnedMessagesResponse_PinnedMessages); ok {
			return x.PinnedMessages
		}
	}
	return nil
}

func (x *GetPinnedMessagesResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetPinnedMessagesResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetPinnedMessagesResponse_Result interface {
	isGetPinnedMessagesResponse_Result()
}

type GetPinnedMessagesResponse_PinnedMessages struct {
	PinnedMessages *ChatMessageList `protobuf:"bytes,3,opt,name=pinnedMessages,proto3,oneof"`
}

type GetPinnedMessagesResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetPinnedMessagesResponse_PinnedMessages) isGetPinnedMessagesResponse_Result() {}

func (*GetPinnedMessagesResponse_Error) isGetPinnedMessagesResponse_Result() {}

type AddLikeMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLikeMessageRequest) Reset() {
	*x = AddLikeMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLikeMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeMessageRequest) ProtoMessage() {}

func (x *AddLikeMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeMessageRequest.ProtoReflect.Descriptor instead.
func (*AddLikeMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{25}
}

func (x *AddLikeMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *AddLikeMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddLikeMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*AddLikeMessageResponse_Status
	//	*AddLikeMessageResponse_Error
	Result        isAddLikeMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLikeMessageResponse) Reset() {
	*x = AddLikeMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLikeMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeMessageResponse) ProtoMessage() {}

func (x *AddLikeMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeMessageResponse.ProtoReflect.Descriptor instead.
func (*AddLikeMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{26}
}

func (x *AddLikeMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *AddLikeMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddLikeMessageResponse) GetResult() isAddLikeMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddLikeMessageResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*AddLikeMessageResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *AddLikeMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*AddLikeMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isAddLikeMessageResponse_Result interface {
	isAddLikeMessageResponse_Result()
}

type AddLikeMessageResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type AddLikeMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*AddLikeMessageResponse_Status) isAddLikeMessageResponse_Result() {}

func (*AddLikeMessageResponse_Error) isAddLikeMessageResponse_Result() {}

type UpdateLikedMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ReactionType  ReactionType           `protobuf:"varint,3,opt,name=reactionType,proto3,enum=chat.ReactionType" json:"reactionType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLikedMessageRequest) Reset() {
	*x = UpdateLikedMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLikedMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLikedMessageRequest) ProtoMessage() {}

func (x *UpdateLikedMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLikedMessageRequest.ProtoReflect.Descriptor instead.
func (*UpdateLikedMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateLikedMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *UpdateLikedMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateLikedMessageRequest) GetReactionType() ReactionType {
	if x != nil {
		return x.ReactionType
	}
	return ReactionType_LIKE
}

type UpdateLikedMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*UpdateLikedMessageResponse_Status
	//	*UpdateLikedMessageResponse_Error
	Result        isUpdateLikedMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLikedMessageResponse) Reset() {
	*x = UpdateLikedMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLikedMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLikedMessageResponse) ProtoMessage() {}

func (x *UpdateLikedMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLikedMessageResponse.ProtoReflect.Descriptor instead.
func (*UpdateLikedMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateLikedMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UpdateLikedMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateLikedMessageResponse) GetResult() isUpdateLikedMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateLikedMessageResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*UpdateLikedMessageResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *UpdateLikedMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*UpdateLikedMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isUpdateLikedMessageResponse_Result interface {
	isUpdateLikedMessageResponse_Result()
}

type UpdateLikedMessageResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type UpdateLikedMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*UpdateLikedMessageResponse_Status) isUpdateLikedMessageResponse_Result() {}

func (*UpdateLikedMessageResponse_Error) isUpdateLikedMessageResponse_Result() {}

type GetLikedMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikedMessagesRequest) Reset() {
	*x = GetLikedMessagesRequest{}
	mi := &file_proto_chat_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikedMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedMessagesRequest) ProtoMessage() {}

func (x *GetLikedMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetLikedMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{29}
}

func (x *GetLikedMessagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetLikedMessagesResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetLikedMessagesResponse_LikedMessages
	//	*GetLikedMessagesResponse_Error
	Result        isGetLikedMessagesResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikedMessagesResponse) Reset() {
	*x = GetLikedMessagesResponse{}
	mi := &file_proto_chat_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikedMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedMessagesResponse) ProtoMessage() {}

func (x *GetLikedMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetLikedMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{30}
}

func (x *GetLikedMessagesResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetLikedMessagesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetLikedMessagesResponse) GetResult() isGetLikedMessagesResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetLikedMessagesResponse) GetLikedMessages() *ChatMessageList {
	if x != nil {
		if x, ok := x.Result.(*GetLikedMessagesResponse_LikedMessages); ok {
			return x.LikedMessages
		}
	}
	return nil
}

func (x *GetLikedMessagesResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetLikedMessagesResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetLikedMessagesResponse_Result interface {
	isGetLikedMessagesResponse_Result()
}

type GetLikedMessagesResponse_LikedMessages struct {
	LikedMessages *ChatMessageList `protobuf:"bytes,3,opt,name=likedMessages,proto3,oneof"`
}

type GetLikedMessagesResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetLikedMessagesResponse_LikedMessages) isGetLikedMessagesResponse_Result() {}

func (*GetLikedMessagesResponse_Error) isGetLikedMessagesResponse_Result() {}

type GetLastMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLastMessagesRequest) Reset() {
	*x = GetLastMessagesRequest{}
	mi := &file_proto_chat_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastMessagesRequest) ProtoMessage() {}

func (x *GetLastMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetLastMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{31}
}

func (x *GetLastMessagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetLastMessagesResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetLastMessagesResponse_LastMessages
	//	*GetLastMessagesResponse_Error
	Result        isGetLastMessagesResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLastMessagesResponse) Reset() {
	*x = GetLastMessagesResponse{}
	mi := &file_proto_chat_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastMessagesResponse) ProtoMessage() {}

func (x *GetLastMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetLastMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{32}
}

func (x *GetLastMessagesResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetLastMessagesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetLastMessagesResponse) GetResult() isGetLastMessagesResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetLastMessagesResponse) GetLastMessages() *ChatMessageList {
	if x != nil {
		if x, ok := x.Result.(*GetLastMessagesResponse_LastMessages); ok {
			return x.LastMessages
		}
	}
	return nil
}

func (x *GetLastMessagesResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetLastMessagesResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetLastMessagesResponse_Result interface {
	isGetLastMessagesResponse_Result()
}

type GetLastMessagesResponse_LastMessages struct {
	LastMessages *ChatMessageList `protobuf:"bytes,3,opt,name=lastMessages,proto3,oneof"`
}

type GetLastMessagesResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetLastMessagesResponse_LastMessages) isGetLastMessagesResponse_Result() {}

func (*GetLastMessagesResponse_Error) isGetLastMessagesResponse_Result() {}

type GetUsersByUserEmailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserEmail     []string               `protobuf:"bytes,1,rep,name=userEmail,proto3" json:"userEmail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersByUserEmailRequest) Reset() {
	*x = GetUsersByUserEmailRequest{}
	mi := &file_proto_chat_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersByUserEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByUserEmailRequest) ProtoMessage() {}

func (x *GetUsersByUserEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByUserEmailRequest.ProtoReflect.Descriptor instead.
func (*GetUsersByUserEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{33}
}

func (x *GetUsersByUserEmailRequest) GetUserEmail() []string {
	if x != nil {
		return x.UserEmail
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName      string                 `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	IsOnline      bool                   `protobuf:"varint,5,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_proto_chat_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{34}
}

func (x *UserInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInfo) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserInfo) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

type UserInfoList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*UserInfo            `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoList) Reset() {
	*x = UserInfoList{}
	mi := &file_proto_chat_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoList) ProtoMessage() {}

func (x *UserInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoList.ProtoReflect.Descriptor instead.
func (*UserInfoList) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{35}
}

func (x *UserInfoList) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetUsersByUserEmailResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetUsersByUserEmailResponse_Users
	//	*GetUsersByUserEmailResponse_Error
	Result        isGetUsersByUserEmailResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersByUserEmailResponse) Reset() {
	*x = GetUsersByUserEmailResponse{}
	mi := &file_proto_chat_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersByUserEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByUserEmailResponse) ProtoMessage() {}

func (x *GetUsersByUserEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByUserEmailResponse.ProtoReflect.Descriptor instead.
func (*GetUsersByUserEmailResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{36}
}

func (x *GetUsersByUserEmailResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetUsersByUserEmailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUsersByUserEmailResponse) GetResult() isGetUsersByUserEmailResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetUsersByUserEmailResponse) GetUsers() *UserInfoList {
	if x != nil {
		if x, ok := x.Result.(*GetUsersByUserEmailResponse_Users); ok {
			return x.Users
		}
	}
	return nil
}

func (x *GetUsersByUserEmailResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetUsersByUserEmailResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetUsersByUserEmailResponse_Result interface {
	isGetUsersByUserEmailResponse_Result()
}

type GetUsersByUserEmailResponse_Users struct {
	Users *UserInfoList `protobuf:"bytes,3,opt,name=users,proto3,oneof"`
}

type GetUsersByUserEmailResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetUsersByUserEmailResponse_Users) isGetUsersByUserEmailResponse_Result() {}

func (*GetUsersByUserEmailResponse_Error) isGetUsersByUserEmailResponse_Result() {}

type GetUsersInGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersInGroupRequest) Reset() {
	*x = GetUsersInGroupRequest{}
	mi := &file_proto_chat_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersInGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersInGroupRequest) ProtoMessage() {}

func (x *GetUsersInGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersInGroupRequest.ProtoReflect.Descriptor instead.
func (*GetUsersInGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{37}
}

func (x *GetUsersInGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetUsersInGroupResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetUsersInGroupResponse_Users
	//	*GetUsersInGroupResponse_Error
	Result        isGetUsersInGroupResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersInGroupResponse) Reset() {
	*x = GetUsersInGroupResponse{}
	mi := &file_proto_chat_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersInGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersInGroupResponse) ProtoMessage() {}

func (x *GetUsersInGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersInGroupResponse.ProtoReflect.Descriptor instead.
func (*GetUsersInGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{38}
}

func (x *GetUsersInGroupResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetUsersInGroupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUsersInGroupResponse) GetResult() isGetUsersInGroupResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetUsersInGroupResponse) GetUsers() *UserInfoList {
	if x != nil {
		if x, ok := x.Result.(*GetUsersInGroupResponse_Users); ok {
			return x.Users
		}
	}
	return nil
}

func (x *GetUsersInGroupResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetUsersInGroupResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetUsersInGroupResponse_Result interface {
	isGetUsersInGroupResponse_Result()
}

type GetUsersInGroupResponse_Users struct {
	Users *UserInfoList `protobuf:"bytes,3,opt,name=users,proto3,oneof"`
}

type GetUsersInGroupResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetUsersInGroupResponse_Users) isGetUsersInGroupResponse_Result() {}

func (*GetUsersInGroupResponse_Error) isGetUsersInGroupResponse_Result() {}

type UserStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []string               `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserStatusRequest) Reset() {
	*x = UserStatusRequest{}
	mi := &file_proto_chat_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusRequest) ProtoMessage() {}

func (x *UserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusRequest.ProtoReflect.Descriptor instead.
func (*UserStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{39}
}

func (x *UserStatusRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type UserStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	IsOnline      bool                   `protobuf:"varint,2,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserStatus) Reset() {
	*x = UserStatus{}
	mi := &file_proto_chat_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus) ProtoMessage() {}

func (x *UserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus.ProtoReflect.Descriptor instead.
func (*UserStatus) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{40}
}

func (x *UserStatus) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserStatus) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *UserStatus) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type UserStatusList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Statuses      []*UserStatus          `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserStatusList) Reset() {
	*x = UserStatusList{}
	mi := &file_proto_chat_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusList) ProtoMessage() {}

func (x *UserStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusList.ProtoReflect.Descriptor instead.
func (*UserStatusList) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{41}
}

func (x *UserStatusList) GetStatuses() []*UserStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type UserStatusResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*UserStatusResponse_Statuses
	//	*UserStatusResponse_Error
	Result        isUserStatusResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserStatusResponse) Reset() {
	*x = UserStatusResponse{}
	mi := &file_proto_chat_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusResponse) ProtoMessage() {}

func (x *UserStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusResponse.ProtoReflect.Descriptor instead.
func (*UserStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{42}
}

func (x *UserStatusResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UserStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserStatusResponse) GetResult() isUserStatusResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UserStatusResponse) GetStatuses() *UserStatusList {
	if x != nil {
		if x, ok := x.Result.(*UserStatusResponse_Statuses); ok {
			return x.Statuses
		}
	}
	return nil
}

func (x *UserStatusResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*UserStatusResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isUserStatusResponse_Result interface {
	isUserStatusResponse_Result()
}

type UserStatusResponse_Statuses struct {
	Statuses *UserStatusList `protobuf:"bytes,3,opt,name=statuses,proto3,oneof"`
}

type UserStatusResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*UserStatusResponse_Statuses) isUserStatusResponse_Result() {}

func (*UserStatusResponse_Error) isUserStatusResponse_Result() {}

type UserStatusSubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []string               `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserStatusSubscriptionRequest) Reset() {
	*x = UserStatusSubscriptionRequest{}
	mi := &file_proto_chat_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatusSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusSubscriptionRequest) ProtoMessage() {}

func (x *UserStatusSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*UserStatusSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{43}
}

func (x *UserStatusSubscriptionRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type LastMessageStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LastMessageStreamRequest) Reset() {
	*x = LastMessageStreamRequest{}
	mi := &file_proto_chat_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LastMessageStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastMessageStreamRequest) ProtoMessage() {}

func (x *LastMessageStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastMessageStreamRequest.ProtoReflect.Descriptor instead.
func (*LastMessageStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{44}
}

func (x *LastMessageStreamRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatorId     string                 `protobuf:"bytes,1,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	GroupName     string                 `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MemberIds     []string               `protobuf:"bytes,4,rep,name=memberIds,proto3" json:"memberIds,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,5,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_proto_chat_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{45}
}

func (x *CreateGroupRequest) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateGroupRequest) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

func (x *CreateGroupRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

type GroupInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	CreatorId     string                 `protobuf:"bytes,5,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Members       []*GroupMember         `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	MaxMembers    int32                  `protobuf:"varint,9,opt,name=maxMembers,proto3" json:"maxMembers,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,10,opt,name=isPrivate,proto3" json:"isPrivate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	mi := &file_proto_chat_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{46}
}

func (x *GroupInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GroupInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GroupInfo) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *GroupInfo) GetMembers() []*GroupMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GroupInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GroupInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GroupInfo) GetMaxMembers() int32 {
	if x != nil {
		return x.MaxMembers
	}
	return 0
}

func (x *GroupInfo) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

type GroupMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Role          GroupRole              `protobuf:"varint,2,opt,name=role,proto3,enum=chat.GroupRole" json:"role,omitempty"`
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=joinedAt,proto3" json:"joinedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupMember) Reset() {
	*x = GroupMember{}
	mi := &file_proto_chat_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMember) ProtoMessage() {}

func (x *GroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMember.ProtoReflect.Descriptor instead.
func (*GroupMember) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{47}
}

func (x *GroupMember) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GroupMember) GetRole() GroupRole {
	if x != nil {
		return x.Role
	}
	return GroupRole_MEMBER
}

func (x *GroupMember) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

type CreateGroupResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*CreateGroupResponse_Group
	//	*CreateGroupResponse_Error
	Result        isCreateGroupResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	mi := &file_proto_chat_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{48}
}

func (x *CreateGroupResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CreateGroupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateGroupResponse) GetResult() isCreateGroupResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateGroupResponse) GetGroup() *GroupInfo {
	if x != nil {
		if x, ok := x.Result.(*CreateGroupResponse_Group); ok {
			return x.Group
		}
	}
	return nil
}

func (x *CreateGroupResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*CreateGroupResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isCreateGroupResponse_Result interface {
	isCreateGroupResponse_Result()
}

type CreateGroupResponse_Group struct {
	Group *GroupInfo `protobuf:"bytes,3,opt,name=group,proto3,oneof"`
}

type CreateGroupResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*CreateGroupResponse_Group) isCreateGroupResponse_Result() {}

func (*CreateGroupResponse_Error) isCreateGroupResponse_Result() {}

type JoinGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinGroupRequest) Reset() {
	*x = JoinGroupRequest{}
	mi := &file_proto_chat_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupRequest) ProtoMessage() {}

func (x *JoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupRequest.ProtoReflect.Descriptor instead.
func (*JoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{49}
}

func (x *JoinGroupRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JoinGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type JoinGroupResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*JoinGroupResponse_Status
	//	*JoinGroupResponse_Error
	Result        isJoinGroupResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinGroupResponse) Reset() {
	*x = JoinGroupResponse{}
	mi := &file_proto_chat_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupResponse) ProtoMessage() {}

func (x *JoinGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupResponse.ProtoReflect.Descriptor instead.
func (*JoinGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{50}
}

func (x *JoinGroupResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *JoinGroupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JoinGroupResponse) GetResult() isJoinGroupResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *JoinGroupResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*JoinGroupResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *JoinGroupResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*JoinGroupResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isJoinGroupResponse_Result interface {
	isJoinGroupResponse_Result()
}

type JoinGroupResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type JoinGroupResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*JoinGroupResponse_Status) isJoinGroupResponse_Result() {}

func (*JoinGroupResponse_Error) isJoinGroupResponse_Result() {}

type LeaveGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveGroupRequest) Reset() {
	*x = LeaveGroupRequest{}
	mi := &file_proto_chat_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGroupRequest) ProtoMessage() {}

func (x *LeaveGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGroupRequest.ProtoReflect.Descriptor instead.
func (*LeaveGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{51}
}

func (x *LeaveGroupRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LeaveGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type LeaveGroupResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*LeaveGroupResponse_Status
	//	*LeaveGroupResponse_Error
	Result        isLeaveGroupResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveGroupResponse) Reset() {
	*x = LeaveGroupResponse{}
	mi := &file_proto_chat_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGroupResponse) ProtoMessage() {}

func (x *LeaveGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGroupResponse.ProtoReflect.Descriptor instead.
func (*LeaveGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{52}
}

func (x *LeaveGroupResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *LeaveGroupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LeaveGroupResponse) GetResult() isLeaveGroupResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LeaveGroupResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*LeaveGroupResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *LeaveGroupResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*LeaveGroupResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isLeaveGroupResponse_Result interface {
	isLeaveGroupResponse_Result()
}

type LeaveGroupResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type LeaveGroupResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*LeaveGroupResponse_Status) isLeaveGroupResponse_Result() {}

func (*LeaveGroupResponse_Error) isLeaveGroupResponse_Result() {}

type UpdateGroupRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	GroupId         string                 `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	GroupName       string                 `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Description     string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AvatarUrl       string                 `protobuf:"bytes,5,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	AddMemberIds    []string               `protobuf:"bytes,6,rep,name=addMemberIds,proto3" json:"addMemberIds,omitempty"`
	RemoveMemberIds []string               `protobuf:"bytes,7,rep,name=removeMemberIds,proto3" json:"removeMemberIds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateGroupRequest) Reset() {
	*x = UpdateGroupRequest{}
	mi := &file_proto_chat_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRequest) ProtoMessage() {}

func (x *UpdateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateGroupRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpdateGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateGroupRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UpdateGroupRequest) GetAddMemberIds() []string {
	if x != nil {
		return x.AddMemberIds
	}
	return nil
}

func (x *UpdateGroupRequest) GetRemoveMemberIds() []string {
	if x != nil {
		return x.RemoveMemberIds
	}
	return nil
}

type UpdateGroupResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*UpdateGroupResponse_Group
	//	*UpdateGroupResponse_Error
	Result        isUpdateGroupResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupResponse) Reset() {
	*x = UpdateGroupResponse{}
	mi := &file_proto_chat_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupResponse) ProtoMessage() {}

func (x *UpdateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateGroupResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UpdateGroupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateGroupResponse) GetResult() isUpdateGroupResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateGroupResponse) GetGroup() *GroupInfo {
	if x != nil {
		if x, ok := x.Result.(*UpdateGroupResponse_Group); ok {
			return x.Group
		}
	}
	return nil
}

func (x *UpdateGroupResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*UpdateGroupResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isUpdateGroupResponse_Result interface {
	isUpdateGroupResponse_Result()
}

type UpdateGroupResponse_Group struct {
	Group *GroupInfo `protobuf:"bytes,3,opt,name=group,proto3,oneof"`
}

type UpdateGroupResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*UpdateGroupResponse_Group) isUpdateGroupResponse_Result() {}

func (*UpdateGroupResponse_Error) isUpdateGroupResponse_Result() {}

type GetAllGroupsByUserEmailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserEmail     string                 `protobuf:"bytes,1,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllGroupsByUserEmailRequest) Reset() {
	*x = GetAllGroupsByUserEmailRequest{}
	mi := &file_proto_chat_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllGroupsByUserEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGroupsByUserEmailRequest) ProtoMessage() {}

func (x *GetAllGroupsByUserEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGroupsByUserEmailRequest.ProtoReflect.Descriptor instead.
func (*GetAllGroupsByUserEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{55}
}

func (x *GetAllGroupsByUserEmailRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type GroupInfoList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*GroupInfo           `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupInfoList) Reset() {
	*x = GroupInfoList{}
	mi := &file_proto_chat_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoList) ProtoMessage() {}

func (x *GroupInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoList.ProtoReflect.Descriptor instead.
func (*GroupInfoList) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{56}
}

func (x *GroupInfoList) GetGroups() []*GroupInfo {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetAllGroupsByUserEmailResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetAllGroupsByUserEmailResponse_Groups
	//	*GetAllGroupsByUserEmailResponse_Error
	Result        isGetAllGroupsByUserEmailResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllGroupsByUserEmailResponse) Reset() {
	*x = GetAllGroupsByUserEmailResponse{}
	mi := &file_proto_chat_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllGroupsByUserEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGroupsByUserEmailResponse) ProtoMessage() {}

func (x *GetAllGroupsByUserEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGroupsByUserEmailResponse.ProtoReflect.Descriptor instead.
func (*GetAllGroupsByUserEmailResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{57}
}

func (x *GetAllGroupsByUserEmailResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetAllGroupsByUserEmailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllGroupsByUserEmailResponse) GetResult() isGetAllGroupsByUserEmailResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetAllGroupsByUserEmailResponse) GetGroups() *GroupInfoList {
	if x != nil {
		if x, ok := x.Result.(*GetAllGroupsByUserEmailResponse_Groups); ok {
			return x.Groups
		}
	}
	return nil
}

func (x *GetAllGroupsByUserEmailResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetAllGroupsByUserEmailResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetAllGroupsByUserEmailResponse_Result interface {
	isGetAllGroupsByUserEmailResponse_Result()
}

type GetAllGroupsByUserEmailResponse_Groups struct {
	Groups *GroupInfoList `protobuf:"bytes,3,opt,name=groups,proto3,oneof"`
}

type GetAllGroupsByUserEmailResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetAllGroupsByUserEmailResponse_Groups) isGetAllGroupsByUserEmailResponse_Result() {}

func (*GetAllGroupsByUserEmailResponse_Error) isGetAllGroupsByUserEmailResponse_Result() {}

type TypingSubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PeerIds       []string               `protobuf:"bytes,2,rep,name=peerIds,proto3" json:"peerIds,omitempty"`
	GroupIds      []string               `protobuf:"bytes,3,rep,name=groupIds,proto3" json:"groupIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypingSubscriptionRequest) Reset() {
	*x = TypingSubscriptionRequest{}
	mi := &file_proto_chat_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypingSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingSubscriptionRequest) ProtoMessage() {}

func (x *TypingSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*TypingSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{58}
}

func (x *TypingSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TypingSubscriptionRequest) GetPeerIds() []string {
	if x != nil {
		return x.PeerIds
	}
	return nil
}

func (x *TypingSubscriptionRequest) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

type TypingIndicator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PeerId        string                 `protobuf:"bytes,2,opt,name=peerId,proto3" json:"peerId,omitempty"`
	GroupId       string                 `protobuf:"bytes,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	IsGroup       bool                   `protobuf:"varint,4,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	IsTyping      bool                   `protobuf:"varint,5,opt,name=isTyping,proto3" json:"isTyping,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypingIndicator) Reset() {
	*x = TypingIndicator{}
	mi := &file_proto_chat_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypingIndicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingIndicator) ProtoMessage() {}

func (x *TypingIndicator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingIndicator.ProtoReflect.Descriptor instead.
func (*TypingIndicator) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{59}
}

func (x *TypingIndicator) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TypingIndicator) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *TypingIndicator) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *TypingIndicator) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *TypingIndicator) GetIsTyping() bool {
	if x != nil {
		return x.IsTyping
	}
	return false
}

func (x *TypingIndicator) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SubscribeToPresenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []string               `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToPresenceRequest) Reset() {
	*x = SubscribeToPresenceRequest{}
	mi := &file_proto_chat_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToPresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToPresenceRequest) ProtoMessage() {}

func (x *SubscribeToPresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToPresenceRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToPresenceRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{60}
}

func (x *SubscribeToPresenceRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type PresenceUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Status        PresenceStatus         `protobuf:"varint,2,opt,name=status,proto3,enum=chat.PresenceStatus" json:"status,omitempty"`
	CustomMessage string                 `protobuf:"bytes,3,opt,name=customMessage,proto3" json:"customMessage,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresenceUpdate) Reset() {
	*x = PresenceUpdate{}
	mi := &file_proto_chat_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresenceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceUpdate) ProtoMessage() {}

func (x *PresenceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceUpdate.ProtoReflect.Descriptor instead.
func (*PresenceUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{61}
}

func (x *PresenceUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PresenceUpdate) GetStatus() PresenceStatus {
	if x != nil {
		return x.Status
	}
	return PresenceStatus_PRESENCE_OFFLINE
}

func (x *PresenceUpdate) GetCustomMessage() string {
	if x != nil {
		return x.CustomMessage
	}
	return ""
}

func (x *PresenceUpdate) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type SubscribeToMessageUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToMessageUpdatesRequest) Reset() {
	*x = SubscribeToMessageUpdatesRequest{}
	mi := &file_proto_chat_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToMessageUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToMessageUpdatesRequest) ProtoMessage() {}

func (x *SubscribeToMessageUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToMessageUpdatesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToMessageUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{62}
}

func (x *SubscribeToMessageUpdatesRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type MessageUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MessageId      string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	UpdateType     MessageUpdateType      `protobuf:"varint,2,opt,name=updateType,proto3,enum=chat.MessageUpdateType" json:"updateType,omitempty"`
	UpdatedMessage *ChatMessage           `protobuf:"bytes,3,opt,name=updatedMessage,proto3" json:"updatedMessage,omitempty"`
	UserId         string                 `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MessageUpdate) Reset() {
	*x = MessageUpdate{}
	mi := &file_proto_chat_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageUpdate) ProtoMessage() {}

func (x *MessageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageUpdate.ProtoReflect.Descriptor instead.
func (*MessageUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{63}
}

func (x *MessageUpdate) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageUpdate) GetUpdateType() MessageUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return MessageUpdateType_UPDATE_EDITED
}

func (x *MessageUpdate) GetUpdatedMessage() *ChatMessage {
	if x != nil {
		return x.UpdatedMessage
	}
	return nil
}

func (x *MessageUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SubscribeToThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToThreadRequest) Reset() {
	*x = SubscribeToThreadRequest{}
	mi := &file_proto_chat_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToThreadRequest) ProtoMessage() {}

func (x *SubscribeToThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToThreadRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{64}
}

func (x *SubscribeToThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type ThreadUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	Message       *ChatMessage           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Type          ThreadType             `protobuf:"varint,3,opt,name=type,proto3,enum=chat.ThreadType" json:"type,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadUpdate) Reset() {
	*x = ThreadUpdate{}
	mi := &file_proto_chat_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadUpdate) ProtoMessage() {}

func (x *ThreadUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadUpdate.ProtoReflect.Descriptor instead.
func (*ThreadUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{65}
}

func (x *ThreadUpdate) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *ThreadUpdate) GetMessage() *ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ThreadUpdate) GetType() ThreadType {
	if x != nil {
		return x.Type
	}
	return ThreadType_THREAD_REPLY
}

func (x *ThreadUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SubscribeToNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToNotificationsRequest) Reset() {
	*x = SubscribeToNotificationsRequest{}
	mi := &file_proto_chat_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToNotificationsRequest) ProtoMessage() {}

func (x *SubscribeToNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToNotificationsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{66}
}

func (x *SubscribeToNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type NotificationUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          NotificationType       `protobuf:"varint,2,opt,name=type,proto3,enum=chat.NotificationType" json:"type,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	SenderId      string                 `protobuf:"bytes,5,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ChatId        string                 `protobuf:"bytes,6,opt,name=chatId,proto3" json:"chatId,omitempty"`
	MessageId     string                 `protobuf:"bytes,7,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsRead        bool                   `protobuf:"varint,9,opt,name=isRead,proto3" json:"isRead,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationUpdate) Reset() {
	*x = NotificationUpdate{}
	mi := &file_proto_chat_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationUpdate) ProtoMessage() {}

func (x *NotificationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationUpdate.ProtoReflect.Descriptor instead.
func (*NotificationUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{67}
}

func (x *NotificationUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotificationUpdate) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_NOTIFICATION_MESSAGE
}

func (x *NotificationUpdate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationUpdate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationUpdate) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *NotificationUpdate) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *NotificationUpdate) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *NotificationUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NotificationUpdate) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

type AddNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *NotificationUpdate    `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNotificationRequest) Reset() {
	*x = AddNotificationRequest{}
	mi := &file_proto_chat_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNotificationRequest) ProtoMessage() {}

func (x *AddNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNotificationRequest.ProtoReflect.Descriptor instead.
func (*AddNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{68}
}

func (x *AddNotificationRequest) GetNotification() *NotificationUpdate {
	if x != nil {
		return x.Notification
	}
	return nil
}

type AddNotificationResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*AddNotificationResponse_Notification
	//	*AddNotificationResponse_Error
	Result        isAddNotificationResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNotificationResponse) Reset() {
	*x = AddNotificationResponse{}
	mi := &file_proto_chat_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNotificationResponse) ProtoMessage() {}

func (x *AddNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNotificationResponse.ProtoReflect.Descriptor instead.
func (*AddNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{69}
}

func (x *AddNotificationResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *AddNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddNotificationResponse) GetResult() isAddNotificationResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddNotificationResponse) GetNotification() *NotificationUpdate {
	if x != nil {
		if x, ok := x.Result.(*AddNotificationResponse_Notification); ok {
			return x.Notification
		}
	}
	return nil
}

func (x *AddNotificationResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*AddNotificationResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isAddNotificationResponse_Result interface {
	isAddNotificationResponse_Result()
}

type AddNotificationResponse_Notification struct {
	Notification *NotificationUpdate `protobuf:"bytes,3,opt,name=notification,proto3,oneof"`
}

type AddNotificationResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*AddNotificationResponse_Notification) isAddNotificationResponse_Result() {}

func (*AddNotificationResponse_Error) isAddNotificationResponse_Result() {}

type UpdateNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *NotificationUpdate    `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationRequest) Reset() {
	*x = UpdateNotificationRequest{}
	mi := &file_proto_chat_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationRequest) ProtoMessage() {}

func (x *UpdateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{70}
}

func (x *UpdateNotificationRequest) GetNotification() *NotificationUpdate {
	if x != nil {
		return x.Notification
	}
	return nil
}

type UpdateNotificationResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*UpdateNotificationResponse_Notification
	//	*UpdateNotificationResponse_Error
	Result        isUpdateNotificationResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationResponse) Reset() {
	*x = UpdateNotificationResponse{}
	mi := &file_proto_chat_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationResponse) ProtoMessage() {}

func (x *UpdateNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{71}
}

func (x *UpdateNotificationResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UpdateNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateNotificationResponse) GetResult() isUpdateNotificationResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateNotificationResponse) GetNotification() *NotificationUpdate {
	if x != nil {
		if x, ok := x.Result.(*UpdateNotificationResponse_Notification); ok {
			return x.Notification
		}
	}
	return nil
}

func (x *UpdateNotificationResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*UpdateNotificationResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isUpdateNotificationResponse_Result interface {
	isUpdateNotificationResponse_Result()
}

type UpdateNotificationResponse_Notification struct {
	Notification *NotificationUpdate `protobuf:"bytes,3,opt,name=notification,proto3,oneof"`
}

type UpdateNotificationResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*UpdateNotificationResponse_Notification) isUpdateNotificationResponse_Result() {}

func (*UpdateNotificationResponse_Error) isUpdateNotificationResponse_Result() {}

type GetNotificationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_proto_chat_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{72}
}

func (x *GetNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *GetNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetNotificationResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetNotificationResponse_Notification
	//	*GetNotificationResponse_Error
	Result        isGetNotificationResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationResponse) Reset() {
	*x = GetNotificationResponse{}
	mi := &file_proto_chat_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationResponse) ProtoMessage() {}

func (x *GetNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{73}
}

func (x *GetNotificationResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetNotificationResponse) GetResult() isGetNotificationResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetNotificationResponse) GetNotification() *NotificationUpdate {
	if x != nil {
		if x, ok := x.Result.(*GetNotificationResponse_Notification); ok {
			return x.Notification
		}
	}
	return nil
}

func (x *GetNotificationResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetNotificationResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetNotificationResponse_Result interface {
	isGetNotificationResponse_Result()
}

type GetNotificationResponse_Notification struct {
	Notification *NotificationUpdate `protobuf:"bytes,3,opt,name=notification,proto3,oneof"`
}

type GetNotificationResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetNotificationResponse_Notification) isGetNotificationResponse_Result() {}

func (*GetNotificationResponse_Error) isGetNotificationResponse_Result() {}

type MarkNotificationAsReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkNotificationAsReadRequest) Reset() {
	*x = MarkNotificationAsReadRequest{}
	mi := &file_proto_chat_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationAsReadRequest) ProtoMessage() {}

func (x *MarkNotificationAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkNotificationAsReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{74}
}

func (x *MarkNotificationAsReadRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *MarkNotificationAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MarkNotificationAsReadResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*MarkNotificationAsReadResponse_Status
	//	*MarkNotificationAsReadResponse_Error
	Result        isMarkNotificationAsReadResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkNotificationAsReadResponse) Reset() {
	*x = MarkNotificationAsReadResponse{}
	mi := &file_proto_chat_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationAsReadResponse) ProtoMessage() {}

func (x *MarkNotificationAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkNotificationAsReadResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{75}
}

func (x *MarkNotificationAsReadResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *MarkNotificationAsReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MarkNotificationAsReadResponse) GetResult() isMarkNotificationAsReadResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *MarkNotificationAsReadResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*MarkNotificationAsReadResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *MarkNotificationAsReadResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*MarkNotificationAsReadResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isMarkNotificationAsReadResponse_Result interface {
	isMarkNotificationAsReadResponse_Result()
}

type MarkNotificationAsReadResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type MarkNotificationAsReadResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*MarkNotificationAsReadResponse_Status) isMarkNotificationAsReadResponse_Result() {}

func (*MarkNotificationAsReadResponse_Error) isMarkNotificationAsReadResponse_Result() {}

type GetUnreadNotificationCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadNotificationCountRequest) Reset() {
	*x = GetUnreadNotificationCountRequest{}
	mi := &file_proto_chat_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadNotificationCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadNotificationCountRequest) ProtoMessage() {}

func (x *GetUnreadNotificationCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadNotificationCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadNotificationCountRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{76}
}

func (x *GetUnreadNotificationCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUnreadNotificationCountResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetUnreadNotificationCountResponse_Count
	//	*GetUnreadNotificationCountResponse_Error
	Result        isGetUnreadNotificationCountResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadNotificationCountResponse) Reset() {
	*x = GetUnreadNotificationCountResponse{}
	mi := &file_proto_chat_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadNotificationCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadNotificationCountResponse) ProtoMessage() {}

func (x *GetUnreadNotificationCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadNotificationCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadNotificationCountResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{77}
}

func (x *GetUnreadNotificationCountResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetUnreadNotificationCountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUnreadNotificationCountResponse) GetResult() isGetUnreadNotificationCountResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetUnreadNotificationCountResponse) GetCount() int32 {
	if x != nil {
		if x, ok := x.Result.(*GetUnreadNotificationCountResponse_Count); ok {
			return x.Count
		}
	}
	return 0
}

func (x *GetUnreadNotificationCountResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetUnreadNotificationCountResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetUnreadNotificationCountResponse_Result interface {
	isGetUnreadNotificationCountResponse_Result()
}

type GetUnreadNotificationCountResponse_Count struct {
	Count int32 `protobuf:"varint,3,opt,name=count,proto3,oneof"`
}

type GetUnreadNotificationCountResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetUnreadNotificationCountResponse_Count) isGetUnreadNotificationCountResponse_Result() {}

func (*GetUnreadNotificationCountResponse_Error) isGetUnreadNotificationCountResponse_Result() {}

type AddScheduleMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	SenderId      string                 `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ScheduledAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=scheduledAt,proto3" json:"scheduledAt,omitempty"`
	Type          MessageType            `protobuf:"varint,5,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	Attachments   []string               `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddScheduleMessageRequest) Reset() {
	*x = AddScheduleMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddScheduleMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScheduleMessageRequest) ProtoMessage() {}

func (x *AddScheduleMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScheduleMessageRequest.ProtoReflect.Descriptor instead.
func (*AddScheduleMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{78}
}

func (x *AddScheduleMessageRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *AddScheduleMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *AddScheduleMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddScheduleMessageRequest) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *AddScheduleMessageRequest) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MSG_TEXT
}

func (x *AddScheduleMessageRequest) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type AddScheduleMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*AddScheduleMessageResponse_ScheduledMessageId
	//	*AddScheduleMessageResponse_Error
	Result        isAddScheduleMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddScheduleMessageResponse) Reset() {
	*x = AddScheduleMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddScheduleMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScheduleMessageResponse) ProtoMessage() {}

func (x *AddScheduleMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScheduleMessageResponse.ProtoReflect.Descriptor instead.
func (*AddScheduleMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{79}
}

func (x *AddScheduleMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *AddScheduleMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddScheduleMessageResponse) GetResult() isAddScheduleMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddScheduleMessageResponse) GetScheduledMessageId() string {
	if x != nil {
		if x, ok := x.Result.(*AddScheduleMessageResponse_ScheduledMessageId); ok {
			return x.ScheduledMessageId
		}
	}
	return ""
}

func (x *AddScheduleMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*AddScheduleMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isAddScheduleMessageResponse_Result interface {
	isAddScheduleMessageResponse_Result()
}

type AddScheduleMessageResponse_ScheduledMessageId struct {
	ScheduledMessageId string `protobuf:"bytes,3,opt,name=scheduledMessageId,proto3,oneof"`
}

type AddScheduleMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*AddScheduleMessageResponse_ScheduledMessageId) isAddScheduleMessageResponse_Result() {}

func (*AddScheduleMessageResponse_Error) isAddScheduleMessageResponse_Result() {}

type UpdateScheduleMessageRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ScheduledMessageId string                 `protobuf:"bytes,1,opt,name=scheduledMessageId,proto3" json:"scheduledMessageId,omitempty"`
	UserId             string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Content            string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ScheduledAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=scheduledAt,proto3" json:"scheduledAt,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateScheduleMessageRequest) Reset() {
	*x = UpdateScheduleMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScheduleMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleMessageRequest) ProtoMessage() {}

func (x *UpdateScheduleMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleMessageRequest.ProtoReflect.Descriptor instead.
func (*UpdateScheduleMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{80}
}

func (x *UpdateScheduleMessageRequest) GetScheduledMessageId() string {
	if x != nil {
		return x.ScheduledMessageId
	}
	return ""
}

func (x *UpdateScheduleMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateScheduleMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateScheduleMessageRequest) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

type UpdateScheduleMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*UpdateScheduleMessageResponse_Status
	//	*UpdateScheduleMessageResponse_Error
	Result        isUpdateScheduleMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScheduleMessageResponse) Reset() {
	*x = UpdateScheduleMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScheduleMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleMessageResponse) ProtoMessage() {}

func (x *UpdateScheduleMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleMessageResponse.ProtoReflect.Descriptor instead.
func (*UpdateScheduleMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{81}
}

func (x *UpdateScheduleMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UpdateScheduleMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateScheduleMessageResponse) GetResult() isUpdateScheduleMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateScheduleMessageResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*UpdateScheduleMessageResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *UpdateScheduleMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*UpdateScheduleMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isUpdateScheduleMessageResponse_Result interface {
	isUpdateScheduleMessageResponse_Result()
}

type UpdateScheduleMessageResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type UpdateScheduleMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*UpdateScheduleMessageResponse_Status) isUpdateScheduleMessageResponse_Result() {}

func (*UpdateScheduleMessageResponse_Error) isUpdateScheduleMessageResponse_Result() {}

type CancelScheduledMessageRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ScheduledMessageId string                 `protobuf:"bytes,1,opt,name=scheduledMessageId,proto3" json:"scheduledMessageId,omitempty"`
	UserId             string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CancelScheduledMessageRequest) Reset() {
	*x = CancelScheduledMessageRequest{}
	mi := &file_proto_chat_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelScheduledMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelScheduledMessageRequest) ProtoMessage() {}

func (x *CancelScheduledMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelScheduledMessageRequest.ProtoReflect.Descriptor instead.
func (*CancelScheduledMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{82}
}

func (x *CancelScheduledMessageRequest) GetScheduledMessageId() string {
	if x != nil {
		return x.ScheduledMessageId
	}
	return ""
}

func (x *CancelScheduledMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CancelScheduledMessageResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*CancelScheduledMessageResponse_Status
	//	*CancelScheduledMessageResponse_Error
	Result        isCancelScheduledMessageResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelScheduledMessageResponse) Reset() {
	*x = CancelScheduledMessageResponse{}
	mi := &file_proto_chat_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelScheduledMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelScheduledMessageResponse) ProtoMessage() {}

func (x *CancelScheduledMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelScheduledMessageResponse.ProtoReflect.Descriptor instead.
func (*CancelScheduledMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{83}
}

func (x *CancelScheduledMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CancelScheduledMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CancelScheduledMessageResponse) GetResult() isCancelScheduledMessageResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CancelScheduledMessageResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*CancelScheduledMessageResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *CancelScheduledMessageResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*CancelScheduledMessageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isCancelScheduledMessageResponse_Result interface {
	isCancelScheduledMessageResponse_Result()
}

type CancelScheduledMessageResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type CancelScheduledMessageResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*CancelScheduledMessageResponse_Status) isCancelScheduledMessageResponse_Result() {}

func (*CancelScheduledMessageResponse_Error) isCancelScheduledMessageResponse_Result() {}

type GetScheduledMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ChatId        string                 `protobuf:"bytes,2,opt,name=chatId,proto3" json:"chatId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduledMessagesRequest) Reset() {
	*x = GetScheduledMessagesRequest{}
	mi := &file_proto_chat_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduledMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledMessagesRequest) ProtoMessage() {}

func (x *GetScheduledMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetScheduledMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{84}
}

func (x *GetScheduledMessagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetScheduledMessagesRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type ScheduledMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatId        string                 `protobuf:"bytes,2,opt,name=chatId,proto3" json:"chatId,omitempty"`
	SenderId      string                 `protobuf:"bytes,3,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	ScheduledAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=scheduledAt,proto3" json:"scheduledAt,omitempty"`
	Type          MessageType            `protobuf:"varint,6,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	Attachments   []string               `protobuf:"bytes,7,rep,name=attachments,proto3" json:"attachments,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduledMessage) Reset() {
	*x = ScheduledMessage{}
	mi := &file_proto_chat_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledMessage) ProtoMessage() {}

func (x *ScheduledMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledMessage.ProtoReflect.Descriptor instead.
func (*ScheduledMessage) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{85}
}

func (x *ScheduledMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScheduledMessage) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ScheduledMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ScheduledMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ScheduledMessage) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *ScheduledMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MSG_TEXT
}

func (x *ScheduledMessage) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *ScheduledMessage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ScheduledMessageList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ScheduledMessage    `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduledMessageList) Reset() {
	*x = ScheduledMessageList{}
	mi := &file_proto_chat_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledMessageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledMessageList) ProtoMessage() {}

func (x *ScheduledMessageList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledMessageList.ProtoReflect.Descriptor instead.
func (*ScheduledMessageList) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{86}
}

func (x *ScheduledMessageList) GetMessages() []*ScheduledMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GetScheduledMessagesResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetScheduledMessagesResponse_Messages
	//	*GetScheduledMessagesResponse_Error
	Result        isGetScheduledMessagesResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduledMessagesResponse) Reset() {
	*x = GetScheduledMessagesResponse{}
	mi := &file_proto_chat_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduledMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledMessagesResponse) ProtoMessage() {}

func (x *GetScheduledMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetScheduledMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{87}
}

func (x *GetScheduledMessagesResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetScheduledMessagesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetScheduledMessagesResponse) GetResult() isGetScheduledMessagesResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetScheduledMessagesResponse) GetMessages() *ScheduledMessageList {
	if x != nil {
		if x, ok := x.Result.(*GetScheduledMessagesResponse_Messages); ok {
			return x.Messages
		}
	}
	return nil
}

func (x *GetScheduledMessagesResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetScheduledMessagesResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetScheduledMessagesResponse_Result interface {
	isGetScheduledMessagesResponse_Result()
}

type GetScheduledMessagesResponse_Messages struct {
	Messages *ScheduledMessageList `protobuf:"bytes,3,opt,name=messages,proto3,oneof"`
}

type GetScheduledMessagesResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetScheduledMessagesResponse_Messages) isGetScheduledMessagesResponse_Result() {}

func (*GetScheduledMessagesResponse_Error) isGetScheduledMessagesResponse_Result() {}

type InitiateCallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallerId      string                 `protobuf:"bytes,1,opt,name=callerId,proto3" json:"callerId,omitempty"`
	ReceiverId    string                 `protobuf:"bytes,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	GroupId       string                 `protobuf:"bytes,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	CallType      CallType               `protobuf:"varint,4,opt,name=callType,proto3,enum=chat.CallType" json:"callType,omitempty"`
	IsGroup       bool                   `protobuf:"varint,5,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiateCallRequest) Reset() {
	*x = InitiateCallRequest{}
	mi := &file_proto_chat_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateCallRequest) ProtoMessage() {}

func (x *InitiateCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateCallRequest.ProtoReflect.Descriptor instead.
func (*InitiateCallRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{88}
}

func (x *InitiateCallRequest) GetCallerId() string {
	if x != nil {
		return x.CallerId
	}
	return ""
}

func (x *InitiateCallRequest) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *InitiateCallRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InitiateCallRequest) GetCallType() CallType {
	if x != nil {
		return x.CallType
	}
	return CallType_CALL_VOICE
}

func (x *InitiateCallRequest) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

type CallInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallId        string                 `protobuf:"bytes,1,opt,name=callId,proto3" json:"callId,omitempty"`
	CallerId      string                 `protobuf:"bytes,2,opt,name=callerId,proto3" json:"callerId,omitempty"`
	ReceiverId    string                 `protobuf:"bytes,3,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	GroupId       string                 `protobuf:"bytes,4,opt,name=groupId,proto3" json:"groupId,omitempty"`
	CallType      CallType               `protobuf:"varint,5,opt,name=callType,proto3,enum=chat.CallType" json:"callType,omitempty"`
	Status        CallStatus             `protobuf:"varint,6,opt,name=status,proto3,enum=chat.CallStatus" json:"status,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Duration      int32                  `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	IsGroup       bool                   `protobuf:"varint,10,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	Participants  []string               `protobuf:"bytes,11,rep,name=participants,proto3" json:"participants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallInfo) Reset() {
	*x = CallInfo{}
	mi := &file_proto_chat_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallInfo) ProtoMessage() {}

func (x *CallInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallInfo.ProtoReflect.Descriptor instead.
func (*CallInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{89}
}

func (x *CallInfo) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *CallInfo) GetCallerId() string {
	if x != nil {
		return x.CallerId
	}
	return ""
}

func (x *CallInfo) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *CallInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CallInfo) GetCallType() CallType {
	if x != nil {
		return x.CallType
	}
	return CallType_CALL_VOICE
}

func (x *CallInfo) GetStatus() CallStatus {
	if x != nil {
		return x.Status
	}
	return CallStatus_CALL_INITIATED
}

func (x *CallInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CallInfo) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CallInfo) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CallInfo) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *CallInfo) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

type InitiateCallResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*InitiateCallResponse_Call
	//	*InitiateCallResponse_Error
	Result        isInitiateCallResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiateCallResponse) Reset() {
	*x = InitiateCallResponse{}
	mi := &file_proto_chat_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateCallResponse) ProtoMessage() {}

func (x *InitiateCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateCallResponse.ProtoReflect.Descriptor instead.
func (*InitiateCallResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{90}
}

func (x *InitiateCallResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *InitiateCallResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InitiateCallResponse) GetResult() isInitiateCallResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *InitiateCallResponse) GetCall() *CallInfo {
	if x != nil {
		if x, ok := x.Result.(*InitiateCallResponse_Call); ok {
			return x.Call
		}
	}
	return nil
}

func (x *InitiateCallResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*InitiateCallResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isInitiateCallResponse_Result interface {
	isInitiateCallResponse_Result()
}

type InitiateCallResponse_Call struct {
	Call *CallInfo `protobuf:"bytes,3,opt,name=call,proto3,oneof"`
}

type InitiateCallResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*InitiateCallResponse_Call) isInitiateCallResponse_Result() {}

func (*InitiateCallResponse_Error) isInitiateCallResponse_Result() {}

type AcceptCallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallId        string                 `protobuf:"bytes,1,opt,name=callId,proto3" json:"callId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptCallRequest) Reset() {
	*x = AcceptCallRequest{}
	mi := &file_proto_chat_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptCallRequest) ProtoMessage() {}

func (x *AcceptCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptCallRequest.ProtoReflect.Descriptor instead.
func (*AcceptCallRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{91}
}

func (x *AcceptCallRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *AcceptCallRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AcceptCallResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*AcceptCallResponse_Call
	//	*AcceptCallResponse_Error
	Result        isAcceptCallResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptCallResponse) Reset() {
	*x = AcceptCallResponse{}
	mi := &file_proto_chat_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptCallResponse) ProtoMessage() {}

func (x *AcceptCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptCallResponse.ProtoReflect.Descriptor instead.
func (*AcceptCallResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{92}
}

func (x *AcceptCallResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *AcceptCallResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AcceptCallResponse) GetResult() isAcceptCallResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AcceptCallResponse) GetCall() *CallInfo {
	if x != nil {
		if x, ok := x.Result.(*AcceptCallResponse_Call); ok {
			return x.Call
		}
	}
	return nil
}

func (x *AcceptCallResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*AcceptCallResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isAcceptCallResponse_Result interface {
	isAcceptCallResponse_Result()
}

type AcceptCallResponse_Call struct {
	Call *CallInfo `protobuf:"bytes,3,opt,name=call,proto3,oneof"`
}

type AcceptCallResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*AcceptCallResponse_Call) isAcceptCallResponse_Result() {}

func (*AcceptCallResponse_Error) isAcceptCallResponse_Result() {}

type RejectCallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallId        string                 `protobuf:"bytes,1,opt,name=callId,proto3" json:"callId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectCallRequest) Reset() {
	*x = RejectCallRequest{}
	mi := &file_proto_chat_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectCallRequest) ProtoMessage() {}

func (x *RejectCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectCallRequest.ProtoReflect.Descriptor instead.
func (*RejectCallRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{93}
}

func (x *RejectCallRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *RejectCallRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RejectCallResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*RejectCallResponse_Status
	//	*RejectCallResponse_Error
	Result        isRejectCallResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectCallResponse) Reset() {
	*x = RejectCallResponse{}
	mi := &file_proto_chat_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectCallResponse) ProtoMessage() {}

func (x *RejectCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectCallResponse.ProtoReflect.Descriptor instead.
func (*RejectCallResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{94}
}

func (x *RejectCallResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *RejectCallResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RejectCallResponse) GetResult() isRejectCallResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RejectCallResponse) GetStatus() *StateMessage {
	if x != nil {
		if x, ok := x.Result.(*RejectCallResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *RejectCallResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*RejectCallResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isRejectCallResponse_Result interface {
	isRejectCallResponse_Result()
}

type RejectCallResponse_Status struct {
	Status *StateMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type RejectCallResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*RejectCallResponse_Status) isRejectCallResponse_Result() {}

func (*RejectCallResponse_Error) isRejectCallResponse_Result() {}

type EndCallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallId        string                 `protobuf:"bytes,1,opt,name=callId,proto3" json:"callId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndCallRequest) Reset() {
	*x = EndCallRequest{}
	mi := &file_proto_chat_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndCallRequest) ProtoMessage() {}

func (x *EndCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndCallRequest.ProtoReflect.Descriptor instead.
func (*EndCallRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{95}
}

func (x *EndCallRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *EndCallRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type EndCallResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*EndCallResponse_Call
	//	*EndCallResponse_Error
	Result        isEndCallResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndCallResponse) Reset() {
	*x = EndCallResponse{}
	mi := &file_proto_chat_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndCallResponse) ProtoMessage() {}

func (x *EndCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndCallResponse.ProtoReflect.Descriptor instead.
func (*EndCallResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{96}
}

func (x *EndCallResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *EndCallResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EndCallResponse) GetResult() isEndCallResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *EndCallResponse) GetCall() *CallInfo {
	if x != nil {
		if x, ok := x.Result.(*EndCallResponse_Call); ok {
			return x.Call
		}
	}
	return nil
}

func (x *EndCallResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*EndCallResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isEndCallResponse_Result interface {
	isEndCallResponse_Result()
}

type EndCallResponse_Call struct {
	Call *CallInfo `protobuf:"bytes,3,opt,name=call,proto3,oneof"`
}

type EndCallResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*EndCallResponse_Call) isEndCallResponse_Result() {}

func (*EndCallResponse_Error) isEndCallResponse_Result() {}

type GetCallHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCallHistoryRequest) Reset() {
	*x = GetCallHistoryRequest{}
	mi := &file_proto_chat_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCallHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallHistoryRequest) ProtoMessage() {}

func (x *GetCallHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetCallHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{97}
}

func (x *GetCallHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCallHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCallHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type CallInfoList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Calls         []*CallInfo            `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallInfoList) Reset() {
	*x = CallInfoList{}
	mi := &file_proto_chat_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallInfoList) ProtoMessage() {}

func (x *CallInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallInfoList.ProtoReflect.Descriptor instead.
func (*CallInfoList) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{98}
}

func (x *CallInfoList) GetCalls() []*CallInfo {
	if x != nil {
		return x.Calls
	}
	return nil
}

type GetCallHistoryResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetCallHistoryResponse_Calls
	//	*GetCallHistoryResponse_Error
	Result        isGetCallHistoryResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCallHistoryResponse) Reset() {
	*x = GetCallHistoryResponse{}
	mi := &file_proto_chat_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCallHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallHistoryResponse) ProtoMessage() {}

func (x *GetCallHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetCallHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{99}
}

func (x *GetCallHistoryResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetCallHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCallHistoryResponse) GetResult() isGetCallHistoryResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetCallHistoryResponse) GetCalls() *CallInfoList {
	if x != nil {
		if x, ok := x.Result.(*GetCallHistoryResponse_Calls); ok {
			return x.Calls
		}
	}
	return nil
}

func (x *GetCallHistoryResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*GetCallHistoryResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetCallHistoryResponse_Result interface {
	isGetCallHistoryResponse_Result()
}

type GetCallHistoryResponse_Calls struct {
	Calls *CallInfoList `protobuf:"bytes,3,opt,name=calls,proto3,oneof"`
}

type GetCallHistoryResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetCallHistoryResponse_Calls) isGetCallHistoryResponse_Result() {}

func (*GetCallHistoryResponse_Error) isGetCallHistoryResponse_Result() {}

type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileType      string                 `protobuf:"bytes,2,opt,name=fileType,proto3" json:"fileType,omitempty"`
	FileSize      int64                  `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileUrl       string                 `protobuf:"bytes,4,opt,name=fileUrl,proto3" json:"fileUrl,omitempty"`
	ThumbnailUrl  string                 `protobuf:"bytes,5,opt,name=thumbnailUrl,proto3" json:"thumbnailUrl,omitempty"`
	Duration      int32                  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Width         int32                  `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_proto_chat_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{100}
}

func (x *FileMetadata) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileMetadata) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *FileMetadata) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileMetadata) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *FileMetadata) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *FileMetadata) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FileMetadata) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *FileMetadata) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type FileUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*FileUploadRequest_Metadata
	//	*FileUploadRequest_Chunk
	Data          isFileUploadRequest_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadRequest) Reset() {
	*x = FileUploadRequest{}
	mi := &file_proto_chat_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRequest) ProtoMessage() {}

func (x *FileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRequest.ProtoReflect.Descriptor instead.
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{101}
}

func (x *FileUploadRequest) GetData() isFileUploadRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileUploadRequest) GetMetadata() *FileMetadata {
	if x != nil {
		if x, ok := x.Data.(*FileUploadRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *FileUploadRequest) GetChunk() []byte {
	if x != nil {
		if x, ok := x.Data.(*FileUploadRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isFileUploadRequest_Data interface {
	isFileUploadRequest_Data()
}

type FileUploadRequest_Metadata struct {
	Metadata *FileMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type FileUploadRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*FileUploadRequest_Metadata) isFileUploadRequest_Data() {}

func (*FileUploadRequest_Chunk) isFileUploadRequest_Data() {}

type FileUploadResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*FileUploadResponse_UploadedFile
	//	*FileUploadResponse_Error
	Result        isFileUploadResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadResponse) Reset() {
	*x = FileUploadResponse{}
	mi := &file_proto_chat_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadResponse) ProtoMessage() {}

func (x *FileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadResponse.ProtoReflect.Descriptor instead.
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{102}
}

func (x *FileUploadResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *FileUploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileUploadResponse) GetResult() isFileUploadResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *FileUploadResponse) GetUploadedFile() *FileMetadata {
	if x != nil {
		if x, ok := x.Result.(*FileUploadResponse_UploadedFile); ok {
			return x.UploadedFile
		}
	}
	return nil
}

func (x *FileUploadResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Result.(*FileUploadResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isFileUploadResponse_Result interface {
	isFileUploadResponse_Result()
}

type FileUploadResponse_UploadedFile struct {
	UploadedFile *FileMetadata `protobuf:"bytes,3,opt,name=uploadedFile,proto3,oneof"`
}

type FileUploadResponse_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*FileUploadResponse_UploadedFile) isFileUploadResponse_Result() {}

func (*FileUploadResponse_Error) isFileUploadResponse_Result() {}

type FileDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	mi := &file_proto_chat_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{103}
}

func (x *FileDownloadRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileDownloadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FileDownloadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*FileDownloadResponse_Metadata
	//	*FileDownloadResponse_Chunk
	Data          isFileDownloadResponse_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadResponse) Reset() {
	*x = FileDownloadResponse{}
	mi := &file_proto_chat_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadResponse) ProtoMessage() {}

func (x *FileDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadResponse.ProtoReflect.Descriptor instead.
func (*FileDownloadResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{104}
}

func (x *FileDownloadResponse) GetData() isFileDownloadResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileDownloadResponse) GetMetadata() *FileMetadata {
	if x != nil {
		if x, ok := x.Data.(*FileDownloadResponse_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *FileDownloadResponse) GetChunk() []byte {
	if x != nil {
		if x, ok := x.Data.(*FileDownloadResponse_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isFileDownloadResponse_Data interface {
	isFileDownloadResponse_Data()
}

type FileDownloadResponse_Metadata struct {
	Metadata *FileMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type FileDownloadResponse_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*FileDownloadResponse_Metadata) isFileDownloadResponse_Data() {}

func (*FileDownloadResponse_Chunk) isFileDownloadResponse_Data() {}

type LocationData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	PlaceName     string                 `protobuf:"bytes,4,opt,name=placeName,proto3" json:"placeName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationData) Reset() {
	*x = LocationData{}
	mi := &file_proto_chat_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationData) ProtoMessage() {}

func (x *LocationData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationData.ProtoReflect.Descriptor instead.
func (*LocationData) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{105}
}

func (x *LocationData) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LocationData) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LocationData) GetPlaceName() string {
	if x != nil {
		return x.PlaceName
	}
	return ""
}

type PollOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	VoterIds      []string               `protobuf:"bytes,3,rep,name=voterIds,proto3" json:"voterIds,omitempty"`
	VoteCount     int32                  `protobuf:"varint,4,opt,name=voteCount,proto3" json:"voteCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollOption) Reset() {
	*x = PollOption{}
	mi := &file_proto_chat_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollOption) ProtoMessage() {}

func (x *PollOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollOption.ProtoReflect.Descriptor instead.
func (*PollOption) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{106}
}

func (x *PollOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PollOption) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PollOption) GetVoterIds() []string {
	if x != nil {
		return x.VoterIds
	}
	return nil
}

func (x *PollOption) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

type PollData struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Question             string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Options              []*PollOption          `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	AllowMultipleAnswers bool                   `protobuf:"varint,3,opt,name=allowMultipleAnswers,proto3" json:"allowMultipleAnswers,omitempty"`
	ExpiresAt            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	IsAnonymous          bool                   `protobuf:"varint,5,opt,name=isAnonymous,proto3" json:"isAnonymous,omitempty"`
	TotalVotes           int32                  `protobuf:"varint,6,opt,name=totalVotes,proto3" json:"totalVotes,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PollData) Reset() {
	*x = PollData{}
	mi := &file_proto_chat_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollData) ProtoMessage() {}

func (x *PollData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollData.ProtoReflect.Descriptor instead.
func (*PollData) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{107}
}

func (x *PollData) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *PollData) GetOptions() []*PollOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *PollData) GetAllowMultipleAnswers() bool {
	if x != nil {
		return x.AllowMultipleAnswers
	}
	return false
}

func (x *PollData) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *PollData) GetIsAnonymous() bool {
	if x != nil {
		return x.IsAnonymous
	}
	return false
}

func (x *PollData) GetTotalVotes() int32 {
	if x != nil {
		return x.TotalVotes
	}
	return 0
}

type MessageReaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ReactionType  ReactionType           `protobuf:"varint,2,opt,name=reactionType,proto3,enum=chat.ReactionType" json:"reactionType,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageReaction) Reset() {
	*x = MessageReaction{}
	mi := &file_proto_chat_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReaction) ProtoMessage() {}

func (x *MessageReaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReaction.ProtoReflect.Descriptor instead.
func (*MessageReaction) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{108}
}

func (x *MessageReaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageReaction) GetReactionType() ReactionType {
	if x != nil {
		return x.ReactionType
	}
	return ReactionType_LIKE
}

func (x *MessageReaction) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SubscribeToScreenShareRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToScreenShareRequest) Reset() {
	*x = SubscribeToScreenShareRequest{}
	mi := &file_proto_chat_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToScreenShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToScreenShareRequest) ProtoMessage() {}

func (x *SubscribeToScreenShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToScreenShareRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToScreenShareRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{109}
}

func (x *SubscribeToScreenShareRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type ScreenShareUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"` // "started", "stopped", etc.
	ShareUrl      string                 `protobuf:"bytes,4,opt,name=shareUrl,proto3" json:"shareUrl,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScreenShareUpdate) Reset() {
	*x = ScreenShareUpdate{}
	mi := &file_proto_chat_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenShareUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenShareUpdate) ProtoMessage() {}

func (x *ScreenShareUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenShareUpdate.ProtoReflect.Descriptor instead.
func (*ScreenShareUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{110}
}

func (x *ScreenShareUpdate) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ScreenShareUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ScreenShareUpdate) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ScreenShareUpdate) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

func (x *ScreenShareUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SubscribeToChatEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToChatEventsRequest) Reset() {
	*x = SubscribeToChatEventsRequest{}
	mi := &file_proto_chat_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToChatEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToChatEventsRequest) ProtoMessage() {}

func (x *SubscribeToChatEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToChatEventsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToChatEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{111}
}

func (x *SubscribeToChatEventsRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type ChatEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventType     ChatEventType          `protobuf:"varint,2,opt,name=eventType,proto3,enum=chat.ChatEventType" json:"eventType,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ChatId        string                 `protobuf:"bytes,4,opt,name=chatId,proto3" json:"chatId,omitempty"`
	MessageId     string                 `protobuf:"bytes,5,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      string                 `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatEvent) Reset() {
	*x = ChatEvent{}
	mi := &file_proto_chat_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent) ProtoMessage() {}

func (x *ChatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent.ProtoReflect.Descriptor instead.
func (*ChatEvent) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{112}
}

func (x *ChatEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatEvent) GetEventType() ChatEventType {
	if x != nil {
		return x.EventType
	}
	return ChatEventType_EVENT_MESSAGE_SENT
}

func (x *ChatEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatEvent) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatEvent) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ChatEvent) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

var File_proto_chat_proto protoreflect.FileDescriptor

const file_proto_chat_proto_rawDesc = "" +
	"\n" +
	"\x10proto/chat.proto\x12\x04chat\x1a\x1fgoogle/protobuf/timestamp.proto\"\x82\x01\n" +
	"\fStateMessage\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x90\x01\n" +
	"\fErrorMessage\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x03(\tR\adetails\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xa6\x01\n" +
	"\x12ChatStreamEnvelope\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x11.chat.ChatMessageH\x00R\amessage\x12*\n" +
	"\x05state\x18\x02 \x01(\v2\x12.chat.StateMessageH\x00R\x05state\x12*\n" +
	"\x05error\x18\x03 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\t\n" +
	"\apayload\"\xf8\v\n" +
	"\vChatMessage\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x12\x1a\n" +
	"\bsenderId\x18\x02 \x01(\tR\bsenderId\x12\x1e\n" +
	"\n" +
	"receiverId\x18\x03 \x01(\tR\n" +
	"receiverId\x12\x18\n" +
	"\agroupId\x18\x04 \x01(\tR\agroupId\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12%\n" +
	"\x04type\x18\x06 \x01(\x0e2\x11.chat.MessageTypeR\x04type\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\aisGroup\x18\b \x01(\bR\aisGroup\x12\x16\n" +
	"\x06isRead\x18\t \x01(\bR\x06isRead\x12\x1a\n" +
	"\bisEdited\x18\n" +
	" \x01(\bR\bisEdited\x12\x18\n" +
	"\alikedBy\x18\v \x03(\tR\alikedBy\x12*\n" +
	"\x10replyToMessageId\x18\f \x01(\tR\x10replyToMessageId\x12 \n" +
	"\vattachments\x18\r \x03(\tR\vattachments\x12+\n" +
	"\x06status\x18\x0e \x01(\x0e2\x13.chat.MessageStatusR\x06status\x12<\n" +
	"\vdeliveredAt\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\vdeliveredAt\x122\n" +
	"\x06readAt\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\x06readAt\x123\n" +
	"\treactions\x18\x11 \x03(\v2\x15.chat.MessageReactionR\treactions\x12\x1a\n" +
	"\bisPinned\x18\x12 \x01(\bR\bisPinned\x126\n" +
	"\bpinnedAt\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\bpinnedAt\x12\x1a\n" +
	"\bpinnedBy\x18\x14 \x01(\tR\bpinnedBy\x12\"\n" +
	"\fforwardCount\x18\x15 \x01(\x05R\fforwardCount\x12,\n" +
	"\x11originalMessageId\x18\x16 \x01(\tR\x11originalMessageId\x126\n" +
	"\ffileMetadata\x18\x17 \x01(\v2\x12.chat.FileMetadataR\ffileMetadata\x126\n" +
	"\flocationData\x18\x18 \x01(\v2\x12.chat.LocationDataR\flocationData\x12*\n" +
	"\bpollData\x18\x19 \x01(\v2\x0e.chat.PollDataR\bpollData\x12\x1a\n" +
	"\bthreadId\x18\x1a \x01(\tR\bthreadId\x12(\n" +
	"\x0fparentMessageId\x18\x1b \x01(\tR\x0fparentMessageId\x12*\n" +
	"\x10threadReplyCount\x18\x1c \x01(\x05R\x10threadReplyCount\x126\n" +
	"\beditedAt\x18\x1d \x01(\v2\x1a.google.protobuf.TimestampR\beditedAt\x12 \n" +
	"\veditHistory\x18\x1e \x03(\tR\veditHistory\x12 \n" +
	"\visScheduled\x18\x1f \x01(\bR\visScheduled\x12<\n" +
	"\vscheduledAt\x18  \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12*\n" +
	"\x10mentionedUserIds\x18! \x03(\tR\x10mentionedUserIds\x12(\n" +
	"\x0fisSystemMessage\x18\" \x01(\bR\x0fisSystemMessage\x12\x1e\n" +
	"\n" +
	"deviceInfo\x18# \x01(\tR\n" +
	"deviceInfo\x12$\n" +
	"\rclientVersion\x18$ \x01(\tR\rclientVersion\x12 \n" +
	"\visEncrypted\x18% \x01(\bR\visEncrypted\x12(\n" +
	"\x0fencryptionKeyId\x18& \x01(\tR\x0fencryptionKeyId\"\xc5\x01\n" +
	"\x12SendMessageRequest\x12\x1a\n" +
	"\bsenderId\x18\x01 \x01(\tR\bsenderId\x12\x1e\n" +
	"\n" +
	"receiverId\x18\x02 \x01(\tR\n" +
	"receiverId\x12\x18\n" +
	"\agroupId\x18\x03 \x01(\tR\agroupId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12%\n" +
	"\x04type\x18\x05 \x01(\x0e2\x11.chat.MessageTypeR\x04type\x12\x18\n" +
	"\aisGroup\x18\x06 \x01(\bR\aisGroup\"\xbe\x01\n" +
	"\x13SendMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x127\n" +
	"\fsavedMessage\x18\x03 \x01(\v2\x11.chat.ChatMessageH\x00R\fsavedMessage\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\x8f\x01\n" +
	"\x15GetChatHistoryRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06peerId\x18\x02 \x01(\tR\x06peerId\x12\x18\n" +
	"\aisGroup\x18\x03 \x01(\bR\aisGroup\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"@\n" +
	"\x0fChatMessageList\x12-\n" +
	"\bmessages\x18\x01 \x03(\v2\x11.chat.ChatMessageR\bmessages\"\xbd\x01\n" +
	"\x16GetChatHistoryResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x123\n" +
	"\bmessages\x18\x03 \x01(\v2\x15.chat.ChatMessageListH\x00R\bmessages\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"^\n" +
	"\x12ReadReceiptRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06peerId\x18\x02 \x01(\tR\x06peerId\x12\x18\n" +
	"\aisGroup\x18\x03 \x01(\bR\aisGroup\"\xb3\x01\n" +
	"\x13ReadReceiptResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"j\n" +
	"\x12EditMessageRequest\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\x12\x1e\n" +
	"\n" +
	"newContent\x18\x03 \x01(\tR\n" +
	"newContent\"\xc2\x01\n" +
	"\x13EditMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12;\n" +
	"\x0eupdatedMessage\x18\x03 \x01(\v2\x11.chat.ChatMessageH\x00R\x0eupdatedMessage\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"L\n" +
	"\x14DeleteMessageRequest\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"\xb5\x01\n" +
	"\x15DeleteMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\xf4\x01\n" +
	"\x15SearchMessagesRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x16\n" +
	"\x06peerId\x18\x03 \x01(\tR\x06peerId\x12\x18\n" +
	"\agroupId\x18\x04 \x01(\tR\agroupId\x12\x18\n" +
	"\aisGroup\x18\x05 \x01(\bR\aisGroup\x123\n" +
	"\vmessageType\x18\x06 \x01(\x0e2\x11.chat.MessageTypeR\vmessageType\x12\x14\n" +
	"\x05limit\x18\a \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\b \x01(\x05R\x06offset\"\xbd\x01\n" +
	"\x16SearchMessagesResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x123\n" +
	"\bmessages\x18\x03 \x01(\v2\x15.chat.ChatMessageListH\x00R\bmessages\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\x8f\x01\n" +
	"\x15ForwardMessageRequest\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x12\x1a\n" +
	"\bsenderId\x18\x02 \x01(\tR\bsenderId\x12 \n" +
	"\vreceiverIds\x18\x03 \x03(\tR\vreceiverIds\x12\x1a\n" +
	"\bgroupIds\x18\x04 \x03(\tR\bgroupIds\"\xcf\x01\n" +
	"\x16ForwardMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12E\n" +
	"\x11forwardedMessages\x18\x03 \x01(\v2\x15.chat.ChatMessageListH\x00R\x11forwardedMessages\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"{\n" +
	"\x11PinMessageRequest\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06chatId\x18\x03 \x01(\tR\x06chatId\x12\x18\n" +
	"\aisGroup\x18\x04 \x01(\bR\aisGroup\"\xb2\x01\n" +
	"\x12PinMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"}\n" +
	"\x13UnpinMessageRequest\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06chatId\x18\x03 \x01(\tR\x06chatId\x12\x18\n" +
	"\aisGroup\x18\x04 \x01(\bR\aisGroup\"\xb4\x01\n" +
	"\x14UnpinMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"L\n" +
	"\x18GetPinnedMessagesRequest\x12\x16\n" +
	"\x06chatId\x18\x01 \x01(\tR\x06chatId\x12\x18\n" +
	"\aisGroup\x18\x02 \x01(\bR\aisGroup\"\xcc\x01\n" +
	"\x19GetPinnedMessagesResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12?\n" +
	"\x0epinnedMessages\x18\x03 \x01(\v2\x15.chat.ChatMessageListH\x00R\x0epinnedMessages\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"M\n" +
	"\x15AddLikeMessageRequest\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"\xb6\x01\n" +
	"\x16AddLikeMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\x89\x01\n" +
	"\x19UpdateLikedMessageRequest\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\x126\n" +
	"\freactionType\x18\x03 \x01(\x0e2\x12.chat.ReactionTypeR\freactionType\"\xba\x01\n" +
	"\x1aUpdateLikedMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"1\n" +
	"\x17GetLikedMessagesRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"\xc9\x01\n" +
	"\x18GetLikedMessagesResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12=\n" +
	"\rlikedMessages\x18\x03 \x01(\v2\x15.chat.ChatMessageListH\x00R\rlikedMessages\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"0\n" +
	"\x16GetLastMessagesRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"\xc6\x01\n" +
	"\x17GetLastMessagesResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12;\n" +
	"\flastMessages\x18\x03 \x01(\v2\x15.chat.ChatMessageListH\x00R\flastMessages\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\":\n" +
	"\x1aGetUsersByUserEmailRequest\x12\x1c\n" +
	"\tuserEmail\x18\x01 \x03(\tR\tuserEmail\"\x86\x01\n" +
	"\bUserInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bfullName\x18\x02 \x01(\tR\bfullName\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x1c\n" +
	"\tavatarUrl\x18\x04 \x01(\tR\tavatarUrl\x12\x1a\n" +
	"\bisOnline\x18\x05 \x01(\bR\bisOnline\"4\n" +
	"\fUserInfoList\x12$\n" +
	"\x05users\x18\x01 \x03(\v2\x0e.chat.UserInfoR\x05users\"\xb9\x01\n" +
	"\x1bGetUsersByUserEmailResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12*\n" +
	"\x05users\x18\x03 \x01(\v2\x12.chat.UserInfoListH\x00R\x05users\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"2\n" +
	"\x16GetUsersInGroupRequest\x12\x18\n" +
	"\agroupId\x18\x01 \x01(\tR\agroupId\"\xb5\x01\n" +
	"\x17GetUsersInGroupResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12*\n" +
	"\x05users\x18\x03 \x01(\v2\x12.chat.UserInfoListH\x00R\x05users\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"-\n" +
	"\x11UserStatusRequest\x12\x18\n" +
	"\auserIds\x18\x01 \x03(\tR\auserIds\"x\n" +
	"\n" +
	"UserStatus\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bisOnline\x18\x02 \x01(\bR\bisOnline\x126\n" +
	"\blastSeen\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\">\n" +
	"\x0eUserStatusList\x12,\n" +
	"\bstatuses\x18\x01 \x03(\v2\x10.chat.UserStatusR\bstatuses\"\xb8\x01\n" +
	"\x12UserStatusResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x122\n" +
	"\bstatuses\x18\x03 \x01(\v2\x14.chat.UserStatusListH\x00R\bstatuses\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"9\n" +
	"\x1dUserStatusSubscriptionRequest\x12\x18\n" +
	"\auserIds\x18\x01 \x03(\tR\auserIds\"2\n" +
	"\x18LastMessageStreamRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"\xae\x01\n" +
	"\x12CreateGroupRequest\x12\x1c\n" +
	"\tcreatorId\x18\x01 \x01(\tR\tcreatorId\x12\x1c\n" +
	"\tgroupName\x18\x02 \x01(\tR\tgroupName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\tmemberIds\x18\x04 \x03(\tR\tmemberIds\x12\x1c\n" +
	"\tavatarUrl\x18\x05 \x01(\tR\tavatarUrl\"\xec\x02\n" +
	"\tGroupInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\tavatarUrl\x18\x04 \x01(\tR\tavatarUrl\x12\x1c\n" +
	"\tcreatorId\x18\x05 \x01(\tR\tcreatorId\x12+\n" +
	"\amembers\x18\x06 \x03(\v2\x11.chat.GroupMemberR\amembers\x128\n" +
	"\tcreatedAt\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x128\n" +
	"\tupdatedAt\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1e\n" +
	"\n" +
	"maxMembers\x18\t \x01(\x05R\n" +
	"maxMembers\x12\x1c\n" +
	"\tisPrivate\x18\n" +
	" \x01(\bR\tisPrivate\"\x82\x01\n" +
	"\vGroupMember\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12#\n" +
	"\x04role\x18\x02 \x01(\x0e2\x0f.chat.GroupRoleR\x04role\x126\n" +
	"\bjoinedAt\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\"\xae\x01\n" +
	"\x13CreateGroupResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12'\n" +
	"\x05group\x18\x03 \x01(\v2\x0f.chat.GroupInfoH\x00R\x05group\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"D\n" +
	"\x10JoinGroupRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\agroupId\x18\x02 \x01(\tR\agroupId\"\xb1\x01\n" +
	"\x11JoinGroupResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"E\n" +
	"\x11LeaveGroupRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\agroupId\x18\x02 \x01(\tR\agroupId\"\xb2\x01\n" +
	"\x12LeaveGroupResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\xf2\x01\n" +
	"\x12UpdateGroupRequest\x12\x18\n" +
	"\agroupId\x18\x01 \x01(\tR\agroupId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\x12\x1c\n" +
	"\tgroupName\x18\x03 \x01(\tR\tgroupName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1c\n" +
	"\tavatarUrl\x18\x05 \x01(\tR\tavatarUrl\x12\"\n" +
	"\faddMemberIds\x18\x06 \x03(\tR\faddMemberIds\x12(\n" +
	"\x0fremoveMemberIds\x18\a \x03(\tR\x0fremoveMemberIds\"\xae\x01\n" +
	"\x13UpdateGroupResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12'\n" +
	"\x05group\x18\x03 \x01(\v2\x0f.chat.GroupInfoH\x00R\x05group\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\">\n" +
	"\x1eGetAllGroupsByUserEmailRequest\x12\x1c\n" +
	"\tuserEmail\x18\x01 \x01(\tR\tuserEmail\"8\n" +
	"\rGroupInfoList\x12'\n" +
	"\x06groups\x18\x01 \x03(\v2\x0f.chat.GroupInfoR\x06groups\"\xc0\x01\n" +
	"\x1fGetAllGroupsByUserEmailResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12-\n" +
	"\x06groups\x18\x03 \x01(\v2\x13.chat.GroupInfoListH\x00R\x06groups\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"i\n" +
	"\x19TypingSubscriptionRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\apeerIds\x18\x02 \x03(\tR\apeerIds\x12\x1a\n" +
	"\bgroupIds\x18\x03 \x03(\tR\bgroupIds\"\xcb\x01\n" +
	"\x0fTypingIndicator\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06peerId\x18\x02 \x01(\tR\x06peerId\x12\x18\n" +
	"\agroupId\x18\x03 \x01(\tR\agroupId\x12\x18\n" +
	"\aisGroup\x18\x04 \x01(\bR\aisGroup\x12\x1a\n" +
	"\bisTyping\x18\x05 \x01(\bR\bisTyping\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"6\n" +
	"\x1aSubscribeToPresenceRequest\x12\x18\n" +
	"\auserIds\x18\x01 \x03(\tR\auserIds\"\xb4\x01\n" +
	"\x0ePresenceUpdate\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12,\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.chat.PresenceStatusR\x06status\x12$\n" +
	"\rcustomMessage\x18\x03 \x01(\tR\rcustomMessage\x126\n" +
	"\blastSeen\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\":\n" +
	" SubscribeToMessageUpdatesRequest\x12\x16\n" +
	"\x06chatId\x18\x01 \x01(\tR\x06chatId\"\xf3\x01\n" +
	"\rMessageUpdate\x12\x1c\n" +
	"\tmessageId\x18\x01 \x01(\tR\tmessageId\x127\n" +
	"\n" +
	"updateType\x18\x02 \x01(\x0e2\x17.chat.MessageUpdateTypeR\n" +
	"updateType\x129\n" +
	"\x0eupdatedMessage\x18\x03 \x01(\v2\x11.chat.ChatMessageR\x0eupdatedMessage\x12\x16\n" +
	"\x06userId\x18\x04 \x01(\tR\x06userId\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"6\n" +
	"\x18SubscribeToThreadRequest\x12\x1a\n" +
	"\bthreadId\x18\x01 \x01(\tR\bthreadId\"\xb7\x01\n" +
	"\fThreadUpdate\x12\x1a\n" +
	"\bthreadId\x18\x01 \x01(\tR\bthreadId\x12+\n" +
	"\amessage\x18\x02 \x01(\v2\x11.chat.ChatMessageR\amessage\x12$\n" +
	"\x04type\x18\x03 \x01(\x0e2\x10.chat.ThreadTypeR\x04type\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"9\n" +
	"\x1fSubscribeToNotificationsRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"\xa4\x02\n" +
	"\x12NotificationUpdate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x04type\x18\x02 \x01(\x0e2\x16.chat.NotificationTypeR\x04type\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1a\n" +
	"\bsenderId\x18\x05 \x01(\tR\bsenderId\x12\x16\n" +
	"\x06chatId\x18\x06 \x01(\tR\x06chatId\x12\x1c\n" +
	"\tmessageId\x18\a \x01(\tR\tmessageId\x128\n" +
	"\ttimestamp\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x16\n" +
	"\x06isRead\x18\t \x01(\bR\x06isRead\"V\n" +
	"\x16AddNotificationRequest\x12<\n" +
	"\fnotification\x18\x01 \x01(\v2\x18.chat.NotificationUpdateR\fnotification\"\xc9\x01\n" +
	"\x17AddNotificationResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12>\n" +
	"\fnotification\x18\x03 \x01(\v2\x18.chat.NotificationUpdateH\x00R\fnotification\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"Y\n" +
	"\x19UpdateNotificationRequest\x12<\n" +
	"\fnotification\x18\x01 \x01(\v2\x18.chat.NotificationUpdateR\fnotification\"\xcc\x01\n" +
	"\x1aUpdateNotificationResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12>\n" +
	"\fnotification\x18\x03 \x01(\v2\x18.chat.NotificationUpdateH\x00R\fnotification\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"X\n" +
	"\x16GetNotificationRequest\x12&\n" +
	"\x0enotificationId\x18\x01 \x01(\tR\x0enotificationId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"\xc9\x01\n" +
	"\x17GetNotificationResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12>\n" +
	"\fnotification\x18\x03 \x01(\v2\x18.chat.NotificationUpdateH\x00R\fnotification\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"_\n" +
	"\x1dMarkNotificationAsReadRequest\x12&\n" +
	"\x0enotificationId\x18\x01 \x01(\tR\x0enotificationId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"\xbe\x01\n" +
	"\x1eMarkNotificationAsReadResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\";\n" +
	"!GetUnreadNotificationCountRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"\xac\x01\n" +
	"\"GetUnreadNotificationCountResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12\x16\n" +
	"\x05count\x18\x03 \x01(\x05H\x00R\x05count\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\xf0\x01\n" +
	"\x19AddScheduleMessageRequest\x12\x16\n" +
	"\x06chatId\x18\x01 \x01(\tR\x06chatId\x12\x1a\n" +
	"\bsenderId\x18\x02 \x01(\tR\bsenderId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12<\n" +
	"\vscheduledAt\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12%\n" +
	"\x04type\x18\x05 \x01(\x0e2\x11.chat.MessageTypeR\x04type\x12 \n" +
	"\vattachments\x18\x06 \x03(\tR\vattachments\"\xbe\x01\n" +
	"\x1aAddScheduleMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x120\n" +
	"\x12scheduledMessageId\x18\x03 \x01(\tH\x00R\x12scheduledMessageId\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\xbe\x01\n" +
	"\x1cUpdateScheduleMessageRequest\x12.\n" +
	"\x12scheduledMessageId\x18\x01 \x01(\tR\x12scheduledMessageId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12<\n" +
	"\vscheduledAt\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\"\xbd\x01\n" +
	"\x1dUpdateScheduleMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"g\n" +
	"\x1dCancelScheduledMessageRequest\x12.\n" +
	"\x12scheduledMessageId\x18\x01 \x01(\tR\x12scheduledMessageId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"\xbe\x01\n" +
	"\x1eCancelScheduledMessageResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"M\n" +
	"\x1bGetScheduledMessagesRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06chatId\x18\x02 \x01(\tR\x06chatId\"\xb1\x02\n" +
	"\x10ScheduledMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06chatId\x18\x02 \x01(\tR\x06chatId\x12\x1a\n" +
	"\bsenderId\x18\x03 \x01(\tR\bsenderId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12<\n" +
	"\vscheduledAt\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12%\n" +
	"\x04type\x18\x06 \x01(\x0e2\x11.chat.MessageTypeR\x04type\x12 \n" +
	"\vattachments\x18\a \x03(\tR\vattachments\x128\n" +
	"\tcreatedAt\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"J\n" +
	"\x14ScheduledMessageList\x122\n" +
	"\bmessages\x18\x01 \x03(\v2\x16.chat.ScheduledMessageR\bmessages\"\xc8\x01\n" +
	"\x1cGetScheduledMessagesResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x128\n" +
	"\bmessages\x18\x03 \x01(\v2\x1a.chat.ScheduledMessageListH\x00R\bmessages\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\xb1\x01\n" +
	"\x13InitiateCallRequest\x12\x1a\n" +
	"\bcallerId\x18\x01 \x01(\tR\bcallerId\x12\x1e\n" +
	"\n" +
	"receiverId\x18\x02 \x01(\tR\n" +
	"receiverId\x12\x18\n" +
	"\agroupId\x18\x03 \x01(\tR\agroupId\x12*\n" +
	"\bcallType\x18\x04 \x01(\x0e2\x0e.chat.CallTypeR\bcallType\x12\x18\n" +
	"\aisGroup\x18\x05 \x01(\bR\aisGroup\"\x98\x03\n" +
	"\bCallInfo\x12\x16\n" +
	"\x06callId\x18\x01 \x01(\tR\x06callId\x12\x1a\n" +
	"\bcallerId\x18\x02 \x01(\tR\bcallerId\x12\x1e\n" +
	"\n" +
	"receiverId\x18\x03 \x01(\tR\n" +
	"receiverId\x12\x18\n" +
	"\agroupId\x18\x04 \x01(\tR\agroupId\x12*\n" +
	"\bcallType\x18\x05 \x01(\x0e2\x0e.chat.CallTypeR\bcallType\x12(\n" +
	"\x06status\x18\x06 \x01(\x0e2\x10.chat.CallStatusR\x06status\x128\n" +
	"\tstartTime\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x124\n" +
	"\aendTime\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\bduration\x18\t \x01(\x05R\bduration\x12\x18\n" +
	"\aisGroup\x18\n" +
	" \x01(\bR\aisGroup\x12\"\n" +
	"\fparticipants\x18\v \x03(\tR\fparticipants\"\xac\x01\n" +
	"\x14InitiateCallResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12$\n" +
	"\x04call\x18\x03 \x01(\v2\x0e.chat.CallInfoH\x00R\x04call\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"C\n" +
	"\x11AcceptCallRequest\x12\x16\n" +
	"\x06callId\x18\x01 \x01(\tR\x06callId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"\xaa\x01\n" +
	"\x12AcceptCallResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12$\n" +
	"\x04call\x18\x03 \x01(\v2\x0e.chat.CallInfoH\x00R\x04call\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"C\n" +
	"\x11RejectCallRequest\x12\x16\n" +
	"\x06callId\x18\x01 \x01(\tR\x06callId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"\xb2\x01\n" +
	"\x12RejectCallResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x12.chat.StateMessageH\x00R\x06status\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"@\n" +
	"\x0eEndCallRequest\x12\x16\n" +
	"\x06callId\x18\x01 \x01(\tR\x06callId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"\xa7\x01\n" +
	"\x0fEndCallResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12$\n" +
	"\x04call\x18\x03 \x01(\v2\x0e.chat.CallInfoH\x00R\x04call\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"]\n" +
	"\x15GetCallHistoryRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"4\n" +
	"\fCallInfoList\x12$\n" +
	"\x05calls\x18\x01 \x03(\v2\x0e.chat.CallInfoR\x05calls\"\xb4\x01\n" +
	"\x16GetCallHistoryResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12*\n" +
	"\x05calls\x18\x03 \x01(\v2\x12.chat.CallInfoListH\x00R\x05calls\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"\xea\x01\n" +
	"\fFileMetadata\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\x12\x1a\n" +
	"\bfileType\x18\x02 \x01(\tR\bfileType\x12\x1a\n" +
	"\bfileSize\x18\x03 \x01(\x03R\bfileSize\x12\x18\n" +
	"\afileUrl\x18\x04 \x01(\tR\afileUrl\x12\"\n" +
	"\fthumbnailUrl\x18\x05 \x01(\tR\fthumbnailUrl\x12\x1a\n" +
	"\bduration\x18\x06 \x01(\x05R\bduration\x12\x14\n" +
	"\x05width\x18\a \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\b \x01(\x05R\x06height\"e\n" +
	"\x11FileUploadRequest\x120\n" +
	"\bmetadata\x18\x01 \x01(\v2\x12.chat.FileMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunkB\x06\n" +
	"\x04data\"\xbe\x01\n" +
	"\x12FileUploadResponse\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x128\n" +
	"\fuploadedFile\x18\x03 \x01(\v2\x12.chat.FileMetadataH\x00R\fuploadedFile\x12*\n" +
	"\x05error\x18\x04 \x01(\v2\x12.chat.ErrorMessageH\x00R\x05errorB\b\n" +
	"\x06result\"E\n" +
	"\x13FileDownloadRequest\x12\x16\n" +
	"\x06fileId\x18\x01 \x01(\tR\x06fileId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"h\n" +
	"\x14FileDownloadResponse\x120\n" +
	"\bmetadata\x18\x01 \x01(\v2\x12.chat.FileMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunkB\x06\n" +
	"\x04data\"\x80\x01\n" +
	"\fLocationData\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1c\n" +
	"\tplaceName\x18\x04 \x01(\tR\tplaceName\"j\n" +
	"\n" +
	"PollOption\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x1a\n" +
	"\bvoterIds\x18\x03 \x03(\tR\bvoterIds\x12\x1c\n" +
	"\tvoteCount\x18\x04 \x01(\x05R\tvoteCount\"\x82\x02\n" +
	"\bPollData\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\x12*\n" +
	"\aoptions\x18\x02 \x03(\v2\x10.chat.PollOptionR\aoptions\x122\n" +
	"\x14allowMultipleAnswers\x18\x03 \x01(\bR\x14allowMultipleAnswers\x128\n" +
	"\texpiresAt\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12 \n" +
	"\visAnonymous\x18\x05 \x01(\bR\visAnonymous\x12\x1e\n" +
	"\n" +
	"totalVotes\x18\x06 \x01(\x05R\n" +
	"totalVotes\"\x9b\x01\n" +
	"\x0fMessageReaction\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x126\n" +
	"\freactionType\x18\x02 \x01(\x0e2\x12.chat.ReactionTypeR\freactionType\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"7\n" +
	"\x1dSubscribeToScreenShareRequest\x12\x16\n" +
	"\x06chatId\x18\x01 \x01(\tR\x06chatId\"\xb7\x01\n" +
	"\x11ScreenShareUpdate\x12\x1c\n" +
	"\tsessionId\x18\x01 \x01(\tR\tsessionId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12\x1a\n" +
	"\bshareUrl\x18\x04 \x01(\tR\bshareUrl\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"6\n" +
	"\x1cSubscribeToChatEventsRequest\x12\x16\n" +
	"\x06chatId\x18\x01 \x01(\tR\x06chatId\"\xf2\x01\n" +
	"\tChatEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\teventType\x18\x02 \x01(\x0e2\x13.chat.ChatEventTypeR\teventType\x12\x16\n" +
	"\x06userId\x18\x03 \x01(\tR\x06userId\x12\x16\n" +
	"\x06chatId\x18\x04 \x01(\tR\x06chatId\x12\x1c\n" +
	"\tmessageId\x18\x05 \x01(\tR\tmessageId\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1a\n" +
	"\bmetadata\x18\a \x01(\tR\bmetadata*\xf1\x01\n" +
	"\vMessageType\x12\f\n" +
	"\bMSG_TEXT\x10\x00\x12\r\n" +
	"\tMSG_IMAGE\x10\x01\x12\r\n" +
	"\tMSG_VIDEO\x10\x02\x12\f\n" +
	"\bMSG_FILE\x10\x03\x12\r\n" +
	"\tMSG_AUDIO\x10\x04\x12\x10\n" +
	"\fMSG_LOCATION\x10\x05\x12\x0f\n" +
	"\vMSG_STICKER\x10\x06\x12\v\n" +
	"\aMSG_GIF\x10\a\x12\x12\n" +
	"\x0eMSG_VOICE_NOTE\x10\b\x12\x0e\n" +
	"\n" +
	"MSG_SYSTEM\x10\t\x12\f\n" +
	"\bMSG_POLL\x10\n" +
	"\x12\x0f\n" +
	"\vMSG_CONTACT\x10\v\x12\x10\n" +
	"\fMSG_DOCUMENT\x10\f\x12\x14\n" +
	"\x10MSG_LINK_PREVIEW\x10\r**\n" +
	"\bCallType\x12\x0e\n" +
	"\n" +
	"CALL_VOICE\x10\x00\x12\x0e\n" +
	"\n" +
	"CALL_VIDEO\x10\x01*\x88\x01\n" +
	"\n" +
	"CallStatus\x12\x12\n" +
	"\x0eCALL_INITIATED\x10\x00\x12\x10\n" +
	"\fCALL_RINGING\x10\x01\x12\x11\n" +
	"\rCALL_ACCEPTED\x10\x02\x12\x11\n" +
	"\rCALL_REJECTED\x10\x03\x12\x0e\n" +
	"\n" +
	"CALL_ENDED\x10\x04\x12\x0f\n" +
	"\vCALL_MISSED\x10\x05\x12\r\n" +
	"\tCALL_BUSY\x10\x06*J\n" +
	"\fReactionType\x12\b\n" +
	"\x04LIKE\x10\x00\x12\b\n" +
	"\x04LOVE\x10\x01\x12\t\n" +
	"\x05LAUGH\x10\x02\x12\a\n" +
	"\x03WOW\x10\x03\x12\a\n" +
	"\x03SAD\x10\x04\x12\t\n" +
	"\x05ANGRY\x10\x05*y\n" +
	"\x0ePresenceStatus\x12\x14\n" +
	"\x10PRESENCE_OFFLINE\x10\x00\x12\x13\n" +
	"\x0fPRESENCE_ONLINE\x10\x01\x12\x11\n" +
	"\rPRESENCE_AWAY\x10\x02\x12\x11\n" +
	"\rPRESENCE_BUSY\x10\x03\x12\x16\n" +
	"\x12PRESENCE_INVISIBLE\x10\x04*\x9a\x01\n" +
	"\x11MessageUpdateType\x12\x11\n" +
	"\rUPDATE_EDITED\x10\x00\x12\x12\n" +
	"\x0eUPDATE_DELETED\x10\x01\x12\x19\n" +
	"\x15UPDATE_REACTION_ADDED\x10\x02\x12\x1b\n" +
	"\x17UPDATE_REACTION_REMOVED\x10\x03\x12\x11\n" +
	"\rUPDATE_PINNED\x10\x04\x12\x13\n" +
	"\x0fUPDATE_UNPINNED\x10\x05*N\n" +
	"\n" +
	"ThreadType\x12\x10\n" +
	"\fTHREAD_REPLY\x10\x00\x12\x15\n" +
	"\x11THREAD_DISCUSSION\x10\x01\x12\x17\n" +
	"\x13THREAD_ANNOUNCEMENT\x10\x02*\xb0\x01\n" +
	"\x10NotificationType\x12\x18\n" +
	"\x14NOTIFICATION_MESSAGE\x10\x00\x12\x18\n" +
	"\x14NOTIFICATION_MENTION\x10\x01\x12\x19\n" +
	"\x15NOTIFICATION_REACTION\x10\x02\x12\x15\n" +
	"\x11NOTIFICATION_CALL\x10\x03\x12\x1d\n" +
	"\x19NOTIFICATION_GROUP_INVITE\x10\x04\x12\x17\n" +
	"\x13NOTIFICATION_SYSTEM\x10\x05*\xa5\x02\n" +
	"\rChatEventType\x12\x16\n" +
	"\x12EVENT_MESSAGE_SENT\x10\x00\x12\x18\n" +
	"\x14EVENT_MESSAGE_EDITED\x10\x01\x12\x19\n" +
	"\x15EVENT_MESSAGE_DELETED\x10\x02\x12\x15\n" +
	"\x11EVENT_USER_JOINED\x10\x03\x12\x13\n" +
	"\x0fEVENT_USER_LEFT\x10\x04\x12\x16\n" +
	"\x12EVENT_TYPING_START\x10\x05\x12\x15\n" +
	"\x11EVENT_TYPING_STOP\x10\x06\x12\x16\n" +
	"\x12EVENT_CALL_STARTED\x10\a\x12\x14\n" +
	"\x10EVENT_CALL_ENDED\x10\b\x12\x1e\n" +
	"\x1aEVENT_SCREEN_SHARE_STARTED\x10\t\x12\x1e\n" +
	"\x1aEVENT_SCREEN_SHARE_STOPPED\x10\n" +
	"*>\n" +
	"\rMessageStatus\x12\b\n" +
	"\x04SENT\x10\x00\x12\r\n" +
	"\tDELIVERED\x10\x01\x12\b\n" +
	"\x04READ\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03*-\n" +
	"\tGroupRole\x12\n" +
	"\n" +
	"\x06MEMBER\x10\x00\x12\t\n" +
	"\x05ADMIN\x10\x01\x12\t\n" +
	"\x05OWNER\x10\x022\xf9\x1d\n" +
	"\vChatService\x12D\n" +
	"\n" +
	"ChatStream\x12\x18.chat.ChatStreamEnvelope\x1a\x18.chat.ChatStreamEnvelope(\x010\x01\x12N\n" +
	"\x17SubscribeToLastMessages\x12\x1e.chat.LastMessageStreamRequest\x1a\x11.chat.ChatMessage0\x01\x12P\n" +
	"\x15SubscribeToUserStatus\x12#.chat.UserStatusSubscriptionRequest\x1a\x10.chat.UserStatus0\x01\x12W\n" +
	"\x1bSubscribeToTypingIndicators\x12\x1f.chat.TypingSubscriptionRequest\x1a\x15.chat.TypingIndicator0\x01\x12A\n" +
	"\n" +
	"UploadFile\x12\x17.chat.FileUploadRequest\x1a\x18.chat.FileUploadResponse(\x01\x12G\n" +
	"\fDownloadFile\x12\x19.chat.FileDownloadRequest\x1a\x1a.chat.FileDownloadResponse0\x01\x12O\n" +
	"\x13SubscribeToPresence\x12 .chat.SubscribeToPresenceRequest\x1a\x14.chat.PresenceUpdate0\x01\x12Z\n" +
	"\x19SubscribeToMessageUpdates\x12&.chat.SubscribeToMessageUpdatesRequest\x1a\x13.chat.MessageUpdate0\x01\x12I\n" +
	"\x11SubscribeToThread\x12\x1e.chat.SubscribeToThreadRequest\x1a\x12.chat.ThreadUpdate0\x01\x12]\n" +
	"\x18SubscribeToNotifications\x12%.chat.SubscribeToNotificationsRequest\x1a\x18.chat.NotificationUpdate0\x01\x12X\n" +
	"\x16SubscribeToScreenShare\x12#.chat.SubscribeToScreenShareRequest\x1a\x17.chat.ScreenShareUpdate0\x01\x12N\n" +
	"\x15SubscribeToChatEvents\x12\".chat.SubscribeToChatEventsRequest\x1a\x0f.chat.ChatEvent0\x01\x12B\n" +
	"\vSendMessage\x12\x18.chat.SendMessageRequest\x1a\x19.chat.SendMessageResponse\x12B\n" +
	"\vEditMessage\x12\x18.chat.EditMessageRequest\x1a\x19.chat.EditMessageResponse\x12H\n" +
	"\rDeleteMessage\x12\x1a.chat.DeleteMessageRequest\x1a\x1b.chat.DeleteMessageResponse\x12K\n" +
	"\x0eGetChatHistory\x12\x1b.chat.GetChatHistoryRequest\x1a\x1c.chat.GetChatHistoryResponse\x12A\n" +
	"\n" +
	"MarkAsRead\x12\x18.chat.ReadReceiptRequest\x1a\x19.chat.ReadReceiptResponse\x12K\n" +
	"\x0eSearchMessages\x12\x1b.chat.SearchMessagesRequest\x1a\x1c.chat.SearchMessagesResponse\x12K\n" +
	"\x0eForwardMessage\x12\x1b.chat.ForwardMessageRequest\x1a\x1c.chat.ForwardMessageResponse\x12?\n" +
	"\n" +
	"PinMessage\x12\x17.chat.PinMessageRequest\x1a\x18.chat.PinMessageResponse\x12E\n" +
	"\fUnpinMessage\x12\x19.chat.UnpinMessageRequest\x1a\x1a.chat.UnpinMessageResponse\x12T\n" +
	"\x11GetPinnedMessages\x12\x1e.chat.GetPinnedMessagesRequest\x1a\x1f.chat.GetPinnedMessagesResponse\x12K\n" +
	"\x0eAddLikeMessage\x12\x1b.chat.AddLikeMessageRequest\x1a\x1c.chat.AddLikeMessageResponse\x12W\n" +
	"\x12UpdateLikedMessage\x12\x1f.chat.UpdateLikedMessageRequest\x1a .chat.UpdateLikedMessageResponse\x12Q\n" +
	"\x10GetLikedMessages\x12\x1d.chat.GetLikedMessagesRequest\x1a\x1e.chat.GetLikedMessagesResponse\x12N\n" +
	"\x0fGetLastMessages\x12\x1c.chat.GetLastMessagesRequest\x1a\x1d.chat.GetLastMessagesResponse\x12Z\n" +
	"\x13GetUsersByUserEmail\x12 .chat.GetUsersByUserEmailRequest\x1a!.chat.GetUsersByUserEmailResponse\x12N\n" +
	"\x0fGetUsersInGroup\x12\x1c.chat.GetUsersInGroupRequest\x1a\x1d.chat.GetUsersInGroupResponse\x12B\n" +
	"\rGetUserStatus\x12\x17.chat.UserStatusRequest\x1a\x18.chat.UserStatusResponse\x12B\n" +
	"\vCreateGroup\x12\x18.chat.CreateGroupRequest\x1a\x19.chat.CreateGroupResponse\x12<\n" +
	"\tJoinGroup\x12\x16.chat.JoinGroupRequest\x1a\x17.chat.JoinGroupResponse\x12?\n" +
	"\n" +
	"LeaveGroup\x12\x17.chat.LeaveGroupRequest\x1a\x18.chat.LeaveGroupResponse\x12B\n" +
	"\vUpdateGroup\x12\x18.chat.UpdateGroupRequest\x1a\x19.chat.UpdateGroupResponse\x12f\n" +
	"\x17GetAllGroupsByUserEmail\x12$.chat.GetAllGroupsByUserEmailRequest\x1a%.chat.GetAllGroupsByUserEmailResponse\x12E\n" +
	"\fInitiateCall\x12\x19.chat.InitiateCallRequest\x1a\x1a.chat.InitiateCallResponse\x12?\n" +
	"\n" +
	"AcceptCall\x12\x17.chat.AcceptCallRequest\x1a\x18.chat.AcceptCallResponse\x12?\n" +
	"\n" +
	"RejectCall\x12\x17.chat.RejectCallRequest\x1a\x18.chat.RejectCallResponse\x126\n" +
	"\aEndCall\x12\x14.chat.EndCallRequest\x1a\x15.chat.EndCallResponse\x12K\n" +
	"\x0eGetCallHistory\x12\x1b.chat.GetCallHistoryRequest\x1a\x1c.chat.GetCallHistoryResponse\x12N\n" +
	"\x0fAddNotification\x12\x1c.chat.AddNotificationRequest\x1a\x1d.chat.AddNotificationResponse\x12W\n" +
	"\x12UpdateNotification\x12\x1f.chat.UpdateNotificationRequest\x1a .chat.UpdateNotificationResponse\x12N\n" +
	"\x0fGetNotification\x12\x1c.chat.GetNotificationRequest\x1a\x1d.chat.GetNotificationResponse\x12c\n" +
	"\x16MarkNotificationAsRead\x12#.chat.MarkNotificationAsReadRequest\x1a$.chat.MarkNotificationAsReadResponse\x12o\n" +
	"\x1aGetUnreadNotificationCount\x12'.chat.GetUnreadNotificationCountRequest\x1a(.chat.GetUnreadNotificationCountResponse\x12W\n" +
	"\x12AddScheduleMessage\x12\x1f.chat.AddScheduleMessageRequest\x1a .chat.AddScheduleMessageResponse\x12`\n" +
	"\x15UpdateScheduleMessage\x12\".chat.UpdateScheduleMessageRequest\x1a#.chat.UpdateScheduleMessageResponse\x12c\n" +
	"\x16CancelScheduledMessage\x12#.chat.CancelScheduledMessageRequest\x1a$.chat.CancelScheduledMessageResponse\x12]\n" +
	"\x14GetScheduledMessages\x12!.chat.GetScheduledMessagesRequest\x1a\".chat.GetScheduledMessagesResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_chat_proto_rawDescOnce sync.Once
	file_proto_chat_proto_rawDescData []byte
)

func file_proto_chat_proto_rawDescGZIP() []byte {
	file_proto_chat_proto_rawDescOnce.Do(func() {
		file_proto_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_chat_proto_rawDesc), len(file_proto_chat_proto_rawDesc)))
	})
	return file_proto_chat_proto_rawDescData
}

var file_proto_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_proto_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 113)
var file_proto_chat_proto_goTypes = []any{
	(MessageType)(0),                           // 0: chat.MessageType
	(CallType)(0),                              // 1: chat.CallType
	(CallStatus)(0),                            // 2: chat.CallStatus
	(ReactionType)(0),                          // 3: chat.ReactionType
	(PresenceStatus)(0),                        // 4: chat.PresenceStatus
	(MessageUpdateType)(0),                     // 5: chat.MessageUpdateType
	(ThreadType)(0),                            // 6: chat.ThreadType
	(NotificationType)(0),                      // 7: chat.NotificationType
	(ChatEventType)(0),                         // 8: chat.ChatEventType
	(MessageStatus)(0),                         // 9: chat.MessageStatus
	(GroupRole)(0),                             // 10: chat.GroupRole
	(*StateMessage)(nil),                       // 11: chat.StateMessage
	(*ErrorMessage)(nil),                       // 12: chat.ErrorMessage
	(*ChatStreamEnvelope)(nil),                 // 13: chat.ChatStreamEnvelope
	(*ChatMessage)(nil),                        // 14: chat.ChatMessage
	(*SendMessageRequest)(nil),                 // 15: chat.SendMessageRequest
	(*SendMessageResponse)(nil),                // 16: chat.SendMessageResponse
	(*GetChatHistoryRequest)(nil),              // 17: chat.GetChatHistoryRequest
	(*ChatMessageList)(nil),                    // 18: chat.ChatMessageList
	(*GetChatHistoryResponse)(nil),             // 19: chat.GetChatHistoryResponse
	(*ReadReceiptRequest)(nil),                 // 20: chat.ReadReceiptRequest
	(*ReadReceiptResponse)(nil),                // 21: chat.ReadReceiptResponse
	(*EditMessageRequest)(nil),                 // 22: chat.EditMessageRequest
	(*EditMessageResponse)(nil),                // 23: chat.EditMessageResponse
	(*DeleteMessageRequest)(nil),               // 24: chat.DeleteMessageRequest
	(*DeleteMessageResponse)(nil),              // 25: chat.DeleteMessageResponse
	(*SearchMessagesRequest)(nil),              // 26: chat.SearchMessagesRequest
	(*SearchMessagesResponse)(nil),             // 27: chat.SearchMessagesResponse
	(*ForwardMessageRequest)(nil),              // 28: chat.ForwardMessageRequest
	(*ForwardMessageResponse)(nil),             // 29: chat.ForwardMessageResponse
	(*PinMessageRequest)(nil),                  // 30: chat.PinMessageRequest
	(*PinMessageResponse)(nil),                 // 31: chat.PinMessageResponse
	(*UnpinMessageRequest)(nil),                // 32: chat.UnpinMessageRequest
	(*UnpinMessageResponse)(nil),               // 33: chat.UnpinMessageResponse
	(*GetPinnedMessagesRequest)(nil),           // 34: chat.GetPinnedMessagesRequest
	(*GetPinnedMessagesResponse)(nil),          // 35: chat.GetPinnedMessagesResponse
	(*AddLikeMessageRequest)(nil),              // 36: chat.AddLikeMessageRequest
	(*AddLikeMessageResponse)(nil),             // 37: chat.AddLikeMessageResponse
	(*UpdateLikedMessageRequest)(nil),          // 38: chat.UpdateLikedMessageRequest
	(*UpdateLikedMessageResponse)(nil),         // 39: chat.UpdateLikedMessageResponse
	(*GetLikedMessagesRequest)(nil),            // 40: chat.GetLikedMessagesRequest
	(*GetLikedMessagesResponse)(nil),           // 41: chat.GetLikedMessagesResponse
	(*GetLastMessagesRequest)(nil),             // 42: chat.GetLastMessagesRequest
	(*GetLastMessagesResponse)(nil),            // 43: chat.GetLastMessagesResponse
	(*GetUsersByUserEmailRequest)(nil),         // 44: chat.GetUsersByUserEmailRequest
	(*UserInfo)(nil),                           // 45: chat.UserInfo
	(*UserInfoList)(nil),                       // 46: chat.UserInfoList
	(*GetUsersByUserEmailResponse)(nil),        // 47: chat.GetUsersByUserEmailResponse
	(*GetUsersInGroupRequest)(nil),             // 48: chat.GetUsersInGroupRequest
	(*GetUsersInGroupResponse)(nil),            // 49: chat.GetUsersInGroupResponse
	(*UserStatusRequest)(nil),                  // 50: chat.UserStatusRequest
	(*UserStatus)(nil),                         // 51: chat.UserStatus
	(*UserStatusList)(nil),                     // 52: chat.UserStatusList
	(*UserStatusResponse)(nil),                 // 53: chat.UserStatusResponse
	(*UserStatusSubscriptionRequest)(nil),      // 54: chat.UserStatusSubscriptionRequest
	(*LastMessageStreamRequest)(nil),           // 55: chat.LastMessageStreamRequest
	(*CreateGroupRequest)(nil),                 // 56: chat.CreateGroupRequest
	(*GroupInfo)(nil),                          // 57: chat.GroupInfo
	(*GroupMember)(nil),                        // 58: chat.GroupMember
	(*CreateGroupResponse)(nil),                // 59: chat.CreateGroupResponse
	(*JoinGroupRequest)(nil),                   // 60: chat.JoinGroupRequest
	(*JoinGroupResponse)(nil),                  // 61: chat.JoinGroupResponse
	(*LeaveGroupRequest)(nil),                  // 62: chat.LeaveGroupRequest
	(*LeaveGroupResponse)(nil),                 // 63: chat.LeaveGroupResponse
	(*UpdateGroupRequest)(nil),                 // 64: chat.UpdateGroupRequest
	(*UpdateGroupResponse)(nil),                // 65: chat.UpdateGroupResponse
	(*GetAllGroupsByUserEmailRequest)(nil),     // 66: chat.GetAllGroupsByUserEmailRequest
	(*GroupInfoList)(nil),                      // 67: chat.GroupInfoList
	(*GetAllGroupsByUserEmailResponse)(nil),    // 68: chat.GetAllGroupsByUserEmailResponse
	(*TypingSubscriptionRequest)(nil),          // 69: chat.TypingSubscriptionRequest
	(*TypingIndicator)(nil),                    // 70: chat.TypingIndicator
	(*SubscribeToPresenceRequest)(nil),         // 71: chat.SubscribeToPresenceRequest
	(*PresenceUpdate)(nil),                     // 72: chat.PresenceUpdate
	(*SubscribeToMessageUpdatesRequest)(nil),   // 73: chat.SubscribeToMessageUpdatesRequest
	(*MessageUpdate)(nil),                      // 74: chat.MessageUpdate
	(*SubscribeToThreadRequest)(nil),           // 75: chat.SubscribeToThreadRequest
	(*ThreadUpdate)(nil),                       // 76: chat.ThreadUpdate
	(*SubscribeToNotificationsRequest)(nil),    // 77: chat.SubscribeToNotificationsRequest
	(*NotificationUpdate)(nil),                 // 78: chat.NotificationUpdate
	(*AddNotificationRequest)(nil),             // 79: chat.AddNotificationRequest
	(*AddNotificationResponse)(nil),            // 80: chat.AddNotificationResponse
	(*UpdateNotificationRequest)(nil),          // 81: chat.UpdateNotificationRequest
	(*UpdateNotificationResponse)(nil),         // 82: chat.UpdateNotificationResponse
	(*GetNotificationRequest)(nil),             // 83: chat.GetNotificationRequest
	(*GetNotificationResponse)(nil),            // 84: chat.GetNotificationResponse
	(*MarkNotificationAsReadRequest)(nil),      // 85: chat.MarkNotificationAsReadRequest
	(*MarkNotificationAsReadResponse)(nil),     // 86: chat.MarkNotificationAsReadResponse
	(*GetUnreadNotificationCountRequest)(nil),  // 87: chat.GetUnreadNotificationCountRequest
	(*GetUnreadNotificationCountResponse)(nil), // 88: chat.GetUnreadNotificationCountResponse
	(*AddScheduleMessageRequest)(nil),          // 89: chat.AddScheduleMessageRequest
	(*AddScheduleMessageResponse)(nil),         // 90: chat.AddScheduleMessageResponse
	(*UpdateScheduleMessageRequest)(nil),       // 91: chat.UpdateScheduleMessageRequest
	(*UpdateScheduleMessageResponse)(nil),      // 92: chat.UpdateScheduleMessageResponse
	(*CancelScheduledMessageRequest)(nil),      // 93: chat.CancelScheduledMessageRequest
	(*CancelScheduledMessageResponse)(nil),     // 94: chat.CancelScheduledMessageResponse
	(*GetScheduledMessagesRequest)(nil),        // 95: chat.GetScheduledMessagesRequest
	(*ScheduledMessage)(nil),                   // 96: chat.ScheduledMessage
	(*ScheduledMessageList)(nil),               // 97: chat.ScheduledMessageList
	(*GetScheduledMessagesResponse)(nil),       // 98: chat.GetScheduledMessagesResponse
	(*InitiateCallRequest)(nil),                // 99: chat.InitiateCallRequest
	(*CallInfo)(nil),                           // 100: chat.CallInfo
	(*InitiateCallResponse)(nil),               // 101: chat.InitiateCallResponse
	(*AcceptCallRequest)(nil),                  // 102: chat.AcceptCallRequest
	(*AcceptCallResponse)(nil),                 // 103: chat.AcceptCallResponse
	(*RejectCallRequest)(nil),                  // 104: chat.RejectCallRequest
	(*RejectCallResponse)(nil),                 // 105: chat.RejectCallResponse
	(*EndCallRequest)(nil),                     // 106: chat.EndCallRequest
	(*EndCallResponse)(nil),                    // 107: chat.EndCallResponse
	(*GetCallHistoryRequest)(nil),              // 108: chat.GetCallHistoryRequest
	(*CallInfoList)(nil),                       // 109: chat.CallInfoList
	(*GetCallHistoryResponse)(nil),             // 110: chat.GetCallHistoryResponse
	(*FileMetadata)(nil),                       // 111: chat.FileMetadata
	(*FileUploadRequest)(nil),                  // 112: chat.FileUploadRequest
	(*FileUploadResponse)(nil),                 // 113: chat.FileUploadResponse
	(*FileDownloadRequest)(nil),                // 114: chat.FileDownloadRequest
	(*FileDownloadResponse)(nil),               // 115: chat.FileDownloadResponse
	(*LocationData)(nil),                       // 116: chat.LocationData
	(*PollOption)(nil),                         // 117: chat.PollOption
	(*PollData)(nil),                           // 118: chat.PollData
	(*MessageReaction)(nil),                    // 119: chat.MessageReaction
	(*SubscribeToScreenShareRequest)(nil),      // 120: chat.SubscribeToScreenShareRequest
	(*ScreenShareUpdate)(nil),                  // 121: chat.ScreenShareUpdate
	(*SubscribeToChatEventsRequest)(nil),       // 122: chat.SubscribeToChatEventsRequest
	(*ChatEvent)(nil),                          // 123: chat.ChatEvent
	(*timestamppb.Timestamp)(nil),              // 124: google.protobuf.Timestamp
}
var file_proto_chat_proto_depIdxs = []int32{
	124, // 0: chat.StateMessage.timestamp:type_name -> google.protobuf.Timestamp
	124, // 1: chat.ErrorMessage.timestamp:type_name -> google.protobuf.Timestamp
	14,  // 2: chat.ChatStreamEnvelope.message:type_name -> chat.ChatMessage
	11,  // 3: chat.ChatStreamEnvelope.state:type_name -> chat.StateMessage
	12,  // 4: chat.ChatStreamEnvelope.error:type_name -> chat.ErrorMessage
	0,   // 5: chat.ChatMessage.type:type_name -> chat.MessageType
	124, // 6: chat.ChatMessage.timestamp:type_name -> google.protobuf.Timestamp
	9,   // 7: chat.ChatMessage.status:type_name -> chat.MessageStatus
	124, // 8: chat.ChatMessage.deliveredAt:type_name -> google.protobuf.Timestamp
	124, // 9: chat.ChatMessage.readAt:type_name -> google.protobuf.Timestamp
	119, // 10: chat.ChatMessage.reactions:type_name -> chat.MessageReaction
	124, // 11: chat.ChatMessage.pinnedAt:type_name -> google.protobuf.Timestamp
	111, // 12: chat.ChatMessage.fileMetadata:type_name -> chat.FileMetadata
	116, // 13: chat.ChatMessage.locationData:type_name -> chat.LocationData
	118, // 14: chat.ChatMessage.pollData:type_name -> chat.PollData
	124, // 15: chat.ChatMessage.editedAt:type_name -> google.protobuf.Timestamp
	124, // 16: chat.ChatMessage.scheduledAt:type_name -> google.protobuf.Timestamp
	0,   // 17: chat.SendMessageRequest.type:type_name -> chat.MessageType
	14,  // 18: chat.SendMessageResponse.savedMessage:type_name -> chat.ChatMessage
	12,  // 19: chat.SendMessageResponse.error:type_name -> chat.ErrorMessage
	14,  // 20: chat.ChatMessageList.messages:type_name -> chat.ChatMessage
	18,  // 21: chat.GetChatHistoryResponse.messages:type_name -> chat.ChatMessageList
	12,  // 22: chat.GetChatHistoryResponse.error:type_name -> chat.ErrorMessage
	11,  // 23: chat.ReadReceiptResponse.status:type_name -> chat.StateMessage
	12,  // 24: chat.ReadReceiptResponse.error:type_name -> chat.ErrorMessage
	14,  // 25: chat.EditMessageResponse.updatedMessage:type_name -> chat.ChatMessage
	12,  // 26: chat.EditMessageResponse.error:type_name -> chat.ErrorMessage
	11,  // 27: chat.DeleteMessageResponse.status:type_name -> chat.StateMessage
	12,  // 28: chat.DeleteMessageResponse.error:type_name -> chat.ErrorMessage
	0,   // 29: chat.SearchMessagesRequest.messageType:type_name -> chat.MessageType
	18,  // 30: chat.SearchMessagesResponse.messages:type_name -> chat.ChatMessageList
	12,  // 31: chat.SearchMessagesResponse.error:type_name -> chat.ErrorMessage
	18,  // 32: chat.ForwardMessageResponse.forwardedMessages:type_name -> chat.ChatMessageList
	12,  // 33: chat.ForwardMessageResponse.error:type_name -> chat.ErrorMessage
	11,  // 34: chat.PinMessageResponse.status:type_name -> chat.StateMessage
	12,  // 35: chat.PinMessageResponse.error:type_name -> chat.ErrorMessage
	11,  // 36: chat.UnpinMessageResponse.status:type_name -> chat.StateMessage
	12,  // 37: chat.UnpinMessageResponse.error:type_name -> chat.ErrorMessage
	18,  // 38: chat.GetPinnedMessagesResponse.pinnedMessages:type_name -> chat.ChatMessageList
	12,  // 39: chat.GetPinnedMessagesResponse.error:type_name -> chat.ErrorMessage
	11,  // 40: chat.AddLikeMessageResponse.status:type_name -> chat.StateMessage
	12,  // 41: chat.AddLikeMessageResponse.error:type_name -> chat.ErrorMessage
	3,   // 42: chat.UpdateLikedMessageRequest.reactionType:type_name -> chat.ReactionType
	11,  // 43: chat.UpdateLikedMessageResponse.status:type_name -> chat.StateMessage
	12,  // 44: chat.UpdateLikedMessageResponse.error:type_name -> chat.ErrorMessage
	18,  // 45: chat.GetLikedMessagesResponse.likedMessages:type_name -> chat.ChatMessageList
	12,  // 46: chat.GetLikedMessagesResponse.error:type_name -> chat.ErrorMessage
	18,  // 47: chat.GetLastMessagesResponse.lastMessages:type_name -> chat.ChatMessageList
	12,  // 48: chat.GetLastMessagesResponse.error:type_name -> chat.ErrorMessage
	45,  // 49: chat.UserInfoList.users:type_name -> chat.UserInfo
	46,  // 50: chat.GetUsersByUserEmailResponse.users:type_name -> chat.UserInfoList
	12,  // 51: chat.GetUsersByUserEmailResponse.error:type_name -> chat.ErrorMessage
	46,  // 52: chat.GetUsersInGroupResponse.users:type_name -> chat.UserInfoList
	12,  // 53: chat.GetUsersInGroupResponse.error:type_name -> chat.ErrorMessage
	124, // 54: chat.UserStatus.lastSeen:type_name -> google.protobuf.Timestamp
	51,  // 55: chat.UserStatusList.statuses:type_name -> chat.UserStatus
	52,  // 56: chat.UserStatusResponse.statuses:type_name -> chat.UserStatusList
	12,  // 57: chat.UserStatusResponse.error:type_name -> chat.ErrorMessage
	58,  // 58: chat.GroupInfo.members:type_name -> chat.GroupMember
	124, // 59: chat.GroupInfo.createdAt:type_name -> google.protobuf.Timestamp
	124, // 60: chat.GroupInfo.updatedAt:type_name -> google.protobuf.Timestamp
	10,  // 61: chat.GroupMember.role:type_name -> chat.GroupRole
	124, // 62: chat.GroupMember.joinedAt:type_name -> google.protobuf.Timestamp
	57,  // 63: chat.CreateGroupResponse.group:type_name -> chat.GroupInfo
	12,  // 64: chat.CreateGroupResponse.error:type_name -> chat.ErrorMessage
	11,  // 65: chat.JoinGroupResponse.status:type_name -> chat.StateMessage
	12,  // 66: chat.JoinGroupResponse.error:type_name -> chat.ErrorMessage
	11,  // 67: chat.LeaveGroupResponse.status:type_name -> chat.StateMessage
	12,  // 68: chat.LeaveGroupResponse.error:type_name -> chat.ErrorMessage
	57,  // 69: chat.UpdateGroupResponse.group:type_name -> chat.GroupInfo
	12,  // 70: chat.UpdateGroupResponse.error:type_name -> chat.ErrorMessage
	57,  // 71: chat.GroupInfoList.groups:type_name -> chat.GroupInfo
	67,  // 72: chat.GetAllGroupsByUserEmailResponse.groups:type_name -> chat.GroupInfoList
	12,  // 73: chat.GetAllGroupsByUserEmailResponse.error:type_name -> chat.ErrorMessage
	124, // 74: chat.TypingIndicator.timestamp:type_name -> google.protobuf.Timestamp
	4,   // 75: chat.PresenceUpdate.status:type_name -> chat.PresenceStatus
	124, // 76: chat.PresenceUpdate.lastSeen:type_name -> google.protobuf.Timestamp
	5,   // 77: chat.MessageUpdate.updateType:type_name -> chat.MessageUpdateType
	14,  // 78: chat.MessageUpdate.updatedMessage:type_name -> chat.ChatMessage
	124, // 79: chat.MessageUpdate.timestamp:type_name -> google.protobuf.Timestamp
	14,  // 80: chat.ThreadUpdate.message:type_name -> chat.ChatMessage
	6,   // 81: chat.ThreadUpdate.type:type_name -> chat.ThreadType
	124, // 82: chat.ThreadUpdate.timestamp:type_name -> google.protobuf.Timestamp
	7,   // 83: chat.NotificationUpdate.type:type_name -> chat.NotificationType
	124, // 84: chat.NotificationUpdate.timestamp:type_name -> google.protobuf.Timestamp
	78,  // 85: chat.AddNotificationRequest.notification:type_name -> chat.NotificationUpdate
	78,  // 86: chat.AddNotificationResponse.notification:type_name -> chat.NotificationUpdate
	12,  // 87: chat.AddNotificationResponse.error:type_name -> chat.ErrorMessage
	78,  // 88: chat.UpdateNotificationRequest.notification:type_name -> chat.NotificationUpdate
	78,  // 89: chat.UpdateNotificationResponse.notification:type_name -> chat.NotificationUpdate
	12,  // 90: chat.UpdateNotificationResponse.error:type_name -> chat.ErrorMessage
	78,  // 91: chat.GetNotificationResponse.notification:type_name -> chat.NotificationUpdate
	12,  // 92: chat.GetNotificationResponse.error:type_name -> chat.ErrorMessage
	11,  // 93: chat.MarkNotificationAsReadResponse.status:type_name -> chat.StateMessage
	12,  // 94: chat.MarkNotificationAsReadResponse.error:type_name -> chat.ErrorMessage
	12,  // 95: chat.GetUnreadNotificationCountResponse.error:type_name -> chat.ErrorMessage
	124, // 96: chat.AddScheduleMessageRequest.scheduledAt:type_name -> google.protobuf.Timestamp
	0,   // 97: chat.AddScheduleMessageRequest.type:type_name -> chat.MessageType
	12,  // 98: chat.AddScheduleMessageResponse.error:type_name -> chat.ErrorMessage
	124, // 99: chat.UpdateScheduleMessageRequest.scheduledAt:type_name -> google.protobuf.Timestamp
	11,  // 100: chat.UpdateScheduleMessageResponse.status:type_name -> chat.StateMessage
	12,  // 101: chat.UpdateScheduleMessageResponse.error:type_name -> chat.ErrorMessage
	11,  // 102: chat.CancelScheduledMessageResponse.status:type_name -> chat.StateMessage
	12,  // 103: chat.CancelScheduledMessageResponse.error:type_name -> chat.ErrorMessage
	124, // 104: chat.ScheduledMessage.scheduledAt:type_name -> google.protobuf.Timestamp
	0,   // 105: chat.ScheduledMessage.type:type_name -> chat.MessageType
	124, // 106: chat.ScheduledMessage.createdAt:type_name -> google.protobuf.Timestamp
	96,  // 107: chat.ScheduledMessageList.messages:type_name -> chat.ScheduledMessage
	97,  // 108: chat.GetScheduledMessagesResponse.messages:type_name -> chat.ScheduledMessageList
	12,  // 109: chat.GetScheduledMessagesResponse.error:type_name -> chat.ErrorMessage
	1,   // 110: chat.InitiateCallRequest.callType:type_name -> chat.CallType
	1,   // 111: chat.CallInfo.callType:type_name -> chat.CallType
	2,   // 112: chat.CallInfo.status:type_name -> chat.CallStatus
	124, // 113: chat.CallInfo.startTime:type_name -> google.protobuf.Timestamp
	124, // 114: chat.CallInfo.endTime:type_name -> google.protobuf.Timestamp
	100, // 115: chat.InitiateCallResponse.call:type_name -> chat.CallInfo
	12,  // 116: chat.InitiateCallResponse.error:type_name -> chat.ErrorMessage
	100, // 117: chat.AcceptCallResponse.call:type_name -> chat.CallInfo
	12,  // 118: chat.AcceptCallResponse.error:type_name -> chat.ErrorMessage
	11,  // 119: chat.RejectCallResponse.status:type_name -> chat.StateMessage
	12,  // 120: chat.RejectCallResponse.error:type_name -> chat.ErrorMessage
	100, // 121: chat.EndCallResponse.call:type_name -> chat.CallInfo
	12,  // 122: chat.EndCallResponse.error:type_name -> chat.ErrorMessage
	100, // 123: chat.CallInfoList.calls:type_name -> chat.CallInfo
	109, // 124: chat.GetCallHistoryResponse.calls:type_name -> chat.CallInfoList
	12,  // 125: chat.GetCallHistoryResponse.error:type_name -> chat.ErrorMessage
	111, // 126: chat.FileUploadRequest.metadata:type_name -> chat.FileMetadata
	111, // 127: chat.FileUploadResponse.uploadedFile:type_name -> chat.FileMetadata
	12,  // 128: chat.FileUploadResponse.error:type_name -> chat.ErrorMessage
	111, // 129: chat.FileDownloadResponse.metadata:type_name -> chat.FileMetadata
	117, // 130: chat.PollData.options:type_name -> chat.PollOption
	124, // 131: chat.PollData.expiresAt:type_name -> google.protobuf.Timestamp
	3,   // 132: chat.MessageReaction.reactionType:type_name -> chat.ReactionType
	124, // 133: chat.MessageReaction.timestamp:type_name -> google.protobuf.Timestamp
	124, // 134: chat.ScreenShareUpdate.timestamp:type_name -> google.protobuf.Timestamp
	8,   // 135: chat.ChatEvent.eventType:type_name -> chat.ChatEventType
	124, // 136: chat.ChatEvent.timestamp:type_name -> google.protobuf.Timestamp
	13,  // 137: chat.ChatService.ChatStream:input_type -> chat.ChatStreamEnvelope
	55,  // 138: chat.ChatService.SubscribeToLastMessages:input_type -> chat.LastMessageStreamRequest
	54,  // 139: chat.ChatService.SubscribeToUserStatus:input_type -> chat.UserStatusSubscriptionRequest
	69,  // 140: chat.ChatService.SubscribeToTypingIndicators:input_type -> chat.TypingSubscriptionRequest
	112, // 141: chat.ChatService.UploadFile:input_type -> chat.FileUploadRequest
	114, // 142: chat.ChatService.DownloadFile:input_type -> chat.FileDownloadRequest
	71,  // 143: chat.ChatService.SubscribeToPresence:input_type -> chat.SubscribeToPresenceRequest
	73,  // 144: chat.ChatService.SubscribeToMessageUpdates:input_type -> chat.SubscribeToMessageUpdatesRequest
	75,  // 145: chat.ChatService.SubscribeToThread:input_type -> chat.SubscribeToThreadRequest
	77,  // 146: chat.ChatService.SubscribeToNotifications:input_type -> chat.SubscribeToNotificationsRequest
	120, // 147: chat.ChatService.SubscribeToScreenShare:input_type -> chat.SubscribeToScreenShareRequest
	122, // 148: chat.ChatService.SubscribeToChatEvents:input_type -> chat.SubscribeToChatEventsRequest
	15,  // 149: chat.ChatService.SendMessage:input_type -> chat.SendMessageRequest
	22,  // 150: chat.ChatService.EditMessage:input_type -> chat.EditMessageRequest
	24,  // 151: chat.ChatService.DeleteMessage:input_type -> chat.DeleteMessageRequest
	17,  // 152: chat.ChatService.GetChatHistory:input_type -> chat.GetChatHistoryRequest
	20,  // 153: chat.ChatService.MarkAsRead:input_type -> chat.ReadReceiptRequest
	26,  // 154: chat.ChatService.SearchMessages:input_type -> chat.SearchMessagesRequest
	28,  // 155: chat.ChatService.ForwardMessage:input_type -> chat.ForwardMessageRequest
	30,  // 156: chat.ChatService.PinMessage:input_type -> chat.PinMessageRequest
	32,  // 157: chat.ChatService.UnpinMessage:input_type -> chat.UnpinMessageRequest
	34,  // 158: chat.ChatService.GetPinnedMessages:input_type -> chat.GetPinnedMessagesRequest
	36,  // 159: chat.ChatService.AddLikeMessage:input_type -> chat.AddLikeMessageRequest
	38,  // 160: chat.ChatService.UpdateLikedMessage:input_type -> chat.UpdateLikedMessageRequest
	40,  // 161: chat.ChatService.GetLikedMessages:input_type -> chat.GetLikedMessagesRequest
	42,  // 162: chat.ChatService.GetLastMessages:input_type -> chat.GetLastMessagesRequest
	44,  // 163: chat.ChatService.GetUsersByUserEmail:input_type -> chat.GetUsersByUserEmailRequest
	48,  // 164: chat.ChatService.GetUsersInGroup:input_type -> chat.GetUsersInGroupRequest
	50,  // 165: chat.ChatService.GetUserStatus:input_type -> chat.UserStatusRequest
	56,  // 166: chat.ChatService.CreateGroup:input_type -> chat.CreateGroupRequest
	60,  // 167: chat.ChatService.JoinGroup:input_type -> chat.JoinGroupRequest
	62,  // 168: chat.ChatService.LeaveGroup:input_type -> chat.LeaveGroupRequest
	64,  // 169: chat.ChatService.UpdateGroup:input_type -> chat.UpdateGroupRequest
	66,  // 170: chat.ChatService.GetAllGroupsByUserEmail:input_type -> chat.GetAllGroupsByUserEmailRequest
	99,  // 171: chat.ChatService.InitiateCall:input_type -> chat.InitiateCallRequest
	102, // 172: chat.ChatService.AcceptCall:input_type -> chat.AcceptCallRequest
	104, // 173: chat.ChatService.RejectCall:input_type -> chat.RejectCallRequest
	106, // 174: chat.ChatService.EndCall:input_type -> chat.EndCallRequest
	108, // 175: chat.ChatService.GetCallHistory:input_type -> chat.GetCallHistoryRequest
	79,  // 176: chat.ChatService.AddNotification:input_type -> chat.AddNotificationRequest
	81,  // 177: chat.ChatService.UpdateNotification:input_type -> chat.UpdateNotificationRequest
	83,  // 178: chat.ChatService.GetNotification:input_type -> chat.GetNotificationRequest
	85,  // 179: chat.ChatService.MarkNotificationAsRead:input_type -> chat.MarkNotificationAsReadRequest
	87,  // 180: chat.ChatService.GetUnreadNotificationCount:input_type -> chat.GetUnreadNotificationCountRequest
	89,  // 181: chat.ChatService.AddScheduleMessage:input_type -> chat.AddScheduleMessageRequest
	91,  // 182: chat.ChatService.UpdateScheduleMessage:input_type -> chat.UpdateScheduleMessageRequest
	93,  // 183: chat.ChatService.CancelScheduledMessage:input_type -> chat.CancelScheduledMessageRequest
	95,  // 184: chat.ChatService.GetScheduledMessages:input_type -> chat.GetScheduledMessagesRequest
	13,  // 185: chat.ChatService.ChatStream:output_type -> chat.ChatStreamEnvelope
	14,  // 186: chat.ChatService.SubscribeToLastMessages:output_type -> chat.ChatMessage
	51,  // 187: chat.ChatService.SubscribeToUserStatus:output_type -> chat.UserStatus
	70,  // 188: chat.ChatService.SubscribeToTypingIndicators:output_type -> chat.TypingIndicator
	113, // 189: chat.ChatService.UploadFile:output_type -> chat.FileUploadResponse
	115, // 190: chat.ChatService.DownloadFile:output_type -> chat.FileDownloadResponse
	72,  // 191: chat.ChatService.SubscribeToPresence:output_type -> chat.PresenceUpdate
	74,  // 192: chat.ChatService.SubscribeToMessageUpdates:output_type -> chat.MessageUpdate
	76,  // 193: chat.ChatService.SubscribeToThread:output_type -> chat.ThreadUpdate
	78,  // 194: chat.ChatService.SubscribeToNotifications:output_type -> chat.NotificationUpdate
	121, // 195: chat.ChatService.SubscribeToScreenShare:output_type -> chat.ScreenShareUpdate
	123, // 196: chat.ChatService.SubscribeToChatEvents:output_type -> chat.ChatEvent
	16,  // 197: chat.ChatService.SendMessage:output_type -> chat.SendMessageResponse
	23,  // 198: chat.ChatService.EditMessage:output_type -> chat.EditMessageResponse
	25,  // 199: chat.ChatService.DeleteMessage:output_type -> chat.DeleteMessageResponse
	19,  // 200: chat.ChatService.GetChatHistory:output_type -> chat.GetChatHistoryResponse
	21,  // 201: chat.ChatService.MarkAsRead:output_type -> chat.ReadReceiptResponse
	27,  // 202: chat.ChatService.SearchMessages:output_type -> chat.SearchMessagesResponse
	29,  // 203: chat.ChatService.ForwardMessage:output_type -> chat.ForwardMessageResponse
	31,  // 204: chat.ChatService.PinMessage:output_type -> chat.PinMessageResponse
	33,  // 205: chat.ChatService.UnpinMessage:output_type -> chat.UnpinMessageResponse
	35,  // 206: chat.ChatService.GetPinnedMessages:output_type -> chat.GetPinnedMessagesResponse
	37,  // 207: chat.ChatService.AddLikeMessage:output_type -> chat.AddLikeMessageResponse
	39,  // 208: chat.ChatService.UpdateLikedMessage:output_type -> chat.UpdateLikedMessageResponse
	41,  // 209: chat.ChatService.GetLikedMessages:output_type -> chat.GetLikedMessagesResponse
	43,  // 210: chat.ChatService.GetLastMessages:output_type -> chat.GetLastMessagesResponse
	47,  // 211: chat.ChatService.GetUsersByUserEmail:output_type -> chat.GetUsersByUserEmailResponse
	49,  // 212: chat.ChatService.GetUsersInGroup:output_type -> chat.GetUsersInGroupResponse
	53,  // 213: chat.ChatService.GetUserStatus:output_type -> chat.UserStatusResponse
	59,  // 214: chat.ChatService.CreateGroup:output_type -> chat.CreateGroupResponse
	61,  // 215: chat.ChatService.JoinGroup:output_type -> chat.JoinGroupResponse
	63,  // 216: chat.ChatService.LeaveGroup:output_type -> chat.LeaveGroupResponse
	65,  // 217: chat.ChatService.UpdateGroup:output_type -> chat.UpdateGroupResponse
	68,  // 218: chat.ChatService.GetAllGroupsByUserEmail:output_type -> chat.GetAllGroupsByUserEmailResponse
	101, // 219: chat.ChatService.InitiateCall:output_type -> chat.InitiateCallResponse
	103, // 220: chat.ChatService.AcceptCall:output_type -> chat.AcceptCallResponse
	105, // 221: chat.ChatService.RejectCall:output_type -> chat.RejectCallResponse
	107, // 222: chat.ChatService.EndCall:output_type -> chat.EndCallResponse
	110, // 223: chat.ChatService.GetCallHistory:output_type -> chat.GetCallHistoryResponse
	80,  // 224: chat.ChatService.AddNotification:output_type -> chat.AddNotificationResponse
	82,  // 225: chat.ChatService.UpdateNotification:output_type -> chat.UpdateNotificationResponse
	84,  // 226: chat.ChatService.GetNotification:output_type -> chat.GetNotificationResponse
	86,  // 227: chat.ChatService.MarkNotificationAsRead:output_type -> chat.MarkNotificationAsReadResponse
	88,  // 228: chat.ChatService.GetUnreadNotificationCount:output_type -> chat.GetUnreadNotificationCountResponse
	90,  // 229: chat.ChatService.AddScheduleMessage:output_type -> chat.AddScheduleMessageResponse
	92,  // 230: chat.ChatService.UpdateScheduleMessage:output_type -> chat.UpdateScheduleMessageResponse
	94,  // 231: chat.ChatService.CancelScheduledMessage:output_type -> chat.CancelScheduledMessageResponse
	98,  // 232: chat.ChatService.GetScheduledMessages:output_type -> chat.GetScheduledMessagesResponse
	185, // [185:233] is the sub-list for method output_type
	137, // [137:185] is the sub-list for method input_type
	137, // [137:137] is the sub-list for extension type_name
	137, // [137:137] is the sub-list for extension extendee
	0,   // [0:137] is the sub-list for field type_name
}

func init() { file_proto_chat_proto_init() }
func file_proto_chat_proto_init() {
	if File_proto_chat_proto != nil {
		return
	}
	file_proto_chat_proto_msgTypes[2].OneofWrappers = []any{
		(*ChatStreamEnvelope_Message)(nil),
		(*ChatStreamEnvelope_State)(nil),
		(*ChatStreamEnvelope_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[5].OneofWrappers = []any{
		(*SendMessageResponse_SavedMessage)(nil),
		(*SendMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[8].OneofWrappers = []any{
		(*GetChatHistoryResponse_Messages)(nil),
		(*GetChatHistoryResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[10].OneofWrappers = []any{
		(*ReadReceiptResponse_Status)(nil),
		(*ReadReceiptResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[12].OneofWrappers = []any{
		(*EditMessageResponse_UpdatedMessage)(nil),
		(*EditMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[14].OneofWrappers = []any{
		(*DeleteMessageResponse_Status)(nil),
		(*DeleteMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[16].OneofWrappers = []any{
		(*SearchMessagesResponse_Messages)(nil),
		(*SearchMessagesResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[18].OneofWrappers = []any{
		(*ForwardMessageResponse_ForwardedMessages)(nil),
		(*ForwardMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[20].OneofWrappers = []any{
		(*PinMessageResponse_Status)(nil),
		(*PinMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[22].OneofWrappers = []any{
		(*UnpinMessageResponse_Status)(nil),
		(*UnpinMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[24].OneofWrappers = []any{
		(*GetPinnedMessagesResponse_PinnedMessages)(nil),
		(*GetPinnedMessagesResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[26].OneofWrappers = []any{
		(*AddLikeMessageResponse_Status)(nil),
		(*AddLikeMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[28].OneofWrappers = []any{
		(*UpdateLikedMessageResponse_Status)(nil),
		(*UpdateLikedMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[30].OneofWrappers = []any{
		(*GetLikedMessagesResponse_LikedMessages)(nil),
		(*GetLikedMessagesResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[32].OneofWrappers = []any{
		(*GetLastMessagesResponse_LastMessages)(nil),
		(*GetLastMessagesResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[36].OneofWrappers = []any{
		(*GetUsersByUserEmailResponse_Users)(nil),
		(*GetUsersByUserEmailResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[38].OneofWrappers = []any{
		(*GetUsersInGroupResponse_Users)(nil),
		(*GetUsersInGroupResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[42].OneofWrappers = []any{
		(*UserStatusResponse_Statuses)(nil),
		(*UserStatusResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[48].OneofWrappers = []any{
		(*CreateGroupResponse_Group)(nil),
		(*CreateGroupResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[50].OneofWrappers = []any{
		(*JoinGroupResponse_Status)(nil),
		(*JoinGroupResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[52].OneofWrappers = []any{
		(*LeaveGroupResponse_Status)(nil),
		(*LeaveGroupResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[54].OneofWrappers = []any{
		(*UpdateGroupResponse_Group)(nil),
		(*UpdateGroupResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[57].OneofWrappers = []any{
		(*GetAllGroupsByUserEmailResponse_Groups)(nil),
		(*GetAllGroupsByUserEmailResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[69].OneofWrappers = []any{
		(*AddNotificationResponse_Notification)(nil),
		(*AddNotificationResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[71].OneofWrappers = []any{
		(*UpdateNotificationResponse_Notification)(nil),
		(*UpdateNotificationResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[73].OneofWrappers = []any{
		(*GetNotificationResponse_Notification)(nil),
		(*GetNotificationResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[75].OneofWrappers = []any{
		(*MarkNotificationAsReadResponse_Status)(nil),
		(*MarkNotificationAsReadResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[77].OneofWrappers = []any{
		(*GetUnreadNotificationCountResponse_Count)(nil),
		(*GetUnreadNotificationCountResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[79].OneofWrappers = []any{
		(*AddScheduleMessageResponse_ScheduledMessageId)(nil),
		(*AddScheduleMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[81].OneofWrappers = []any{
		(*UpdateScheduleMessageResponse_Status)(nil),
		(*UpdateScheduleMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[83].OneofWrappers = []any{
		(*CancelScheduledMessageResponse_Status)(nil),
		(*CancelScheduledMessageResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[87].OneofWrappers = []any{
		(*GetScheduledMessagesResponse_Messages)(nil),
		(*GetScheduledMessagesResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[90].OneofWrappers = []any{
		(*InitiateCallResponse_Call)(nil),
		(*InitiateCallResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[92].OneofWrappers = []any{
		(*AcceptCallResponse_Call)(nil),
		(*AcceptCallResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[94].OneofWrappers = []any{
		(*RejectCallResponse_Status)(nil),
		(*RejectCallResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[96].OneofWrappers = []any{
		(*EndCallResponse_Call)(nil),
		(*EndCallResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[99].OneofWrappers = []any{
		(*GetCallHistoryResponse_Calls)(nil),
		(*GetCallHistoryResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[101].OneofWrappers = []any{
		(*FileUploadRequest_Metadata)(nil),
		(*FileUploadRequest_Chunk)(nil),
	}
	file_proto_chat_proto_msgTypes[102].OneofWrappers = []any{
		(*FileUploadResponse_UploadedFile)(nil),
		(*FileUploadResponse_Error)(nil),
	}
	file_proto_chat_proto_msgTypes[104].OneofWrappers = []any{
		(*FileDownloadResponse_Metadata)(nil),
		(*FileDownloadResponse_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_chat_proto_rawDesc), len(file_proto_chat_proto_rawDesc)),
			NumEnums:      11,
			NumMessages:   113,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_proto_goTypes,
		DependencyIndexes: file_proto_chat_proto_depIdxs,
		EnumInfos:         file_proto_chat_proto_enumTypes,
		MessageInfos:      file_proto_chat_proto_msgTypes,
	}.Build()
	File_proto_chat_proto = out.File
	file_proto_chat_proto_goTypes = nil
	file_proto_chat_proto_depIdxs = nil
}
