// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/upload.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileType int32

const (
	FileType_UNKNOWN FileType = 0
	FileType_IMAGE   FileType = 1
	FileType_VIDEO   FileType = 2
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "UNKNOWN",
		1: "IMAGE",
		2: "VIDEO",
	}
	FileType_value = map[string]int32{
		"UNKNOWN": 0,
		"IMAGE":   1,
		"VIDEO":   2,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_upload_proto_enumTypes[0].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_proto_upload_proto_enumTypes[0]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{0}
}

type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileData      []byte                 `protobuf:"bytes,1,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	FileName      string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FileType      FileType               `protobuf:"varint,5,opt,name=file_type,json=fileType,proto3,enum=upload.FileType" json:"file_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_proto_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{0}
}

func (x *UploadFileRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *UploadFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UploadFileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadFileRequest) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_UNKNOWN
}

type UploadFileResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*UploadFileResponse_Success
	//	*UploadFileResponse_Error
	Result        isUploadFileResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_proto_upload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UploadFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadFileResponse) GetResult() isUploadFileResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UploadFileResponse) GetSuccess() *UploadSuccess {
	if x != nil {
		if x, ok := x.Result.(*UploadFileResponse_Success); ok {
			return x.Success
		}
	}
	return nil
}

func (x *UploadFileResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*UploadFileResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isUploadFileResponse_Result interface {
	isUploadFileResponse_Result()
}

type UploadFileResponse_Success struct {
	Success *UploadSuccess `protobuf:"bytes,3,opt,name=success,proto3,oneof"`
}

type UploadFileResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*UploadFileResponse_Success) isUploadFileResponse_Result() {}

func (*UploadFileResponse_Error) isUploadFileResponse_Result() {}

type UploadSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileUrl       string                 `protobuf:"bytes,1,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	FileKey       string                 `protobuf:"bytes,2,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	FileId        string                 `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileSize      int64                  `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	UploadedAt    string                 `protobuf:"bytes,5,opt,name=uploaded_at,json=uploadedAt,proto3" json:"uploaded_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadSuccess) Reset() {
	*x = UploadSuccess{}
	mi := &file_proto_upload_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSuccess) ProtoMessage() {}

func (x *UploadSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSuccess.ProtoReflect.Descriptor instead.
func (*UploadSuccess) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{2}
}

func (x *UploadSuccess) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *UploadSuccess) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *UploadSuccess) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadSuccess) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadSuccess) GetUploadedAt() string {
	if x != nil {
		return x.UploadedAt
	}
	return ""
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileKey       string                 `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_proto_upload_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteFileRequest) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *DeleteFileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteFileResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*DeleteFileResponse_Success
	//	*DeleteFileResponse_Error
	Result        isDeleteFileResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_proto_upload_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFileResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DeleteFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteFileResponse) GetResult() isDeleteFileResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DeleteFileResponse) GetSuccess() *DeleteSuccess {
	if x != nil {
		if x, ok := x.Result.(*DeleteFileResponse_Success); ok {
			return x.Success
		}
	}
	return nil
}

func (x *DeleteFileResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*DeleteFileResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isDeleteFileResponse_Result interface {
	isDeleteFileResponse_Result()
}

type DeleteFileResponse_Success struct {
	Success *DeleteSuccess `protobuf:"bytes,3,opt,name=success,proto3,oneof"`
}

type DeleteFileResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*DeleteFileResponse_Success) isDeleteFileResponse_Result() {}

func (*DeleteFileResponse_Error) isDeleteFileResponse_Result() {}

type DeleteSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileKey       string                 `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	DeletedAt     string                 `protobuf:"bytes,2,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSuccess) Reset() {
	*x = DeleteSuccess{}
	mi := &file_proto_upload_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSuccess) ProtoMessage() {}

func (x *DeleteSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSuccess.ProtoReflect.Descriptor instead.
func (*DeleteSuccess) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSuccess) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *DeleteSuccess) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type GetFileURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileKey       string                 `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	ExpiresIn     int32                  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"` // seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileURLRequest) Reset() {
	*x = GetFileURLRequest{}
	mi := &file_proto_upload_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileURLRequest) ProtoMessage() {}

func (x *GetFileURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileURLRequest.ProtoReflect.Descriptor instead.
func (*GetFileURLRequest) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{6}
}

func (x *GetFileURLRequest) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *GetFileURLRequest) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type GetFileURLResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetFileURLResponse_Success
	//	*GetFileURLResponse_Error
	Result        isGetFileURLResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileURLResponse) Reset() {
	*x = GetFileURLResponse{}
	mi := &file_proto_upload_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileURLResponse) ProtoMessage() {}

func (x *GetFileURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileURLResponse.ProtoReflect.Descriptor instead.
func (*GetFileURLResponse) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{7}
}

func (x *GetFileURLResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetFileURLResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetFileURLResponse) GetResult() isGetFileURLResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetFileURLResponse) GetSuccess() *URLSuccess {
	if x != nil {
		if x, ok := x.Result.(*GetFileURLResponse_Success); ok {
			return x.Success
		}
	}
	return nil
}

func (x *GetFileURLResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*GetFileURLResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetFileURLResponse_Result interface {
	isGetFileURLResponse_Result()
}

type GetFileURLResponse_Success struct {
	Success *URLSuccess `protobuf:"bytes,3,opt,name=success,proto3,oneof"`
}

type GetFileURLResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetFileURLResponse_Success) isGetFileURLResponse_Result() {}

func (*GetFileURLResponse_Error) isGetFileURLResponse_Result() {}

type URLSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignedUrl     string                 `protobuf:"bytes,1,opt,name=signed_url,json=signedUrl,proto3" json:"signed_url,omitempty"`
	ExpiresAt     string                 `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URLSuccess) Reset() {
	*x = URLSuccess{}
	mi := &file_proto_upload_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URLSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLSuccess) ProtoMessage() {}

func (x *URLSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLSuccess.ProtoReflect.Descriptor instead.
func (*URLSuccess) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{8}
}

func (x *URLSuccess) GetSignedUrl() string {
	if x != nil {
		return x.SignedUrl
	}
	return ""
}

func (x *URLSuccess) GetExpiresAt() string {
	if x != nil {
		return x.ExpiresAt
	}
	return ""
}

type ErrorDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       []string               `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorDetails) Reset() {
	*x = ErrorDetails{}
	mi := &file_proto_upload_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDetails) ProtoMessage() {}

func (x *ErrorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDetails.ProtoReflect.Descriptor instead.
func (*ErrorDetails) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{9}
}

func (x *ErrorDetails) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorDetails) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorDetails) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ErrorDetails) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_proto_upload_proto protoreflect.FileDescriptor

const file_proto_upload_proto_rawDesc = "" +
	"\n" +
	"\x12proto/upload.proto\x12\x06upload\"\xb8\x01\n" +
	"\x11UploadFileRequest\x12\x1b\n" +
	"\tfile_data\x18\x01 \x01(\fR\bfileData\x12\x1b\n" +
	"\tfile_name\x18\x02 \x01(\tR\bfileName\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12-\n" +
	"\tfile_type\x18\x05 \x01(\x0e2\x10.upload.FileTypeR\bfileType\"\xba\x01\n" +
	"\x12UploadFileResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\asuccess\x18\x03 \x01(\v2\x15.upload.UploadSuccessH\x00R\asuccess\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.upload.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result\"\x9c\x01\n" +
	"\rUploadSuccess\x12\x19\n" +
	"\bfile_url\x18\x01 \x01(\tR\afileUrl\x12\x19\n" +
	"\bfile_key\x18\x02 \x01(\tR\afileKey\x12\x17\n" +
	"\afile_id\x18\x03 \x01(\tR\x06fileId\x12\x1b\n" +
	"\tfile_size\x18\x04 \x01(\x03R\bfileSize\x12\x1f\n" +
	"\vuploaded_at\x18\x05 \x01(\tR\n" +
	"uploadedAt\"G\n" +
	"\x11DeleteFileRequest\x12\x19\n" +
	"\bfile_key\x18\x01 \x01(\tR\afileKey\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xba\x01\n" +
	"\x12DeleteFileResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\asuccess\x18\x03 \x01(\v2\x15.upload.DeleteSuccessH\x00R\asuccess\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.upload.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result\"I\n" +
	"\rDeleteSuccess\x12\x19\n" +
	"\bfile_key\x18\x01 \x01(\tR\afileKey\x12\x1d\n" +
	"\n" +
	"deleted_at\x18\x02 \x01(\tR\tdeletedAt\"M\n" +
	"\x11GetFileURLRequest\x12\x19\n" +
	"\bfile_key\x18\x01 \x01(\tR\afileKey\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x02 \x01(\x05R\texpiresIn\"\xb7\x01\n" +
	"\x12GetFileURLResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\asuccess\x18\x03 \x01(\v2\x12.upload.URLSuccessH\x00R\asuccess\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.upload.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result\"J\n" +
	"\n" +
	"URLSuccess\x12\x1d\n" +
	"\n" +
	"signed_url\x18\x01 \x01(\tR\tsignedUrl\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\tR\texpiresAt\"t\n" +
	"\fErrorDetails\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x03(\tR\adetails\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp*-\n" +
	"\bFileType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05IMAGE\x10\x01\x12\t\n" +
	"\x05VIDEO\x10\x022\xde\x01\n" +
	"\rUploadService\x12C\n" +
	"\n" +
	"UploadFile\x12\x19.upload.UploadFileRequest\x1a\x1a.upload.UploadFileResponse\x12C\n" +
	"\n" +
	"DeleteFile\x12\x19.upload.DeleteFileRequest\x1a\x1a.upload.DeleteFileResponse\x12C\n" +
	"\n" +
	"GetFileURL\x12\x19.upload.GetFileURLRequest\x1a\x1a.upload.GetFileURLResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_upload_proto_rawDescOnce sync.Once
	file_proto_upload_proto_rawDescData []byte
)

func file_proto_upload_proto_rawDescGZIP() []byte {
	file_proto_upload_proto_rawDescOnce.Do(func() {
		file_proto_upload_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_upload_proto_rawDesc), len(file_proto_upload_proto_rawDesc)))
	})
	return file_proto_upload_proto_rawDescData
}

var file_proto_upload_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_upload_proto_goTypes = []any{
	(FileType)(0),              // 0: upload.FileType
	(*UploadFileRequest)(nil),  // 1: upload.UploadFileRequest
	(*UploadFileResponse)(nil), // 2: upload.UploadFileResponse
	(*UploadSuccess)(nil),      // 3: upload.UploadSuccess
	(*DeleteFileRequest)(nil),  // 4: upload.DeleteFileRequest
	(*DeleteFileResponse)(nil), // 5: upload.DeleteFileResponse
	(*DeleteSuccess)(nil),      // 6: upload.DeleteSuccess
	(*GetFileURLRequest)(nil),  // 7: upload.GetFileURLRequest
	(*GetFileURLResponse)(nil), // 8: upload.GetFileURLResponse
	(*URLSuccess)(nil),         // 9: upload.URLSuccess
	(*ErrorDetails)(nil),       // 10: upload.ErrorDetails
}
var file_proto_upload_proto_depIdxs = []int32{
	0,  // 0: upload.UploadFileRequest.file_type:type_name -> upload.FileType
	3,  // 1: upload.UploadFileResponse.success:type_name -> upload.UploadSuccess
	10, // 2: upload.UploadFileResponse.error:type_name -> upload.ErrorDetails
	6,  // 3: upload.DeleteFileResponse.success:type_name -> upload.DeleteSuccess
	10, // 4: upload.DeleteFileResponse.error:type_name -> upload.ErrorDetails
	9,  // 5: upload.GetFileURLResponse.success:type_name -> upload.URLSuccess
	10, // 6: upload.GetFileURLResponse.error:type_name -> upload.ErrorDetails
	1,  // 7: upload.UploadService.UploadFile:input_type -> upload.UploadFileRequest
	4,  // 8: upload.UploadService.DeleteFile:input_type -> upload.DeleteFileRequest
	7,  // 9: upload.UploadService.GetFileURL:input_type -> upload.GetFileURLRequest
	2,  // 10: upload.UploadService.UploadFile:output_type -> upload.UploadFileResponse
	5,  // 11: upload.UploadService.DeleteFile:output_type -> upload.DeleteFileResponse
	8,  // 12: upload.UploadService.GetFileURL:output_type -> upload.GetFileURLResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_upload_proto_init() }
func file_proto_upload_proto_init() {
	if File_proto_upload_proto != nil {
		return
	}
	file_proto_upload_proto_msgTypes[1].OneofWrappers = []any{
		(*UploadFileResponse_Success)(nil),
		(*UploadFileResponse_Error)(nil),
	}
	file_proto_upload_proto_msgTypes[4].OneofWrappers = []any{
		(*DeleteFileResponse_Success)(nil),
		(*DeleteFileResponse_Error)(nil),
	}
	file_proto_upload_proto_msgTypes[7].OneofWrappers = []any{
		(*GetFileURLResponse_Success)(nil),
		(*GetFileURLResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_upload_proto_rawDesc), len(file_proto_upload_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_upload_proto_goTypes,
		DependencyIndexes: file_proto_upload_proto_depIdxs,
		EnumInfos:         file_proto_upload_proto_enumTypes,
		MessageInfos:      file_proto_upload_proto_msgTypes,
	}.Build()
	File_proto_upload_proto = out.File
	file_proto_upload_proto_goTypes = nil
	file_proto_upload_proto_depIdxs = nil
}
