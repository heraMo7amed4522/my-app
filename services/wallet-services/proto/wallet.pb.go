// wallet.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/wallet.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Wallet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID        string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Balance       string                 `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	mi := &file_proto_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *Wallet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Wallet) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Wallet) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Wallet) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *Wallet) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Wallet) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Wallet) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ErrorDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       []string               `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorDetails) Reset() {
	*x = ErrorDetails{}
	mi := &file_proto_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDetails) ProtoMessage() {}

func (x *ErrorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDetails.ProtoReflect.Descriptor instead.
func (*ErrorDetails) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *ErrorDetails) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorDetails) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorDetails) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ErrorDetails) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type GetWalletByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletByUserIDRequest) Reset() {
	*x = GetWalletByUserIDRequest{}
	mi := &file_proto_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletByUserIDRequest) ProtoMessage() {}

func (x *GetWalletByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletByUserIDRequest.ProtoReflect.Descriptor instead.
func (*GetWalletByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *GetWalletByUserIDRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetWalletByUserIDResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetWalletByUserIDResponse_Wallet
	//	*GetWalletByUserIDResponse_Error
	Result        isGetWalletByUserIDResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletByUserIDResponse) Reset() {
	*x = GetWalletByUserIDResponse{}
	mi := &file_proto_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletByUserIDResponse) ProtoMessage() {}

func (x *GetWalletByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletByUserIDResponse.ProtoReflect.Descriptor instead.
func (*GetWalletByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *GetWalletByUserIDResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetWalletByUserIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWalletByUserIDResponse) GetResult() isGetWalletByUserIDResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetWalletByUserIDResponse) GetWallet() *Wallet {
	if x != nil {
		if x, ok := x.Result.(*GetWalletByUserIDResponse_Wallet); ok {
			return x.Wallet
		}
	}
	return nil
}

func (x *GetWalletByUserIDResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*GetWalletByUserIDResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetWalletByUserIDResponse_Result interface {
	isGetWalletByUserIDResponse_Result()
}

type GetWalletByUserIDResponse_Wallet struct {
	Wallet *Wallet `protobuf:"bytes,3,opt,name=wallet,proto3,oneof"`
}

type GetWalletByUserIDResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetWalletByUserIDResponse_Wallet) isGetWalletByUserIDResponse_Result() {}

func (*GetWalletByUserIDResponse_Error) isGetWalletByUserIDResponse_Result() {}

type CreateWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"` // Optional: default to USD
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	mi := &file_proto_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *CreateWalletRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateWalletRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type CreateWalletResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*CreateWalletResponse_Wallet
	//	*CreateWalletResponse_Error
	Result        isCreateWalletResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletResponse) Reset() {
	*x = CreateWalletResponse{}
	mi := &file_proto_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletResponse) ProtoMessage() {}

func (x *CreateWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateWalletResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *CreateWalletResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CreateWalletResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateWalletResponse) GetResult() isCreateWalletResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateWalletResponse) GetWallet() *Wallet {
	if x != nil {
		if x, ok := x.Result.(*CreateWalletResponse_Wallet); ok {
			return x.Wallet
		}
	}
	return nil
}

func (x *CreateWalletResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*CreateWalletResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isCreateWalletResponse_Result interface {
	isCreateWalletResponse_Result()
}

type CreateWalletResponse_Wallet struct {
	Wallet *Wallet `protobuf:"bytes,3,opt,name=wallet,proto3,oneof"`
}

type CreateWalletResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*CreateWalletResponse_Wallet) isCreateWalletResponse_Result() {}

func (*CreateWalletResponse_Error) isCreateWalletResponse_Result() {}

type FundWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CardID        string                 `protobuf:"bytes,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FundWalletRequest) Reset() {
	*x = FundWalletRequest{}
	mi := &file_proto_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundWalletRequest) ProtoMessage() {}

func (x *FundWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundWalletRequest.ProtoReflect.Descriptor instead.
func (*FundWalletRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *FundWalletRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *FundWalletRequest) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *FundWalletRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *FundWalletRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type FundWalletResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*FundWalletResponse_Wallet
	//	*FundWalletResponse_Error
	Result        isFundWalletResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FundWalletResponse) Reset() {
	*x = FundWalletResponse{}
	mi := &file_proto_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundWalletResponse) ProtoMessage() {}

func (x *FundWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundWalletResponse.ProtoReflect.Descriptor instead.
func (*FundWalletResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *FundWalletResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *FundWalletResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FundWalletResponse) GetResult() isFundWalletResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *FundWalletResponse) GetWallet() *Wallet {
	if x != nil {
		if x, ok := x.Result.(*FundWalletResponse_Wallet); ok {
			return x.Wallet
		}
	}
	return nil
}

func (x *FundWalletResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*FundWalletResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isFundWalletResponse_Result interface {
	isFundWalletResponse_Result()
}

type FundWalletResponse_Wallet struct {
	Wallet *Wallet `protobuf:"bytes,3,opt,name=wallet,proto3,oneof"`
}

type FundWalletResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*FundWalletResponse_Wallet) isFundWalletResponse_Result() {}

func (*FundWalletResponse_Error) isFundWalletResponse_Result() {}

type DeductFromWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeductFromWalletRequest) Reset() {
	*x = DeductFromWalletRequest{}
	mi := &file_proto_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeductFromWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductFromWalletRequest) ProtoMessage() {}

func (x *DeductFromWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductFromWalletRequest.ProtoReflect.Descriptor instead.
func (*DeductFromWalletRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *DeductFromWalletRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeductFromWalletRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DeductFromWalletRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DeductFromWalletRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeductFromWalletResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*DeductFromWalletResponse_Wallet
	//	*DeductFromWalletResponse_Error
	Result        isDeductFromWalletResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeductFromWalletResponse) Reset() {
	*x = DeductFromWalletResponse{}
	mi := &file_proto_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeductFromWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductFromWalletResponse) ProtoMessage() {}

func (x *DeductFromWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductFromWalletResponse.ProtoReflect.Descriptor instead.
func (*DeductFromWalletResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *DeductFromWalletResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DeductFromWalletResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeductFromWalletResponse) GetResult() isDeductFromWalletResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DeductFromWalletResponse) GetWallet() *Wallet {
	if x != nil {
		if x, ok := x.Result.(*DeductFromWalletResponse_Wallet); ok {
			return x.Wallet
		}
	}
	return nil
}

func (x *DeductFromWalletResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*DeductFromWalletResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isDeductFromWalletResponse_Result interface {
	isDeductFromWalletResponse_Result()
}

type DeductFromWalletResponse_Wallet struct {
	Wallet *Wallet `protobuf:"bytes,3,opt,name=wallet,proto3,oneof"`
}

type DeductFromWalletResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*DeductFromWalletResponse_Wallet) isDeductFromWalletResponse_Result() {}

func (*DeductFromWalletResponse_Error) isDeductFromWalletResponse_Result() {}

type GetWalletBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletBalanceRequest) Reset() {
	*x = GetWalletBalanceRequest{}
	mi := &file_proto_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceRequest) ProtoMessage() {}

func (x *GetWalletBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *GetWalletBalanceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetWalletBalanceResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*GetWalletBalanceResponse_Wallet
	//	*GetWalletBalanceResponse_Error
	Result        isGetWalletBalanceResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletBalanceResponse) Reset() {
	*x = GetWalletBalanceResponse{}
	mi := &file_proto_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceResponse) ProtoMessage() {}

func (x *GetWalletBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *GetWalletBalanceResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetWalletBalanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWalletBalanceResponse) GetResult() isGetWalletBalanceResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetWalletBalanceResponse) GetWallet() *Wallet {
	if x != nil {
		if x, ok := x.Result.(*GetWalletBalanceResponse_Wallet); ok {
			return x.Wallet
		}
	}
	return nil
}

func (x *GetWalletBalanceResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*GetWalletBalanceResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetWalletBalanceResponse_Result interface {
	isGetWalletBalanceResponse_Result()
}

type GetWalletBalanceResponse_Wallet struct {
	Wallet *Wallet `protobuf:"bytes,3,opt,name=wallet,proto3,oneof"`
}

type GetWalletBalanceResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*GetWalletBalanceResponse_Wallet) isGetWalletBalanceResponse_Result() {}

func (*GetWalletBalanceResponse_Error) isGetWalletBalanceResponse_Result() {}

type GetWalletTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletTransactionsRequest) Reset() {
	*x = GetWalletTransactionsRequest{}
	mi := &file_proto_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletTransactionsRequest) ProtoMessage() {}

func (x *GetWalletTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetWalletTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *GetWalletTransactionsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetWalletTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Transactions  []*WalletTransaction   `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletTransactionsResponse) Reset() {
	*x = GetWalletTransactionsResponse{}
	mi := &file_proto_wallet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletTransactionsResponse) ProtoMessage() {}

func (x *GetWalletTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetWalletTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *GetWalletTransactionsResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetWalletTransactionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWalletTransactionsResponse) GetTransactions() []*WalletTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type WalletTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WalletID      string                 `protobuf:"bytes,2,opt,name=walletID,proto3" json:"walletID,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // FUND, DEDUCT, REFUND
	Amount        string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletTransaction) Reset() {
	*x = WalletTransaction{}
	mi := &file_proto_wallet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTransaction) ProtoMessage() {}

func (x *WalletTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTransaction.ProtoReflect.Descriptor instead.
func (*WalletTransaction) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *WalletTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WalletTransaction) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *WalletTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WalletTransaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WalletTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *WalletTransaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WalletTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RefundToWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionID string                 `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefundToWalletRequest) Reset() {
	*x = RefundToWalletRequest{}
	mi := &file_proto_wallet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundToWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundToWalletRequest) ProtoMessage() {}

func (x *RefundToWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundToWalletRequest.ProtoReflect.Descriptor instead.
func (*RefundToWalletRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *RefundToWalletRequest) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *RefundToWalletRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type RefundToWalletResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	StatusCode int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*RefundToWalletResponse_Wallet
	//	*RefundToWalletResponse_Error
	Result        isRefundToWalletResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefundToWalletResponse) Reset() {
	*x = RefundToWalletResponse{}
	mi := &file_proto_wallet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundToWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundToWalletResponse) ProtoMessage() {}

func (x *RefundToWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundToWalletResponse.ProtoReflect.Descriptor instead.
func (*RefundToWalletResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *RefundToWalletResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *RefundToWalletResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RefundToWalletResponse) GetResult() isRefundToWalletResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RefundToWalletResponse) GetWallet() *Wallet {
	if x != nil {
		if x, ok := x.Result.(*RefundToWalletResponse_Wallet); ok {
			return x.Wallet
		}
	}
	return nil
}

func (x *RefundToWalletResponse) GetError() *ErrorDetails {
	if x != nil {
		if x, ok := x.Result.(*RefundToWalletResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isRefundToWalletResponse_Result interface {
	isRefundToWalletResponse_Result()
}

type RefundToWalletResponse_Wallet struct {
	Wallet *Wallet `protobuf:"bytes,3,opt,name=wallet,proto3,oneof"`
}

type RefundToWalletResponse_Error struct {
	Error *ErrorDetails `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*RefundToWalletResponse_Wallet) isRefundToWalletResponse_Result() {}

func (*RefundToWalletResponse_Error) isRefundToWalletResponse_Result() {}

var File_proto_wallet_proto protoreflect.FileDescriptor

const file_proto_wallet_proto_rawDesc = "" +
	"\n" +
	"\x12proto/wallet.proto\x12\x06wallet\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf2\x01\n" +
	"\x06Wallet\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x18\n" +
	"\abalance\x18\x04 \x01(\tR\abalance\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x128\n" +
	"\tcreatedAt\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x128\n" +
	"\tupdatedAt\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"t\n" +
	"\fErrorDetails\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x03(\tR\adetails\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp\"2\n" +
	"\x18GetWalletByUserIDRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"\xb7\x01\n" +
	"\x19GetWalletByUserIDResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x06wallet\x18\x03 \x01(\v2\x0e.wallet.WalletH\x00R\x06wallet\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.wallet.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result\"I\n" +
	"\x13CreateWalletRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"\xb2\x01\n" +
	"\x14CreateWalletResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x06wallet\x18\x03 \x01(\v2\x0e.wallet.WalletH\x00R\x06wallet\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.wallet.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result\"w\n" +
	"\x11FundWalletRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x16\n" +
	"\x06cardID\x18\x02 \x01(\tR\x06cardID\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\"\xb0\x01\n" +
	"\x12FundWalletResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x06wallet\x18\x03 \x01(\v2\x0e.wallet.WalletH\x00R\x06wallet\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.wallet.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result\"\x87\x01\n" +
	"\x17DeductFromWalletRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"\xb6\x01\n" +
	"\x18DeductFromWalletResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x06wallet\x18\x03 \x01(\v2\x0e.wallet.WalletH\x00R\x06wallet\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.wallet.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result\"1\n" +
	"\x17GetWalletBalanceRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"\xb6\x01\n" +
	"\x18GetWalletBalanceResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x06wallet\x18\x03 \x01(\v2\x0e.wallet.WalletH\x00R\x06wallet\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.wallet.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result\"6\n" +
	"\x1cGetWalletTransactionsRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"\x98\x01\n" +
	"\x1dGetWalletTransactionsResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12=\n" +
	"\ftransactions\x18\x03 \x03(\v2\x19.wallet.WalletTransactionR\ftransactions\"\xe3\x01\n" +
	"\x11WalletTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bwalletID\x18\x02 \x01(\tR\bwalletID\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\tR\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x128\n" +
	"\tcreatedAt\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"U\n" +
	"\x15RefundToWalletRequest\x12$\n" +
	"\rtransactionID\x18\x01 \x01(\tR\rtransactionID\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\"\xb4\x01\n" +
	"\x16RefundToWalletResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x06wallet\x18\x03 \x01(\v2\x0e.wallet.WalletH\x00R\x06wallet\x12,\n" +
	"\x05error\x18\x04 \x01(\v2\x14.wallet.ErrorDetailsH\x00R\x05errorB\b\n" +
	"\x06result2\xde\x04\n" +
	"\rWalletService\x12X\n" +
	"\x11GetWalletByUserID\x12 .wallet.GetWalletByUserIDRequest\x1a!.wallet.GetWalletByUserIDResponse\x12I\n" +
	"\fCreateWallet\x12\x1b.wallet.CreateWalletRequest\x1a\x1c.wallet.CreateWalletResponse\x12C\n" +
	"\n" +
	"FundWallet\x12\x19.wallet.FundWalletRequest\x1a\x1a.wallet.FundWalletResponse\x12U\n" +
	"\x10DeductFromWallet\x12\x1f.wallet.DeductFromWalletRequest\x1a .wallet.DeductFromWalletResponse\x12U\n" +
	"\x10GetWalletBalance\x12\x1f.wallet.GetWalletBalanceRequest\x1a .wallet.GetWalletBalanceResponse\x12d\n" +
	"\x15GetWalletTransactions\x12$.wallet.GetWalletTransactionsRequest\x1a%.wallet.GetWalletTransactionsResponse\x12O\n" +
	"\x0eRefundToWallet\x12\x1d.wallet.RefundToWalletRequest\x1a\x1e.wallet.RefundToWalletResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_wallet_proto_rawDescOnce sync.Once
	file_proto_wallet_proto_rawDescData []byte
)

func file_proto_wallet_proto_rawDescGZIP() []byte {
	file_proto_wallet_proto_rawDescOnce.Do(func() {
		file_proto_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_wallet_proto_rawDesc), len(file_proto_wallet_proto_rawDesc)))
	})
	return file_proto_wallet_proto_rawDescData
}

var file_proto_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_wallet_proto_goTypes = []any{
	(*Wallet)(nil),                        // 0: wallet.Wallet
	(*ErrorDetails)(nil),                  // 1: wallet.ErrorDetails
	(*GetWalletByUserIDRequest)(nil),      // 2: wallet.GetWalletByUserIDRequest
	(*GetWalletByUserIDResponse)(nil),     // 3: wallet.GetWalletByUserIDResponse
	(*CreateWalletRequest)(nil),           // 4: wallet.CreateWalletRequest
	(*CreateWalletResponse)(nil),          // 5: wallet.CreateWalletResponse
	(*FundWalletRequest)(nil),             // 6: wallet.FundWalletRequest
	(*FundWalletResponse)(nil),            // 7: wallet.FundWalletResponse
	(*DeductFromWalletRequest)(nil),       // 8: wallet.DeductFromWalletRequest
	(*DeductFromWalletResponse)(nil),      // 9: wallet.DeductFromWalletResponse
	(*GetWalletBalanceRequest)(nil),       // 10: wallet.GetWalletBalanceRequest
	(*GetWalletBalanceResponse)(nil),      // 11: wallet.GetWalletBalanceResponse
	(*GetWalletTransactionsRequest)(nil),  // 12: wallet.GetWalletTransactionsRequest
	(*GetWalletTransactionsResponse)(nil), // 13: wallet.GetWalletTransactionsResponse
	(*WalletTransaction)(nil),             // 14: wallet.WalletTransaction
	(*RefundToWalletRequest)(nil),         // 15: wallet.RefundToWalletRequest
	(*RefundToWalletResponse)(nil),        // 16: wallet.RefundToWalletResponse
	(*timestamppb.Timestamp)(nil),         // 17: google.protobuf.Timestamp
}
var file_proto_wallet_proto_depIdxs = []int32{
	17, // 0: wallet.Wallet.createdAt:type_name -> google.protobuf.Timestamp
	17, // 1: wallet.Wallet.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 2: wallet.GetWalletByUserIDResponse.wallet:type_name -> wallet.Wallet
	1,  // 3: wallet.GetWalletByUserIDResponse.error:type_name -> wallet.ErrorDetails
	0,  // 4: wallet.CreateWalletResponse.wallet:type_name -> wallet.Wallet
	1,  // 5: wallet.CreateWalletResponse.error:type_name -> wallet.ErrorDetails
	0,  // 6: wallet.FundWalletResponse.wallet:type_name -> wallet.Wallet
	1,  // 7: wallet.FundWalletResponse.error:type_name -> wallet.ErrorDetails
	0,  // 8: wallet.DeductFromWalletResponse.wallet:type_name -> wallet.Wallet
	1,  // 9: wallet.DeductFromWalletResponse.error:type_name -> wallet.ErrorDetails
	0,  // 10: wallet.GetWalletBalanceResponse.wallet:type_name -> wallet.Wallet
	1,  // 11: wallet.GetWalletBalanceResponse.error:type_name -> wallet.ErrorDetails
	14, // 12: wallet.GetWalletTransactionsResponse.transactions:type_name -> wallet.WalletTransaction
	17, // 13: wallet.WalletTransaction.createdAt:type_name -> google.protobuf.Timestamp
	0,  // 14: wallet.RefundToWalletResponse.wallet:type_name -> wallet.Wallet
	1,  // 15: wallet.RefundToWalletResponse.error:type_name -> wallet.ErrorDetails
	2,  // 16: wallet.WalletService.GetWalletByUserID:input_type -> wallet.GetWalletByUserIDRequest
	4,  // 17: wallet.WalletService.CreateWallet:input_type -> wallet.CreateWalletRequest
	6,  // 18: wallet.WalletService.FundWallet:input_type -> wallet.FundWalletRequest
	8,  // 19: wallet.WalletService.DeductFromWallet:input_type -> wallet.DeductFromWalletRequest
	10, // 20: wallet.WalletService.GetWalletBalance:input_type -> wallet.GetWalletBalanceRequest
	12, // 21: wallet.WalletService.GetWalletTransactions:input_type -> wallet.GetWalletTransactionsRequest
	15, // 22: wallet.WalletService.RefundToWallet:input_type -> wallet.RefundToWalletRequest
	3,  // 23: wallet.WalletService.GetWalletByUserID:output_type -> wallet.GetWalletByUserIDResponse
	5,  // 24: wallet.WalletService.CreateWallet:output_type -> wallet.CreateWalletResponse
	7,  // 25: wallet.WalletService.FundWallet:output_type -> wallet.FundWalletResponse
	9,  // 26: wallet.WalletService.DeductFromWallet:output_type -> wallet.DeductFromWalletResponse
	11, // 27: wallet.WalletService.GetWalletBalance:output_type -> wallet.GetWalletBalanceResponse
	13, // 28: wallet.WalletService.GetWalletTransactions:output_type -> wallet.GetWalletTransactionsResponse
	16, // 29: wallet.WalletService.RefundToWallet:output_type -> wallet.RefundToWalletResponse
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_wallet_proto_init() }
func file_proto_wallet_proto_init() {
	if File_proto_wallet_proto != nil {
		return
	}
	file_proto_wallet_proto_msgTypes[3].OneofWrappers = []any{
		(*GetWalletByUserIDResponse_Wallet)(nil),
		(*GetWalletByUserIDResponse_Error)(nil),
	}
	file_proto_wallet_proto_msgTypes[5].OneofWrappers = []any{
		(*CreateWalletResponse_Wallet)(nil),
		(*CreateWalletResponse_Error)(nil),
	}
	file_proto_wallet_proto_msgTypes[7].OneofWrappers = []any{
		(*FundWalletResponse_Wallet)(nil),
		(*FundWalletResponse_Error)(nil),
	}
	file_proto_wallet_proto_msgTypes[9].OneofWrappers = []any{
		(*DeductFromWalletResponse_Wallet)(nil),
		(*DeductFromWalletResponse_Error)(nil),
	}
	file_proto_wallet_proto_msgTypes[11].OneofWrappers = []any{
		(*GetWalletBalanceResponse_Wallet)(nil),
		(*GetWalletBalanceResponse_Error)(nil),
	}
	file_proto_wallet_proto_msgTypes[16].OneofWrappers = []any{
		(*RefundToWalletResponse_Wallet)(nil),
		(*RefundToWalletResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_wallet_proto_rawDesc), len(file_proto_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_wallet_proto_goTypes,
		DependencyIndexes: file_proto_wallet_proto_depIdxs,
		MessageInfos:      file_proto_wallet_proto_msgTypes,
	}.Build()
	File_proto_wallet_proto = out.File
	file_proto_wallet_proto_goTypes = nil
	file_proto_wallet_proto_depIdxs = nil
}
